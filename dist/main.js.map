{"mappings":"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","sources":["src/index.js","src/krakenHelpers/krakenHelpers.js","src/krakenHelpers/helpers/krakenAnalysisHelpers.js","src/krakenHelpers/helpers/krakenArrayHelpers.js","src/krakenHelpers/helpers/krakenNumberHelpers.js","src/krakenHelpers/helpers/krakenObjectHelpers.js","src/krakenHelpers/helpers/krakenValueHelpers.js","src/krakenHelpers/helpers/krakenDateHelpers.js","src/krakenHelpers/helpers/krakenThingHelpers.js","src/krakenHelpers/helpers/krakenUrlHelpers.js","src/krakenHelpers/helpers/krakenJsonHelpers.js","src/krakenHelpers/helpers/krakenStringHelpers.js","src/krakenHelpers/helpers/krakenTextTable.js","src/krakenHelpers/helpers/krakenTimer.js"],"sourcesContent":["\n\nimport {krakenHelpers as krakenHelpersObject} from './krakenHelpers/krakenHelpers.js'\n\nexport const krakenHelpers = krakenHelpersObject","\nimport { krakenAnalysisHelpers } from './helpers/krakenAnalysisHelpers.js'\n\nimport { krakenArrayHelpers } from './helpers/krakenArrayHelpers.js'\nimport { krakenDateHelpers } from './helpers/krakenDateHelpers.js'\nimport { krakenJsonHelpers } from './helpers/krakenJsonHelpers.js'\nimport { krakenNumberHelpers } from './helpers/krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './helpers/krakenObjectHelpers.js'\nimport { krakenStringHelpers } from './helpers/krakenStringHelpers.js'\nimport { krakenTextTable } from './helpers/krakenTextTable.js'\nimport { krakenThingHelpers } from './helpers/krakenThingHelpers.js'\nimport { krakenUrlHelpers } from './helpers/krakenUrlHelpers.js'\nimport { krakenValueHelpers } from './helpers/krakenValueHelpers.js'\n\nimport { KrakenTimer } from './helpers/krakenTimer.js'\n\n\nexport const krakenHelpers = {\n    analysis: krakenAnalysisHelpers,\n    array: krakenArrayHelpers,\n    date: krakenDateHelpers,\n    json: krakenJsonHelpers,\n    number: krakenNumberHelpers,\n    object: krakenObjectHelpers,\n    string: krakenStringHelpers,\n    textTable: krakenTextTable,\n    thing: krakenThingHelpers,\n    Timer: KrakenTimer,\n    url: krakenUrlHelpers,\n    value: krakenValueHelpers\n}","import { krakenArrayHelpers as ka } from \"./krakenArrayHelpers.js\";\nimport { krakenValueHelpers as kv } from \"./krakenValueHelpers.js\";\n\nexport const krakenAnalysisHelpers = {\n\n    analyzeValues: analyzeValues,\n    analyze: analyze\n};\n\n\n\nfunction analyze(value){\n\n    value = ka.ensureArray(value)\n    \n    let keys = ka.getKeys(value)\n\n    let analysis = {}\n    for(let k of keys){\n        analysis[k] = analyzeValues(value, k)\n    }\n\n    return analysis\n}\n\nfunction analyzeValues(value, key) {\n    let analysis = {\n        type: null,\n        types: {},\n        typeSchemaOrg: null,\n        typesSchemaOrg: {},\n        values: {},\n        N: null,\n        nullN: null,\n        uniqueN: null,\n        min: null,\n        max: null,\n        stddev: null\n    };\n\n    let values = ka.getValuesForKey(value, key);\n\n    for (let v of values) {\n        \n        // Get type\n        let t = kv.getType(v)\n        analysis.types[t] = (analysis.types[t] || 0) + 1;\n\n        if(t && t != null){\n            let s = analysis.type\n            if(s && s != null && s != t){\n                analysis.type = 'na'\n            } else {\n                analysis.type = t\n            }\n        }\n\n        \n        // Get schema type\n        let tt = kv.getTypeSchemaOrg(v)\n        analysis.typesSchemaOrg[tt] = (analysis.typesSchemaOrg[tt] || 0) + 1;\n\n        if(tt && tt != null){\n            let s = analysis.typeSchemaOrg\n            if(s && s != null && s != tt){\n                analysis.typeSchemaOrg = 'na'\n            } else {\n                analysis.typeSchemaOrg = tt\n            }\n        }\n        \n        // Get value\n        let newV = v;\n        if (newV[\"@type\"]) {\n            newV = `${newV[\"@type\"]}/${newV[\"@id\"]}`;\n        }\n        analysis.values[newV] = (analysis.values[newV] || 0) + 1;\n\n        // get min / max\n        analysis.N = ka.getN(value, key)\n        analysis.nullN = ka.getNull(value, key)\n        analysis.uniqueN = ka.getUniqueN(value, key)\n        analysis.min = ka.getMin(value, key);\n        analysis.max = ka.getMax(value, key);\n        analysis.stddev = ka.getStandardDeviation(value, key);\n        \n        \n    }\n\n    return analysis;\n}\n","import { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nexport const krakenArrayHelpers = {\n\n    isArray: validateArray,\n    validateArray: validateArray,\n    toArray: ensureArray,\n    ensureArray: ensureArray,\n    getKeys: getKeys,\n    keys: getKeys,\n    getValuesForKey: getValuesForKey,\n    getNumbersForKey: getNumbersForKey,\n    getMax: getMax,\n    getMin: getMin,\n    getN: getN,\n    getNull: getNull,\n    getSum: getSum,\n    getAverage: getAverage,\n    getStandardDeviation: getStandardDeviation,\n    stddev: getStandardDeviation,\n    getMaxRecord: getMax,\n    getMinRecord: getMin,\n    getNRecord: getN,\n    getSumRecord: getSum,\n    getAverageRecord: getAverage,\n    getStandardDeviationRecord: getStandardDeviation,\n    getStatsRecord: getStatsRecord,\n    getUniqueN: getUniqueN\n    \n}\n\n\nfunction validateArray(value){\n\n    if(Array.isArray(value)){ return true }\n    return false\n    \n}\n\n\n\nfunction ensureArray(value) {\n\n    if(!value || value == null || value == {}){ return [] }\n\n    if (validateArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction toText(value) {\n\n    if(validateArray(value) == false){ return undefined }\n\n    let result = `[${value.length}]`\n    return result\n    \n}\n\nfunction getKeys(value){\n    if(validateArray(value) == false){ return undefined }\n\n    let keys = []\n    for(let v of value){\n        for(let k of Object.keys(v)){\n            if(!keys.includes(k)){\n                keys.push(k)\n            }\n        }\n    }\n    keys.sort()\n    return keys\n}\n\n\n// -----------------------------------------------------\n//  Columns focused methods \n// -----------------------------------------------------\n\n\n\nfunction getValuesForKey(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let results = []\n    for(let v of value){\n        let v1 = v?.[key] \n        if(v1){\n            results.push(v1)\n        }\n    }\n    return results\n    \n}\n\nfunction getNumbersForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    value = ensureArray(value)\n    \n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        let newItem = krakenNumberHelpers.toNumber(item)\n        if(krakenNumberHelpers.isNumber(newItem) == true){\n            results.push(newItem)\n        }\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            let quantItem = krakenNumberHelpers.toNumber(item?.value)\n            if(krakenNumberHelpers.isNumber(quantItem) == true){\n                results.push(quantItem)\n            }\n        }\n    }\n    return results    \n}\n\nfunction getUnitCodesForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            results.push(item.unitCode)\n        }\n    }\n    return results    \n}\n\nfunction getMax(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n    \n    let result = Math.max(...items)\n\n    return result\n    \n}\n\nfunction getMaxRecord(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getMax(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('maxValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\n\nfunction getMin(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = Math.min(...items)\n\n    return result\n\n}\n\nfunction getMinRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getMin(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('minValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getN(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = items.length\n\n    return result\n    \n}\n\nfunction getNRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getN(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('count', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getSum(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    return result\n\n}\n\nfunction getSumRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getSum(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('sum', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getAverage(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let sumAll = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    let result = sumAll / items.length\n\n    return result\n}\n\nfunction getAverageRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getAverage(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n    \n    return getStatsRecord('average', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getStandardDeviation(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let n = items.length\n    let mean = items.reduce((a, b) => a + b) / n\n    let result =  Math.sqrt(items.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n\n    return result\n}\n\nfunction getStandardDeviationRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getStandardDeviation(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('marginOfError', key, result, unitCode)\n\n}\n\nfunction getNull(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let nullValues = 0\n    for(let v of value){\n\n        \n        if ((!v || v == null || v == \"\" || v == {} || v == []) && v!== 0){\n            nullValues + 1\n        }\n    }\n\n    return nullValues\n\n}\n\nfunction getUniqueN(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n\n    let uniqueValues = [...new Set(value)];\n\n    let result = uniqueValues.length\n    \n\n    return result\n\n}\n\n// -----------------------------------------------------\n//  Statistical record \n// -----------------------------------------------------\n\nfunction getStatsRecord(statType, property, value, unitCode){\n\n\n    let record = {\n        \"@context\": \"https://schema.org/\",\n        \"@id\": \"Observation_Median_Age_Person_Female_SanAntonio_TX_2014\",\n        \"@type\": \"Observation\",\n        \"name\": name,\n        \"variableMeasured\": {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"StatisticalVariable\",\n            \"@id\": \"Median_Height_Person_Female\",\n            \"name\": statType,\n            \"measuredProperty\": {\"@id\": property },\n            \"statType\": {\"@id\": statType},\n            \"constrainingProperty\": []\n        },\n        \"observationAbout\": {},\n        \"value\": value,\n        \"unitCode\": unit\n    }\n\n    return record\n\n}","\n\nexport const krakenNumberHelpers = {\n\n    isNumber: isNumber,\n    toNumber: toNumber,\n    toText: toText\n}\n\n\nfunction isNumber(value){\n    \n    return typeof value === 'number';\n    \n}\n\nfunction toNumber(value){\n\n    if(typeof value === 'number') { return value }\n    \n    try { \n        value = Number(value)\n        return value\n    } catch {\n\n    }\n\n    return undefined\n}\n\n\nfunction toText(value, rounding){\n\n    value = toNumber(value)\n\n    if((!value || value == null) && value != 0) { return undefined }\n\n    if(rounding | rounding != null){\n        value = Math.round(value)\n    }\n\n    return String(value)\n    \n}\n\n","\n\nexport const krakenObjectHelpers = {\n\n    isObject: isObject,\n    getKeys: getKeys,\n    keys: getKeys,\n    toText: toText\n    \n}\n\n\nfunction isObject(value){\n\n    return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nfunction getKeys(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    let keys = Object.keys(value)\n    keys.sort()\n    return keys\n}\n\n\nfunction toText(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    if(value['@type']){\n\n        return `${value[\"@type\"]}/${value['@id']}`\n    } else {\n\n        let keys = Object.keys(value)\n        if(keys.length == 0){ return '{}'}\n\n        return `{\"${keys[0]}\": \"${value[keys[0]]}\", ... }`\n        \n    }\n\n    \n}\n\n","import { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\nimport { krakenUrlHelpers } from './krakenUrlHelpers.js'\n\n\nexport const krakenValueHelpers = {\n\n    toText: toText,\n    getType: getType,\n    getTypeSchemaOrg: getTypeSchemaOrg,\n    innerValuesToText: innerValuesToText,\n    valuesToText: innerValuesToText\n}\n\nfunction toText(value) {\n    \n    if ((!value || value == null || value == [] || value == {}) && value != 0) { return '' }\n\n\n    \n    if (krakenThingHelpers.isThing(value)) {\n        return krakenThingHelpers.toText(value)\n    } else if (krakenDateHelpers.isDate(value)) {\n        return krakenDateHelpers.toText(value)\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return krakenArrayHelpers.toText(value)\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return krakenNumberHelpers.toText(value)\n    } else if (krakenObjectHelpers.isObject(value)) {\n        return krakenObjectHelpers.toText(value)\n    } else {\n        return String(value)\n    }\n}\n\n\nfunction innerValuesToText(value){\n    \n    if (krakenArrayHelpers.isArray(value)) {\n        let result = []\n        for(let v of value){\n            result.push(innerValuesToText(v))\n        }\n        return result\n    } \n\n    if(krakenObjectHelpers.isObject(value)){\n\n        let result = {}\n        for(let k of krakenObjectHelpers.keys(value)){\n            result[k] = toText(value[k])\n        }\n        return result \n    }\n    return toText(value)\n}\n\n\nfunction getType(value) {\n\n    if (krakenThingHelpers.isThing(value)) {\n        return 'thing'\n    } else if (krakenDateHelpers.isDate(value)) {\n        return 'datetime'\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return 'array'\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return 'number'\n    } else {\n        return 'string'\n    }\n\n}\n\n\nfunction getTypeSchemaOrg(value){\n\n    let t = getType(value)\n\n\n    if(t == \"thing\"){\n        return value['@type']\n    }\n    \n    if(t == \"string\"){\n        if(krakenUrlHelpers.toUrl(value)){\n            return 'url'\n        }\n        \n    }\n\n    return t\n\n    \n}\n\n","\n\n\nexport const krakenDateHelpers = {\n\n    // Base\n    getDuration: getDuration,\n    getDurationRecord: getDurationRecord,\n    toDate: toDate,\n    toText: toText,\n    validateDate: validateDate,\n    \n    // Shortcuts\n    isDate: validateDate,\n    getDate: toDate,\n    duration: getDuration,\n    durationRecord: getDurationRecord,\n\n}\n\n\nfunction validateDate(value){\n    if(value instanceof Date) { return true }\n    return false\n}\n\n\nfunction toText(value){\n\n    if(validateDate(value) == false){ return undefined }\n\n    let formattedDate = value.toISOString().split('.')[0]\n    formattedDate.replace('T', ', ')\n\n    return formattedDate\n}\n\n\nfunction toDate(value){\n    \n    if(validateDate(value) == true){ return value }\n\n    try {\n        if (typeof value !== 'string') {\n            return undefined;\n        }\n\n        const date = new Date(value);\n\n        \n        if (isNaN(date.getTime())) {\n            return undefined;\n        }\n\n        return date;\n        \n    } catch (error) {\n        return undefined\n    }\n}\n\n\nfunction getDuration(date1, date2){\n\n    date1 = toDate(date1)\n    date2 = toDate(date2)\n\n    \n    if(validateDate(date1) == false){ return undefined }\n    if(validateDate(date2) == false){ return undefined }\n\n    let startDate \n    let endDate\n    \n    if(date1 < date2){\n        startDate = date1\n        endDate = date2\n    } else {\n        startDate = date2\n        endDate = date1\n    }\n\n    let duration = (endDate - startDate) / 1000\n    return duration\n    \n}\n\nfunction getDurationRecord(date1, date2){\n\n    let duration = getDuration(date1, date2)\n\n    let result = {\n        \"@type\": \"QuantitativeValue\",\n        \"@id\": String(crypto.randomUUID()),\n        \"unitCode\": \"SEC\",\n        \"unitText\": \"s\",\n        'value': duration\n    }            \n\n    \n    return result\n\n}\n\n","\n\nexport const krakenThingHelpers = {\n\n    isValid: validateThing,\n    isThing: validateThing,\n    validateThing: validateThing,\n    getRefRecord: getRefRecord,\n    ref: getRefRecord,\n    toText: toText\n    \n}\n\n\nfunction validateThing(value){\n\n    if(!value['@type']){ return false }\n    return true\n}\n\nfunction getRefRecord(value){\n\n    if(validateThing(value) == false ) { return undefined }\n    \n    let result = {\n        \"@type\": value['@type'],\n        \"@id\": value['@id']\n    }\n    return result\n    \n}\n\nfunction toText(value){\n\n    if(validateThing(value) == false ) { return undefined }\n\n    let record_type = value['@type']\n    let record_id = value['@id']\n\n    \n    if(record_type == 'QuantitativeValue'){\n        \n        let result = `${value['value']} ${value['unitText'] || value['unitCode'] || ''}`\n        return result\n    }\n\n    if(record_type == \"DefinedTerm\"){\n\n        if(value.name && value.name != null){ return value.name }\n        if(value.termCode && value.termCode != null){ return value.termCode }\n        \n    }\n\n    if(record_type == 'Person'){\n\n        if(value['givenName'] && value['familyName']){\n            return `${value['givenName']} ${value['familyName']}`\n        }\n    }\n\n    if(record_type == 'PostalAddress'){\n\n        \n    }\n    \n    \n    let result = `${value['@type']}/${value['@id']}`\n      \n    return result\n\n}","\n\nexport const krakenUrlHelpers = {\n\n    getDomain: getDomain,\n    domain: getDomain,\n    getUrl: getUrl,\n    toUrl: getUrl\n    \n}\n\nfunction isUrl(value){\n\n    if(!value || value == null){ return false }\n\n    if(value instanceof URL) { return true }\n\n\n    \n}\n\nfunction getUrl(baseUrl, path, params) {\n    \n    try {\n        if (!baseUrl || typeof baseUrl !== 'string') {\n            throw new Error('Invalid base URL');\n        }\n        \n        if (!path ) {\n            path = '';\n        }\n        if (typeof path !== 'string') {\n            throw new Error('Invalid path');\n        }\n        if (params && typeof params !== 'object') {\n            throw new Error('Invalid params');\n        }\n\n        let url = new URL(path, baseUrl);\n\n        if (params) {\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null) {\n                    url.searchParams.append(key, params[key]);\n                }\n            });\n        }\n\n        return url.toString();\n        \n    } catch (error) {\n        //console.error('Error building URL:', error.message);\n        return null;\n    }\n}\n\n\n\n\n\n\nfunction getDomain(value){\n\n    try {\n\n        if(!value || value == null){ return undefined }\n\n        if(!(value instanceof URL)) { \n\n            if(typeof value != 'string'){\n                return undefined\n            }\n\n            value = new URL(value);\n        }\n\n\n        let domain = value.hostname\n\n        console.log('d', domain)\n        domain = domain.replace('www.', '')\n\n        if (domain == 'wrong.protocol'){ return undefined }\n        \n        // Use URL constructor to parse the URL\n        return domain;\n\n        \n    } catch (error) {\n        // If an error occurs, return an appropriate error message\n        return undefined;\n    }\n   \n    \n    \n}","\n\n\nexport const krakenJsonHelpers = {\n\n    get: getPropertyValueFromDot,\n    getPropertyValueFromDot: getPropertyValueFromDot,\n    set: setPropertyValueFromDot,\n    setPropertyValueFromDot:setPropertyValueFromDot,\n    flatten: objectToDotNotation,\n    objectToDotNotation: objectToDotNotation,\n    simplify: simplify\n\n}\n\n\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n    var items =key.split('.');\n    for (let t=0; t<items.length; t++){\n        value = value[items[t]];\n    };\n    return value;\n}\n\n\n\n\nfunction setPropertyValueFromDot(key, record, value){\n    // Retrieves value by following dot notation\n\n    var items = key.split('.');\n\n    let item = items[0]\n\n    \n    if(items.length > 1){\n        if(!record[item]){\n            record[item] = {}\n        }\n        \n        setPropertyValueFromDot(items.slice(1).join('.'), record[item], value)\n    } else {\n\n        record[item] = value\n    }\n\n    return record;\n}\n\n\n\n\nfunction objectToDotNotation(obj, parentPrefix = '') {\n    let result = {};\n\n    // Helper function to handle recursion and path building\n    function recurse(o, path) {\n        for (let key in o) {\n            if (o.hasOwnProperty(key)) {\n                const newPath = path ? `${path}.${key}` : key;\n\n                // If the property is an object or array, recurse further\n                if (typeof o[key] === 'object' && o[key] !== null) {\n                    recurse(o[key], newPath);\n                } else {\n                    // Otherwise, add the property to the result\n                    result[newPath] = o[key];\n                }\n            }\n        }\n    }\n\n    recurse(obj, parentPrefix);\n    return result;\n}\n\n\n\n\nfunction simplify(data) {\n    // Remove arrays of 1\n    if (Array.isArray(data)) {\n        // If the array has exactly one element, return that element\n        if (data.length === 1) {\n            return simplify(data[0]);\n        } else {\n            // Otherwise, process each element in the array\n            return data.map(simplify);\n        }\n    } else if (data !== null && typeof data === 'object') {\n        // If the data is an object, process each key\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = simplify(data[key]);\n            }\n        }\n        return newData;\n    } else {\n        // If the data is neither an array nor an object, return it as is\n        return data;\n    }\n}\n","\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\n\n\nexport const krakenStringHelpers = {\n\n    extractMentions: extractMentions,\n    extractNames: extractNames,\n    extractValueAndUnit: extractValueAndUnit,\n    extractUrls: extractUrls,\n    extractNumbers: extractNumbers,\n    extractPhoneNumbers: extractPhoneNumbers,\n    extractDates: extractDates,\n    extractEmails: extractEmails,\n    \n    \n}\n\n\nfunction extractMentions(text) {\n    // Error handling for invalid input\n    if (typeof text !== 'string') {\n        throw new Error('Input must be a string');\n    }\n\n    // Regular expression to match mentions\n    const mentionRegex = /\\B@\\w+/g;\n    const mentions = text.match(mentionRegex);\n\n    // Return an empty array if no mentions found\n    return mentions ? mentions : [];\n}\n\nfunction extractNames(inputString) {\n    if (typeof inputString !== 'string') {\n        throw new TypeError('Input must be a string');\n    }\n\n    const namePattern = /\\b[A-Z][a-z]*\\b/g;\n    const names = inputString.match(namePattern);\n\n    return names || [];\n}\n\nfunction extractValueAndUnit(input) {\n    if (typeof input !== 'string') {\n        throw new Error('Input must be a string');\n    }\n\n    const regex = /(-?\\d+\\.?\\d*)\\s*([a-zA-Z]+)/;\n    const match = input.match(regex);\n\n    if (!match) {\n        throw new Error('No value and unit found in the input string');\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n\n    return { value, unit };\n}\n\n\n\n\nfunction extractNumbers(input) {\n    if (typeof input !== 'string') {\n        throw new Error('Input must be a string');\n    }\n\n    const numbers = input.match(/\\d+/g);\n    if (numbers === null) {\n        return [];\n    }\n\n    return numbers.map(Number);\n}\n\n\nfunction extractPhoneNumbers(input) {\n    // Error handling: check if input is a string\n    if (typeof input !== 'string') {\n        throw new Error('Input must be a string');\n    }\n\n    // Regular expression to match different telephone number formats\n    //const phoneRegex = /(\\+?\\d{1,2}[-.\\s]?)?(\\(?\\d{3}\\)?[-.\\s]?)?\\d{3}[-.\\s]?\\d{4}/g;\n    const phoneRegex = /(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})/g\n\n\n    // Extract phone numbers\n    const phoneNumbers = input.match(phoneRegex);\n\n    // If no phone numbers are found, return an empty array\n    if (!phoneNumbers) {\n        return [];\n    }\n\n    return phoneNumbers;\n}\n\n\n\n\n\nfunction extractDates(input) {\n    try {\n        if (typeof input !== 'string') {\n            return []\n        }\n\n        // Regular expression to match dates in YYYY-MM-DD, DD/MM/YYYY, or MM-DD-YYYY format\n        const datePattern = /\\b(\\d{4}-\\d{2}-\\d{2}|\\d{2}\\/\\d{2}\\/\\d{4}|\\d{2}-\\d{2}-\\d{4})\\b/g;\n        const dates = input.match(datePattern);\n\n        if (!dates) {\n            return [];\n        }\n\n        let validDates = []\n        for(let date of dates){\n\n            let d = krakenDateHelpers.toDate(date) \n            if(d && d != null){\n                validDates.push(d)\n            }\n        }\n        \n        return validDates;\n        \n    } catch (error) {\n        return [];\n    }\n}\n\n\nfunction extractEmails(text) {\n  try {\n    // Check if the input is a string\n    if (typeof text !== 'string') {\n      throw new Error('Input must be a string');\n    }\n\n    // Regular expression for matching email addresses\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,7}\\b/g;\n    const emails = text.match(emailRegex);\n\n    // Check if any emails were found\n    if (emails === null) {\n      throw new Error('No email addresses found');\n    }\n\n    return emails;\n  } catch (error) {\n    return `Error: ${error.message}`;\n  }\n}\n\n\nfunction extractUrls(text) {\n    try {\n        if (typeof text !== 'string') {\n            throw new Error('Input must be a string');\n        }\n\n        const urlRegex = /https?:\\/\\/[^\\s/$.?#].[^\\s]*/g;\n        const urls = text.match(urlRegex);\n\n        if (!urls) {\n            return [];\n        }\n\n        return urls;\n    } catch (error) {\n        console.error('An error occurred:', error.message);\n        return [];\n    }\n}\n","\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenValueHelpers } from './krakenValueHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nlet MAX_WIDTH = 30\n\nexport function krakenTextTable(records, keys, headers){\n\n\n    let content = ''\n    \n    // Duplicate records\n    records = JSON.parse(JSON.stringify(records))\n\n    // If record, convert properties to array\n    if(krakenArrayHelpers.isArray(records) == false){\n        if(krakenObjectHelpers.isObject(records) == true){\n\n            let values = []\n            let keys = Object.keys(records)\n            for(let k of keys){\n                let v = records[k]\n                v.propertyID = k\n                values.push(v)\n            }\n            records = values\n        } \n    }\n    \n\n    \n    // Build keys from records keys if missing\n    if(!keys || keys == null){\n        keys = krakenArrayHelpers.getKeys(records)\n    }\n   \n    // Build headers from keys if missing\n    if(!headers || headers == null){\n        headers = keys\n    }\n\n    // Convert values\n    records = krakenValueHelpers.valuesToText(records)\n\n    // Get max length for each keys\n    let keysLength = {}\n    let totalLength = 0\n    \n    for(let i=0; i < keys.length; i++){\n\n        let key = keys[i]\n        let header = headers[i]\n    \n        let values = krakenArrayHelpers.getValuesForKey(records, key)\n        keysLength[key] = header.length\n\n        for(let v of values){\n            let l = v.length\n            \n            if ( l > keysLength[key] ){\n                keysLength[key] = l\n            }\n        }\n        totalLength += keysLength[key] + 2\n    }\n\n    \n\n    // Build table header\n\n    // Top bar line\n    content += `${''.padEnd(totalLength, '-')}`\n    content +='\\n'\n\n    // Headings\n    for(let i=0; i < keys.length; i++){\n        let key = keys[i]\n        let header = headers[i]\n        content += `${header.padEnd(keysLength[key] + 2, ' ')}`\n    }\n    content +='\\n'\n    \n    for(let key of keys){\n        content += `${''.padEnd(keysLength[key] + 2, '-')}`\n    }\n    content += '\\n'\n\n    \n    // Build table rows\n    for(let record of records){\n        for(let key of keys){\n            \n            let c = String(record?.[key]) || ''\n            if(c.length > MAX_WIDTH){ c = c.slice(0, MAX_WIDTH -3) + '... '}\n            c = c.padEnd(keysLength[key] + 2, ' ')\n            content += `${c}`\n        }\n        content += '\\n'\n    }\n    \n\n    \n    \n    content += `${''.padEnd(totalLength, '-')}`\n    content += '\\n'\n\n    return content\n    \n}","\nimport { krakenTextTable } from './krakenTextTable.js'\n\n\nexport class KrakenTimer {\n\n    constructor(name) {\n\n        this.name = name\n        this.milestones = []\n\n        this.start()\n       \n    }\n\n    getMilestone(name){\n        for(let m of this.milestones){\n            if (m.name == name) { return m }\n        }\n        return undefined\n    }\n    \n    addMilestone(name){\n        // Adds a milestone\n\n        if (!name || name == null){\n            name = 'break ' + String(this.milestones.length)\n        }\n        \n        let milestone = {\n            \"@type\": \"Event\",\n            \"@id\": String(crypto.randomUUID()),\n            \"name\": name,\n            \"endTime\": new Date()\n        }\n        this.milestones.push(milestone)\n    }\n\n    break(name){\n        this.addMilestone(name)\n    }\n\n    start(){\n        this.milestones = []\n        this.addMilestone('start')\n    }\n\n    end(){\n       \n        this.addMilestone('end')\n    }\n\n    \n    getDuration(startMilestone, endMilestone){\n\n        if(!endMilestone || endMilestone == null){\n            endMilestone = startMilestone\n            startMilestone = 'start'\n        }\n        if(!startMilestone){\n            startMilestone = 'start'\n            endMilestone = 'end'\n        }    \n\n        let startTime = this.getMilestone('start')?.endTime\n        let endTime = this.getMilestone('end')?.endTime ?? new Date()\n\n        let duration = (endTime - startTime) / 1000\n\n        return duration\n    \n        \n    }\n\n    get duration(){\n        return this.getDuration()\n    }\n\n    getResults(){\n\n        let results = []\n\n        // Set first milestone to 0\n        this.milestones[0].duration = {\n            \"@type\": \"QuantitativeValue\",\n            \"@id\": String(crypto.randomUUID()),\n            \"unitCode\": \"SEC\",\n            \"unitText\": \"s\",\n            'value': 0\n        }            \n        \n        for(let i=1; i< this.milestones.length -1; i++){\n            let currentMilestone = this.milestones[i]\n            let previousMilestone = this.milestones[i-1]\n            let duration = (currentMilestone.endTime - previousMilestone.endTime) / 1000\n            currentMilestone.duration = {\n                \"@type\": \"QuantitativeValue\",\n                \"@id\": String(crypto.randomUUID()),\n                \"unitCode\": \"SEC\",\n                \"unitText\": \"s\",\n                'value': duration\n            }            \n            results.push(currentMilestone)\n        }\n\n         // Add milestone for total\n\n        if(this.milestones.length > 2){\n            let endMilestone = {\n                \"@type\": \"Event\",\n                \"@id\": String(crypto.randomUUID()),\n                \"name\": \"Total\",\n                \"duration\": {\n                        \"@type\": \"QuantitativeValue\",\n                        \"@id\": String(crypto.randomUUID()),\n                        \"unitCode\": \"SEC\",\n                        \"unitText\": \"s\",\n                        'value': this.duration\n                    }            \n            }\n            results.push(endMilestone)\n        }\n        \n        return results\n        \n    }\n\n    console(){\n\n        \n        let results = this.getResults()\n\n        let keys = ['name', 'duration']\n        let headers = ['Timer milestone', 'Duration']\n\n        let content = krakenTextTable(results, keys, headers)\n\n        console.log(content)\n    }\n    \n}"],"names":[],"version":3,"file":"main.js.map"}