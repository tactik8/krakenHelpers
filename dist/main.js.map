{"mappings":"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AS;gBACT,MAAM;gBACN,OAAO;oBACH,YAAY;oBACZ,SAAS;oBACT,OAAO;oBACP,MAAM;oBACN,YAAY;gBAChB;YACJ;SACH;QACD,QAAQ;YACJ,SAAS;YACT,MAAM;YACN,OAAO;gBACH,YAAY;gBACZ,SAAS;gBACT,OAAO;gBACP,MAAM;gBACN,YAAY;YAChB;QACJ;QACA,MAAM;YACF;gBACI,SAAS;gBACT,UAAU;gBACV,UACI;gBACJ,MAAM;gBACN,OAAO;oBACH,YAAY;oBACZ,SAAS;oBACT,OAAO;oBACP,MAAM;oBACN,YAAY;gBAChB;gBACA,iBAAiB;oBACb;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;oBACA;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;iBACH;YACL;YACA;gBACI,SAAS;gBACT,UAAU;gBACV,UACI;gBACJ,MAAM;gBACN,OAAO;oBACH,YAAY;oBACZ,SAAS;oBACT,OAAO;oBACP,MAAM;oBACN,YAAY;gBAChB;gBACA,iBAAiB;oBACb;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;oBACA;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;iBACH;YACL;YACA;gBACI,SAAS;gBACT,UAAU;gBACV,UACI;gBACJ,MAAM;gBACN,OAAO;oBACH,YAAY;oBACZ,SAAS;oBACT,OAAO;oBACP,MAAM;oBACN,YAAY;gBAChB;gBACA,iBAAiB;oBACb;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;oBACA;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;iBACH;YACL;YACA;gBACI,SAAS;gBACT,UAAU;gBACV,UACI;gBACJ,MAAM;gBACN,OAAO;oBACH,YAAY;oBACZ,SAAS;oBACT,OAAO;oBACP,MAAM;oBACN,YAAY;gBAChB;gBACA,iBAAiB;oBACb;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;oBACA;wBACI,SAAS;wBACT,UAAU;wBACV,MAAM;oBACV;iBACH;YACL;YACA;gBACI,SAAS;gBACT,UAAU;gBACV,UACI;gBACJ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","sources":["src/index.js","src/krakenHelpers/krakenHelpers.js","src/krakenHelpers/src/base/krakenBaseHelpers.js","src/krakenHelpers/src/base/src/krakenAnalysisHelpers.js","src/krakenHelpers/src/base/src/krakenNullHelpers.js","src/krakenHelpers/src/base/src/krakenArrayHelpers.js","src/krakenHelpers/src/base/src/krakenNumberHelpers.js","src/krakenHelpers/src/base/src/krakenDotNotationHelpers.js","src/krakenHelpers/src/base/src/krakenJsonHelpers.js","src/krakenHelpers/src/base/src/krakenUuidHelpers.js","src/krakenHelpers/src/base/src/krakenObjectHelpers.js","src/krakenHelpers/src/base/src/krakenBaseThingHelpers.js","src/krakenHelpers/src/base/src/krakenColorHelpers.js","src/krakenHelpers/src/base/src/krakenDateHelpers.js","src/krakenHelpers/src/base/src/krakenEmailHelpers.js","src/krakenHelpers/src/base/src/krakenHashHelpers.js","src/krakenHelpers/src/base/src/krakenHeadingHelpers.js","src/krakenHelpers/src/base/src/krakenRegexHelpers.js","src/krakenHelpers/src/base/src/krakenSimpleThingHelpers.js","src/krakenHelpers/src/base/src/krakenValueHelpers.js","src/krakenHelpers/src/base/src/krakenFileHelpers.js","src/krakenHelpers/src/base/src/krakenStorageHelpers.js","src/krakenHelpers/src/base/src/krakenStringHelpers.js","src/krakenHelpers/src/base/src/krakenStringOperationHelpers.js","src/krakenHelpers/src/base/src/krakenTagHelpers.js","src/krakenHelpers/src/base/src/krakenTemplateHelpers.js","src/krakenHelpers/src/base/src/krakenTestHelpers.js","src/krakenHelpers/src/base/src/krakenTextTable.js","src/krakenHelpers/src/base/src/krakenUriTemplateHelpers.js","src/krakenHelpers/src/base/src/krakenUrlHelpers.js","src/krakenHelpers/src/base/src/krakenElementStyleHelpers.js","src/krakenHelpers/src/dom/krakenDomHelpers.js","src/krakenHelpers/src/dom/krakenElementHelpers.js","src/krakenHelpers/src/dom/krakenElementEventHelpers.js","src/krakenHelpers/src/dom/krakenElementThingHelpers.js","src/krakenHelpers/src/dom/krakenElementThingInitHelpers.js","src/krakenHelpers/src/dom/krakenElementTemplateHelpers.js","src/krakenHelpers/src/dom/krakenElementThingPropertyHelpers.js","src/krakenHelpers/src/dom/krakenElementThingTraverseHelpers.js","src/krakenHelpers/src/dom/krakenElementThingPartHelpers.js","src/krakenHelpers/src/dom/krakenElementThingObserverHelpers.js","src/krakenHelpers/src/dom/krakenElementThingRecordHelpers.js","src/krakenHelpers/src/dom/krakenElementThingRenderHelpers.js","src/krakenHelpers/src/dom/krakenElementThingTemplateDatabase.js","src/krakenHelpers/src/dom/krakenElementThingRenderSystemHelpers.js","src/krakenHelpers/src/thing/krakenThingHelpers.js","src/krakenHelpers/src/thing/src/krakenThingSystemHelpers.js","src/krakenHelpers/src/thing/src/krakenThingPropertyValueSpecificationHelpers.js","src/krakenHelpers/src/thing/src/krakenThingPropertyValueHelpers.js","src/krakenHelpers/src/localization/krakenHeadingsHelpers.js","src/krakenHelpers/src/html/src/itemlist.js","src/krakenHelpers/src/html/src/actionMenu.js","src/krakenHelpers/src/html/src/listitem.js","src/krakenHelpers/src/html/src/line.js","src/krakenHelpers/src/thing/src/krakenThingListHelpers.js","src/krakenHelpers/src/thing/src/krakenThingListItemHelpers.js","src/krakenHelpers/src/thing/src/krakenThingActionExecutionHelpers.js","src/krakenHelpers/src/dom/krakenElementThingEventHelpers.js","src/krakenHelpers/src/dom/krakenElementOrchestratorHelpers.js","src/krakenHelpers/src/dom/krakenElementCursorHelpers.js","src/krakenHelpers/src/localization/krakenLocalizationHelpers.js","src/krakenHelpers/src/html/krakenSimpleHtmlHelpers.js","src/krakenHelpers/src/html/src/article.js","src/krakenHelpers/src/html/src/card.js","src/krakenHelpers/src/html/src/cardHorizontal.js","src/krakenHelpers/src/html/src/callToAction.js","src/krakenHelpers/src/html/src/form.js","src/krakenHelpers/src/html/src/css.js","src/krakenHelpers/src/html/src/features.js","src/krakenHelpers/src/html/src/footer.js","src/krakenHelpers/src/html/src/header.js","src/krakenHelpers/src/html/src/hero.js","src/krakenHelpers/src/html/src/howTo.js","src/krakenHelpers/src/html/src/icons.js","src/krakenHelpers/src/html/src/jsonld.js","src/krakenHelpers/src/html/src/navbar.js","src/krakenHelpers/src/html/src/page.js","src/krakenHelpers/src/html/src/pill.js","src/krakenHelpers/src/html/src/pricing.js","src/krakenHelpers/src/html/src/record.js","src/krakenHelpers/src/html/src/userConsent.js","src/krakenHelpers/src/html/src/contentHead.js","src/krakenHelpers/src/html/src/contentBody.js","src/krakenHelpers/src/html/src/propertyValues.js","src/krakenClasses/krakenClasses.js","src/krakenClasses/src/KrThing.js","src/krakenClasses/src/KrThings.js","src/krakenHelpers/src/http/krakenHttpHelpers.js","src/krakenHelpers/src/http/krakenApiHelpers.js","src/krakenHelpers/src/http/krakenExpressHelpers.js","src/krakenHelpers/src/http/krakenBrowserHelpers.js","src/krakenHelpers/src/element/krakenElementHelpers.js","src/krakenHelpers/src/element/src/krakenElementThingEventHelpers/krakenElementThingEventHelpers.js","src/krakenHelpers/src/element/src/krakenElementThingEventHelpers/src/krSelectable.js","src/krakenHelpers/src/element/src/krakenElementThingEventHelpers/src/krDragDropGeneric.js","src/krakenTools/krakenTools.js","src/krakenTools/krakenTimer/krakenTimer.js","src/krakenTools/krakenCache/krakenCache.js","src/krakenTools/krakenStorage/krakenStorage.js","src/krakenTools/krakenChatGpt/krakenChatGpt.js"],"sourcesContent":["\n\nimport {krakenHelpers as krakenHelpersObject} from './krakenHelpers/krakenHelpers.js'\n\n\nimport {krakenTools as krakenToolsObject} from './krakenTools/krakenTools.js'\nimport {krakenClasses as krakenClassesObject} from './krakenClasses/krakenClasses.js'\n//import {krakenElements as krakenElementsObject} from './krakenElements/krakenElements.js'\n\n\n\nexport const krakenHelpers = krakenHelpersObject\nexport const krakenTools = krakenToolsObject\nexport const krakenClasses = krakenClassesObject\n//export const krakenElements = krakenElementsObject\n","\n\n\nimport { krakenBaseHelpers } from './src/base/krakenBaseHelpers.js'\n  \nimport { krakenDomHelpers } from './src/dom/krakenDomHelpers.js'\n\nimport { krakenLocalizationHelpers } from './src/localization/krakenLocalizationHelpers.js'\n\nimport { krakenSimpleHtmlHelpers} from './src/html/krakenSimpleHtmlHelpers.js'\n\nimport { krakenThingHelpers } from './src/thing/krakenThingHelpers.js'    \nimport { krakenHttpHelpers } from './src/http/krakenHttpHelpers.js'    \n\nimport { krakenElementHelpers } from './src/element/krakenElementHelpers.js'    \n\n\nexport const krakenHelpers = {\n\n    base: krakenBaseHelpers,\n    dom: krakenDomHelpers,\n    html: krakenSimpleHtmlHelpers,\n    localization: krakenLocalizationHelpers,\n    thing: krakenThingHelpers,\n    http: krakenHttpHelpers,\n    element: krakenElementHelpers,\n\n\n    // shortcuts\n    isNull: krakenBaseHelpers.null.isNull,\n    isNotNull: krakenBaseHelpers.null.isNotNull,\n    isEqual:krakenBaseHelpers.null.isEqual,\n    isNotEqual:krakenBaseHelpers.null.isNotEqual,\n    toArray: krakenBaseHelpers.array.toArray,\n    isArray: krakenBaseHelpers.array.isArray,\n    isObject: krakenBaseHelpers.object.isObject,\n    isDate: krakenBaseHelpers.date.isDate,\n    isNumber: krakenBaseHelpers.number.isNumber,\n    uuid: krakenBaseHelpers.uuid,\n    wait: krakenBaseHelpers.wait,\n\n    \n}","\nimport { krakenAnalysisHelpers } from './src/krakenAnalysisHelpers.js'\nimport { krakenArrayHelpers } from './src/krakenArrayHelpers.js'\nimport { krakenBaseThingHelpers } from './src/krakenBaseThingHelpers.js'\nimport { krakenColorHelpers } from './src/krakenColorHelpers.js'\n\nimport { krakenDateHelpers } from './src/krakenDateHelpers.js'\nimport { krakenDotNotationHelpers } from './src/krakenDotNotationHelpers.js'\nimport { krakenEmailHelpers } from './src/krakenEmailHelpers.js'\nimport { krakenHashHelpers} from './src/krakenHashHelpers.js'\nimport { krakenHeadingHelpers} from './src/krakenHeadingHelpers.js'\n\nimport { krakenJsonHelpers } from './src/krakenJsonHelpers.js'\nimport { krakenNullHelpers } from './src/krakenNullHelpers.js'\nimport { krakenNumberHelpers } from './src/krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './src/krakenObjectHelpers.js'\nimport { krakenRegexHelpers } from './src/krakenRegexHelpers.js'\nimport { krakenSimpleThingHelpers } from './src/krakenSimpleThingHelpers.js'\nimport { krakenStorageHelpers } from './src/krakenStorageHelpers.js'\nimport { krakenStringHelpers } from './src/krakenStringHelpers.js'\nimport { krakenStringOperationHelpers } from './src/krakenStringOperationHelpers.js'\nimport { krakenTagHelpers } from './src/krakenTagHelpers.js'\nimport { krakenTemplateHelpers } from './src/krakenTemplateHelpers.js'\nimport { krakenTestHelpers } from './src/krakenTestHelpers.js'\nimport { krakenTextTable } from './src/krakenTextTable.js'\n\nimport { krakenUriTemplateHelpers } from './src/krakenUriTemplateHelpers.js'\n\nimport { krakenUrlHelpers } from './src/krakenUrlHelpers.js'\nimport { krakenUuidHelpers} from './src/krakenUuidHelpers.js'\nimport { krakenElementStyleHelpers} from './src/krakenElementStyleHelpers.js'\n\n\n\n\n\nexport const krakenBaseHelpers = {\n\n    analysis: krakenAnalysisHelpers,\n    array: krakenArrayHelpers,\n    classes: krakenSimpleThingHelpers,\n    color: krakenColorHelpers,\n    date: krakenDateHelpers,\n    dot: krakenDotNotationHelpers,\n    element: {\n        style: krakenElementStyleHelpers,\n    },\n    email:krakenEmailHelpers,\n    hash: krakenHashHelpers,\n    heading: krakenHeadingHelpers,\n    json: krakenJsonHelpers,\n    null: krakenNullHelpers,\n    number: krakenNumberHelpers,\n    object: krakenObjectHelpers,\n    regex: krakenRegexHelpers,\n    storage: krakenStorageHelpers,\n    string: krakenStringHelpers,\n    stringOperation: krakenStringOperationHelpers,\n    tag: krakenTagHelpers,\n    template: krakenTemplateHelpers,\n    test: krakenTestHelpers,\n    textTable: krakenTextTable,\n    thing: krakenBaseThingHelpers,\n    uri: krakenUriTemplateHelpers,\n    url: krakenUrlHelpers,\n    uuid: krakenUuidHelpers,\n\n    // Shortcuts\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    isEqual:krakenNullHelpers.isEqual,\n    isNotEqual:krakenNullHelpers.isNotEqual,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isValid,\n    isObject: krakenObjectHelpers.isValid,\n    isDate: krakenDateHelpers.isValid,\n    toDate: krakenDateHelpers.toDate,\n    isNumber: krakenNumberHelpers.isValid,\n    wait: wait,\n    \n}\n\n\nfunction wait(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenUuidHelpers } from \"./krakenUuidHelpers.js\";\nimport { krakenObjectHelpers } from \"./krakenObjectHelpers.js\";\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    object: krakenObjectHelpers,\n    isObject: krakenObjectHelpers.isValid,\n    uuid: krakenUuidHelpers\n}\n\n\nexport const krakenAnalysisHelpers = {\n\n    analyzeValues: analyzeValues,\n    analyze: analyze,\n    max: getMax,\n    min:getMin,\n    n: getN,\n    sum: getSum,\n    sumProduct: getSumProduct,\n    avg: getAverage,\n    stdev: getStandardDeviation,\n    first: getFirst,\n    last: getLast,\n    filter: filter,\n    getValues: getValues,\n    transpose: transpose,\n    //runOperations: runOperations\n};\n\n\n\nfunction analyze(value){\n    /**\n     * Analyzes a series of records\n     * @param {Object} value\n     * @returns {Object} The analyzed value\n     * \n     */\n\n    value = h.toArray(value)\n    \n    let keys = h.array.getKeys(value)\n\n    let analysis = {}\n    for(let k of keys){\n        analysis[k] = analyzeValues(value, k)\n    }\n\n    return analysis\n}\n\nfunction analyzeValues(value, key) {\n    /**\n     * Analyzes a series of records\n     * @param {Object} value\n     * @param {String} key\n     * @returns {Object} The analyzed value\n     */\n\n    \n    let analysis = {\n        type: null,\n        types: {},\n        typeSchemaOrg: null,\n        typesSchemaOrg: {},\n        values: {},\n        N: null,\n        nullN: null,\n        uniqueN: null,\n        min: null,\n        max: null,\n        stddev: null\n    };\n\n    let values = h.array.getValuesForKey(value, key);\n\n    for (let v of values) {\n        \n        // Get type\n        let t = h.value.getType(v)\n        analysis.types[t] = (analysis.types[t] || 0) + 1;\n\n        if(t && t != null){\n            let s = analysis.type\n            if(s && s != null && s != t){\n                analysis.type = 'na'\n            } else {\n                analysis.type = t\n            }\n        }\n\n        \n        // Get schema type\n        let tt = h.value.getTypeSchemaOrg(v)\n        analysis.typesSchemaOrg[tt] = (analysis.typesSchemaOrg[tt] || 0) + 1;\n\n        if(tt && tt != null){\n            let s = analysis.typeSchemaOrg\n            if(s && s != null && s != tt){\n                analysis.typeSchemaOrg = 'na'\n            } else {\n                analysis.typeSchemaOrg = tt\n            }\n        }\n        \n        // Get value\n        let newV = v;\n        if (newV[\"@type\"]) {\n            newV = `${newV[\"@type\"]}/${newV[\"@id\"]}`;\n        }\n        analysis.values[newV] = (analysis.values[newV] || 0) + 1;\n\n        // get min / max\n        analysis.N = getN(value, key)\n        analysis.nullN = getNull(value, key)\n        analysis.uniqueN = h.array.getUniqueN(value, key)\n        analysis.min = getMin(value, key);\n        analysis.max = getMax(value, key);\n        analysis.stddev = getStandardDeviation(value, key);\n        \n        \n        \n    }\n\n    return analysis;\n}\n\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nfunction getValues(value, key){\n    /**\n     * Returns values from list of records\n     * \n     */\n\n\n    if(h.isArray(value)){\n        return value.map(x => getValues(x, key))\n    }\n\n    if(h.isNull(key)){ return value }\n\n    if(h.isNull(value)){ return null }\n    \n\n    let result = h.dot.get(key, value)\n    \n    return result\n    \n}\n\n\nfunction transpose(record, key){\n    /**\n     * Converts a record to list of PVs\n     * \n     */\n\n\n    if(h.isArray(record)){\n        return record.map(x => transpose(x))\n    }\n\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n    if(h.isNull(key)){\n        \n        return recordToPropertyValue(record)\n    }\n\n    let v = getValues(record, key)\n\n    let pvs = recordToPropertyValue(v)\n\n    let result = h.dot.set(record, key, pvs)\n    \n    return result\n    \n}\n\nfunction recordToPropertyValue(record){\n    /**\n     * Convert record to list of pv\n     * \n     */\n\n    if(h.isArray(record)){\n        return record.map(x => recordToPropertyValue(x))\n    }\n\n\n    if(!h.isObject(record)){\n        console.log('ERROR - not an object', record)\n        return record\n    }\n\n    \n    let pvs = []\n    for(let k in record){\n        \n        let pv = {\n            \"@type\": \"PropertyValue\",\n            \"@id\": h.uuid.new(),\n            \"propertyID\": k,\n            \"value\": record[k]\n        }\n        pvs.push(pv)\n    }\n    \n    return pvs\n    \n}\n\n\n\nfunction filter(value, conditions){\n    /**\n     * Filters a series of records\n     * @param {Object} value\n     * @param {Object} conditions\n     * @returns {Object} The filtered value\n     * \n     */\n\n    // Convert string to conditions (key=bob1 -> {'key': 'bob1'})\n\n  \n    if(typeof conditions == 'string'){\n\n\n        \n        let newConditions = {}\n        newConditions[conditions.split('=')?.[0]] = conditions.split('=')?.[1]\n        conditions = newConditions\n    }\n\n    let filteredItems = []\n    for(let v of h.array.toArray(value)){\n\n        let passes = true\n        for(let c in conditions){\n\n            let v1 = h.dot.get(c, v)\n            let c1 = conditions[c]\n            \n            let operation = 'eq'\n           \n            \n            if(c1.split(' ')?.[0] == 'ne'){\n                c1 = c1.slice(3)\n                operation = 'ne'\n            }\n\n            if(c1.split(' ')?.[0] == 'gt'){\n                c1 = c1.slice(3)\n                operation = 'gt'\n            }\n\n            if(c1.split(' ')?.[0] == 'lt'){\n                c1 = c1.slice(3)\n                operation = 'lt'\n            }\n\n            if(c1.split(' ')?.[0] == 'ge'){\n                c1 = c1.slice(3)\n                operation = 'ge'\n            }\n\n            if(c1.split(' ')?.[0] == 'le'){\n                c1 = c1.slice(3)\n                operation = 'le'\n            }\n\n            if(c1.split(' ')?.[0] == 'isNull'){\n                c1 = c1.slice(7)\n                operation = 'isNull'\n            }\n\n            if(c1.split(' ')?.[0] == 'notNull'){\n                c1 = c1.slice(7)\n                operation = 'notNull'\n            }\n        \n            \n            \n          \n\n            if(operation == 'eq'){\n                if((v1 == c1) == false){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'ne'){\n                if((v1 != c1) == false){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'gt'){\n                if(!(v1 > c1)){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'lt'){\n                if(!(v1 < c1)){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'ge'){\n                if(!(v1 >= c1)){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'le'){\n                if(!(v1 <= c1)){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'notNull'){\n                if(!(h.isNotnull(v1))){\n                    passes = false\n                    break\n                }\n            }\n\n            if(operation == 'isNull'){\n                if(!(h.isNull(v1))){\n                    passes = false\n                    break\n                }\n            }\n\n            \n            \n        }\n        if(passes){\n            filteredItems.push(v)\n        }\n        \n    }\n\n    return filteredItems\n    \n}\n\nfunction getFirst(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getValuesForKey(value, key)\n    items = h.array.toArray(items)\n    \n    let [result] = items.slice(0)\n\n\n    return result\n\n}\n\n\nfunction getLast(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getValuesForKey(value, key)\n    items = h.array.toArray(items)\n\n    let [result] = items.slice(-1)\n\n\n    return result\n\n\n}\n\n\nfunction getMax(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = Math.max(...items)\n\n    return result\n\n}\n\nfunction getMaxRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getMax(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('maxValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\n\nfunction getMin(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = Math.min(...items)\n\n    return result\n\n}\n\nfunction getMinRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getMin(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('minValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getN(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n   \n    let items = h.array.getValuesForKey(value, key)\n    let result = items.length\n\n    \n    return result\n\n}\n\nfunction getNRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getN(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('count', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getSum(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    return result\n\n}\n\n\nfunction getSumProduct(value, key1, key2, sigFig=2){\n    /**\n     * key 2 is defined from key 1 if absent\n     */\n\n    if(h.isNull(key2)){\n        key2 = key1.split('_')[1]\n        key1 = key1.split('_')[0]\n    }\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = 0\n    for(let i=0; i< value.length; i++ ){\n        let value1 = h.dot.get(value[i], key1)\n        let value2 = h.dot.get(value[i], key2)\n        if(h.number.isValid(value1) && h.number.isValid(value2)){\n            let v = value1 * value2\n            result += h.number.round(v, sigFig) \n            \n        } \n    }\n    \n    return result\n\n}\n\nfunction getSumRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getSum(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('sum', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getAverage(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let sumAll = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    let result = sumAll / items.length\n\n    return result\n}\n\nfunction getAverageRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getAverage(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('average', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getStandardDeviation(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let n = items.length\n    let mean = items.reduce((a, b) => a + b) / n\n    let result =  Math.sqrt(items.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n\n    return result\n}\n\nfunction getStandardDeviationRecord(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let result = getStandardDeviation(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('marginOfError', key, result, unitCode)\n\n}\n\nfunction getNull(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n    let nullValues = 0\n    for(let v of value){\n\n\n        if ((!v || v == null || v == \"\" || v == {} || v == []) && v!== 0){\n            nullValues + 1\n        }\n    }\n\n    return nullValues\n\n}\n\nfunction getUniqueN(value, key){\n\n    value = h.array.toArray(value)\n    if(h.array.isArray(value) == false){ return undefined }\n\n\n    let uniqueValues = [...new Set(value)];\n\n    let result = uniqueValues.length\n\n\n    return result\n\n}\n\n// -----------------------------------------------------\n//  Statistical record \n// -----------------------------------------------------\n\nfunction getStatsRecord(statType, property, value, unitCode){\n\n\n    let record = {\n        \"@context\": \"https://schema.org/\",\n        \"@id\": \"Observation_Median_Age_Person_Female_SanAntonio_TX_2014\",\n        \"@type\": \"Observation\",\n        \"name\": name,\n        \"variableMeasured\": {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"StatisticalVariable\",\n            \"@id\": \"Median_Height_Person_Female\",\n            \"name\": statType,\n            \"measuredProperty\": {\"@id\": property },\n            \"statType\": {\"@id\": statType},\n            \"constrainingProperty\": []\n        },\n        \"observationAbout\": {},\n        \"value\": value,\n        \"unitCode\": unit\n    }\n\n    return record\n\n}","export const krakenNullHelpers = {\n    isNull: isNull,\n    isNUll: isNull,\n    isNotNull: isNotNull,\n    isNotNUll: isNotNull,\n    isEqual: isEqual,\n    isNotEqual: isNotEqual\n};\n\nfunction isNotNull(value) {\n    /**\n     * Returns true if value is not null\n     * @param {Object} value\n     * @returns {Boolean}\n     */\n    return !isNull(value);\n}\n\nfunction isNull(value) {\n    /**\n     * Returns true if value is null\n     * @param {*} value\n     * @returns {boolean}\n     * \n     */\n    if (value === 0) {\n        return false;\n    }\n    if (value === undefined) {\n        return true;\n    }\n    if (value === null) {\n        return true;\n    }\n    if (value === \"\") {\n        return true;\n    }\n\n\n    if (Number.isNaN(value)) {\n        return true;\n    }\n    \n    try{\n        if(value instanceof HTMLElement){\n            return false\n        }\n    } catch {}\n\n\n    // Check if date\n    try{\n        \n        if(value instanceof Date){\n            return false\n        }\n\n    } catch (error){ }\n   \n         \n    // If array, removes null values then check if length == 0\n    if (Array.isArray(value)) {\n        value = value.filter((x) => isNull(x) == false);\n        if (value.length == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // If object, check if it has keys\n    if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\n        if (Object.keys(value).length == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Catch all\n    return false;\n}\n\n\n\nfunction isNotEqual(value1, value2){\n    /**\n     * Returns true if value1 is not equal to value2\n     * @param {*} value1\n     * @param {*} value2\n     * @returns {boolean}\n     */\n    return !isEqual(value1, value2) \n}\n\nfunction isEqual(value1, value2) {\n    /**\n     * Returns true if value1 is equal to value2\n     * @param {*} value1\n     * @param {*} value2\n     * @returns {boolean}\n     */\n    // if nulls\n    if (isNull(value1) && isNull(value2)) {\n        return true;\n    }\n\n    if (isNull(value1) && isNotNull(value2)) {\n        return false;\n    }\n\n    if (isNotNull(value1) && isNull(value2)) {\n        return false;\n    }\n\n\n    // Equality for others\n    try {\n        if (value == value2) {\n            return true;\n        }\n    } catch {}\n\n\n    \n    \n    // Equality for Thing\n    let v1_record_type = value1?.record_type || value1?.[\"@type\"];\n    let v2_record_type = value2?.record_type || value2?.[\"@type\"];\n    let v1_record_id = value1?.record_id || value1?.[\"@id\"];\n    let v2_record_id = value2?.record_id || value2?.[\"@id\"];\n\n    if (isNull(v1_record_type) && isNotNull(v2_record_type)) {\n        return false;\n    }\n    if (isNotNull(v1_record_type) && isNull(v2_record_type)) {\n        return false;\n    }\n    if (isNull(v1_record_id) && isNotNull(v2_record_id)) {\n        return false;\n    }\n    if (isNotNull(v1_record_id) && isNull(v2_record_id)) {\n        return false;\n    }\n\n    if (isNotNull(v1_record_type) && isNotNull(v2_record_type)) {\n        if (isNotNull(v1_record_id) && isNotNull(v2_record_id)) {\n            if (\n                v1_record_type == v2_record_type &&\n                v1_record_id == v2_record_id\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    // Equality for objects\n    try {\n        if (JSON.stringify(value1) == JSON.stringify(value2)) {\n            return true;\n        }\n    } catch {}\n\n\n    \n    return false;\n}\n\n\n","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenNumberHelpers} from \"./krakenNumberHelpers.js\";\n\nlet h = {\n    number: krakenNumberHelpers,\n    null: null,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    \n}\n\n\nimport { krakenDotNotationHelpers } from './krakenDotNotationHelpers.js'\n\n\nexport const krakenArrayHelpers = {\n\n    toString: toString,\n    toString: toString,\n    isValid: isValid,\n    isArray: isValid,\n    isValid: isValid,\n    toArray: toArray,\n    toArray: toArray,\n    keys: keys,\n    keys: keys,\n    getValuesForKey: getValuesForKey,\n    getNumbersForKey: getNumbersForKey,\n    merge: merge,\n    mergeUnique: mergeUnique,\n    \n}\n\n\n// -----------------------------------------------------\n//  Validation \n// -----------------------------------------------------\n\n\nfunction isValid(value){\n    /**\n     * Checks if a value is valid\n     * @param {Object} value\n     * @returns {Boolean}\n     * \n     */\n\n    if(typeof value == 'string'){ return false }\n\n    \n    if(Array.isArray(value)){ return true }\n    return false\n    \n}\n\n\n// -----------------------------------------------------\n//  Transformation \n// -----------------------------------------------------\n\nfunction toArray(value) {\n    /**\n     * Converts a value to an array\n     * @param {Object} value\n     * @returns {Array}\n     */\n    \n    if(h.isNull(value)){ return [] }\n\n    if(typeof value == 'string'){\n        return [value]\n    }\n\n    \n    if (isValid(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction toString(value) {\n    /**\n     * Converts a value to a string\n     * @param {Object} value\n     * @returns {String}\n     */\n\n    if(isValid(value) == false){ return undefined }\n\n    let result = `[${value.length}]`\n    return result\n    \n}\n\n\n\n// -----------------------------------------------------\n//  Query \n// -----------------------------------------------------\n\n\n\nfunction keys(value){\n    /**\n     * Returns the keys of an object\n     * @param {Object} value\n     * @returns {Array}\n     */\n    \n    if(isValid(value) == false){ return undefined }\n\n    let keys = []\n    for(let v of value){\n        for(let k of Object.keys(v)){\n            if(!keys.includes(k)){\n                keys.push(k)\n            }\n        }\n    }\n    keys.sort()\n    return keys\n}\n\nfunction getValuesForKey(value, key){\n    /**\n     * Returns the values for a key\n     * @param {Object} value\n     * @param {String} key\n     * @returns {Array}\n     */\n\n    // If not key, return value\n    if(h.isNull(key)){ return value }\n\n    \n    value = toArray(value)\n    if(isValid(value) == false){ return undefined }\n\n    let results = []\n    for(let v of value){\n        let v1 = krakenDotNotationHelpers.getValue(key, v) //v?.[key] \n        if(v1){\n            results.push(v1)\n        }\n    }\n    return results\n    \n}\n\nfunction getNumbersForKey(value, key){\n    /**\n     * Returns the numbers for a key\n     * @param {Object} value\n     * @param {String} key\n     * @returns {Array}\n     */\n    // Returns array of numbers only for a given k\n\n    value = toArray(value)\n    \n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        let newItem = h.number.toNumber(item)\n        if(h.number.isValid(newItem) == true){\n            results.push(newItem)\n        }\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            let quantItem = h.number.toNumber(item?.value)\n            if(h.number.isValid(quantItem) == true){\n                results.push(quantItem)\n            }\n        }\n    }\n    return results    \n}\n\nfunction getUnitCodesForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            results.push(item.unitCode)\n        }\n    }\n    return results    \n}\n\n\nfunction merge(value1, value2){\n    /**\n     * Merges two arrays\n     * @param {Object} value1\n     * @param {Object} value2\n     * @returns {Object}\n     */\n    \n    let v1 = toArray(value1)\n    let v2 = toArray(value2)   \n\n    if(h.isNull(v1) && h.isNull(v2)){ return [] }\n    if(h.isNull(v1) && h.isNotNull(v2)){ return v2 }\n    if(h.isNotNull(v1) && h.isNull(v2)){ return v1 }\n\n    let newValue = v1.concat(v2)\n    return newValue\n}\n\nfunction mergeUnique(value1, value2){\n    /**\n     * Merges two arrays\n     * @param {Object} value1\n     * @param {Object} value2\n     * @returns {Object}\n     */\n\n    let values = merge(value1, value2)\n    let uniqueValues = []\n    for(let v of values){\n        if(!uniqueValues.includes(v)){\n            uniqueValues.push(v)\n        }\n    }\n    return uniqueValues\n    \n}","\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\n\nexport const krakenNumberHelpers = {\n\n    isValid: isValid,\n    isvalid: isValid,\n    toNumber: toNumber,\n    toString: toString,\n    round: round,\n    round0: round0,\n    round2: round2,\n    round4: round4,\n    isEven: isEven,\n    isOdd: isOdd,\n    \n}\n\n\nfunction isValid(value){\n    /**\n     * Checks if a value is a number\n     * @param {Number} value\n     * @returns {Boolean}\n     */\n    \n    return typeof value === 'number';\n    \n}\n\nfunction toNumber(value){\n    /**\n     * Converts a value to a number\n     * @param {Number} value\n     * @returns {Number}\n     */\n\n    if(typeof value === 'number') { return value }\n    \n    try { \n        value = Number(value)\n        if(!isNaN(value)){ return value }\n        \n    } catch {\n\n    }\n\n    return null\n}\n\n\nfunction toString(value, rounding){\n    /**\n     * Converts a value to a string\n     * @param {Number} value\n     * @param {Number} rounding\n     * @returns {String}\n     */\n\n    \n    if(krakenNullHelpers.isNull(value)) { return '' }\n    \n    value = toNumber(value)\n\n    \n\n    if(krakenNullHelpers.isNotNull(rounding)){\n        value = Math.round(value)\n    }\n\n    return String(value)\n    \n}\n\nfunction round(number, decimalPlaces=0){\n    /**\n     * Rounds a number to a certain decimal place\n     * @param {Number} number\n     * @param {Number} decimalPlaces\n     * @returns {Number}\n     */\n\n     const factor = Math.pow(10, decimalPlaces);\n    return Math.round(number * factor) / factor;\n}\n\nfunction round0(number, decimalPlaces=0){\n\n     const factor = Math.pow(10, decimalPlaces);\n    return Math.round(number * factor) / factor;\n}\n\nfunction round2(number, decimalPlaces=2){\n\n     const factor = Math.pow(10, decimalPlaces);\n    return Math.round(number * factor) / factor;\n}\nfunction round4(number, decimalPlaces=4){\n\n     const factor = Math.pow(10, decimalPlaces);\n    return Math.round(number * factor) / factor;\n}\n\n\nfunction isEven(value){\n    /**\n     * Checks if a value is even\n     * @param {Number} value\n     * @returns {Boolean}\n     */\n\n    try{\n        if(value % 2 == 1){\n            return false\n        } else {\n            return true\n        }\n\n    } catch { return false }\n\n}\n\nfunction isOdd(value){\n    /**\n     * Checks if a value is odd\n     * @param {Number} value\n     * @returns {Boolean}\n     */\n\n    try{\n        if(value % 2 == 0){\n            return false\n        } else {\n            return true\n        }\n\n    } catch { return false }\n\n}","import { krakenNullHelpers} from './krakenNullHelpers.js'\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\nconst h = {\n    null: krakenNullHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n}\n\n\nexport const krakenDotNotationHelpers = {\n    get: getPropertyValueFromDot,\n    set: setPropertyValueFromDot,\n    add: addPropertyValueFromDot,\n    toDot: convertToDotNotation,\n    fromDot: convertFromDotNotation,\n    getValue: getPropertyValueFromDot,\n    setValue: setPropertyValueFromDot,\n    addValue: addPropertyValueFromDot,\n    propertyPath:{\n        getCurrentKey: getCurrentKey,\n        getCurrentPosition: getCurrentPosition,\n        getNextItems: getNextDotKey,\n        \n    }\n\n    \n}\n\n\n\nfunction setPropertyValueFromDot(record, key, value){\n    /**\n     * Sets a property value from a dot notation path\n     * @param {Object} record\n     * @param {String} key\n     * @param {Object} value\n     * @returns {Object} The record\n     */\n\n    if(h.isNull(record)){\n        return null\n    }\n\n    if(h.isNull(key)){\n        return null\n    }\n    \n    function _recursiveSet(record, key, value){\n\n        // Set record\n        if(h.isNull(record)){\n            record = {}\n        }\n        \n        // Get property and position from first item of key path\n        let property1 = getCurrentKey(key)\n        let position1 = getCurrentPosition(key)\n        \n        // Get value from property\n        let value1 = record?.[property1]\n\n        \n        // If value is array but position not given, assume first item is modified (position 0)\n        if(krakenArrayHelpers.isArray(value1)){\n            //position1 = 0\n        }\n\n        // Get value from position\n        if(h.isNotNull(position1)){\n            value1 = value1?.[position1]\n        }\n\n        // Check if done, else recurse\n        let newKey = getNextDotKey(key)\n\n        if(h.isNotNull(newKey)){\n\n            if(h.isNull(position1)){\n                record[property1] = _recursiveSet(value1, newKey, value)\n            } else {\n                record[property1] = krakenArrayHelpers.toArray(record[property1])\n                record[property1][position1] = _recursiveSet(value1, newKey, value)\n            }\n        } else {\n            if(h.isNull(position1)){\n                record[property1] = value\n            } else {\n                record[property1] = krakenArrayHelpers.toArray(record[property1])\n                record[property1][position1] = value\n            }\n        }\n        return record\n    }\n    return _recursiveSet(record, key, value);\n}\n\n\nfunction addPropertyValueFromDot(record, key, value){\n    /**\n     * Add a value to the current set of values\n     * @param {Object} record\n     * @param {String} key\n     * @param {Object} value\n     * @returns {Object} The record\n     */\n    let currentValue = getPropertyValueFromDot(key, record)\n    if(h.isNull(currentValue)){\n        return setPropertyValueFromDot(record, key, value)\n    } else {\n        let newValue = krakenArrayHelpers.mergeUnique(currentValue, value)\n        return setPropertyValueFromDot(record, key, newValue)\n    }\n    return true\n    \n}\n\n\nfunction getPropertyValueFromDot(key, record){\n    /**\n     * Gets a property value from a dot notation path\n     * @param {String} key\n     * @param {Object} record\n     * @returns {Object} The value\n     * \n     */\n    // Retrieves value by following dot notation\n\n\n    // Swap values if mistake done (inverted parameters)\n    if(typeof record == 'string' && typeof key != 'string'){\n        [key, record] = [record, key]\n    }\n\n\n    // Shortcut if no dot or [] present\n    if(!(key.includes('.')) && !(key.includes('['))){\n        return record?.[key] || null\n    }\n\n\n    //\n\n    function _recursive(key, record){\n\n\n        // if record is an array of one, convert to object\n        if(krakenArrayHelpers.isArray(record) && record.length == 1){\n            record == record[0]\n        }\n\n        // if record is null, return null\n        if(h.isNull(record)){\n            return null\n        }\n        \n        // Get property\n        let property1 = getCurrentKey(key)\n        let position1 = getCurrentPosition(key)\n        \n        \n        let value1 \n\n        // Get value from property\n        value1 = record?.[property1]\n\n        // Convert value to array if position is defined\n        if(h.isNotNull(position1)){\n            value1 = krakenArrayHelpers.toArray(value1)\n            value1 = value1?.[position1] || null\n        } \n\n        \n\n\n        // Check if done, else recurse\n        let newKey = getNextDotKey(key)\n        if(h.isNotNull(newKey)){\n            // If value is array but position not defined, return first item\n            if(h.isNull(position1) && krakenArrayHelpers.isArray(value1)){\n                value1 = value1?.[0] || null\n            } \n            return _recursive(newKey, value1)\n        } else {\n            return value1\n        }        \n    }\n\n    return _recursive(key, record);\n    \n}\n\n\n\n\nfunction convertToDotNotation(obj, parentKey = '', result = {}) {\n    /**\n     * Converts an object to dot notation\n     * @param {Object} obj\n     * @param {String} parentKey\n     * @param {Object} result\n     * @returns {Object} The converted object\n     */\n\n    \n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const newKey = parentKey ? `${parentKey}.${key}` : key; // Combine parent key with current key\n\n            if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                // If it's a nested object (not an array), recurse\n                convertToDotNotation(obj[key], newKey, result);\n            } else if (Array.isArray(obj[key])) {\n                // If it's an array, iterate over array elements and include index\n                obj[key].forEach((item, index) => {\n                    const arrayKey = `${newKey}[${index}]`;\n                    if (typeof item === 'object') {\n                        // Recurse for array elements that are objects\n                        convertToDotNotation(item, arrayKey, result);\n                    } else {\n                        // Directly add non-object array elements\n                        result[arrayKey] = item;\n                    }\n                });\n            } else {\n                // If it's a primitive value, add it to the result\n                result[newKey] = obj[key];\n            }\n        }\n    }\n    return result;\n}\n\n\n\nfunction convertFromDotNotation(dotNotationObj) {\n    /**\n     * Converts a dot notation object to a regular object\n     * @param {Object} dotNotationObj\n     * @returns {Object} The converted object\n     * \n     */\n    const result = {};\n\n    for (let key in dotNotationObj) {\n        if (dotNotationObj.hasOwnProperty(key)) {\n            const value = dotNotationObj[key];\n            const keys = key.split('.'); // Split the key by dots\n            let current = result;\n\n            for (let i = 0; i < keys.length; i++) {\n                const part = keys[i];\n\n                // Check if the part contains array notation, e.g., \"contacts[0]\"\n                const arrayMatch = part.match(/^(\\w+)\\[(\\d+)\\]$/);\n\n                if (arrayMatch) {\n                    const arrayKey = arrayMatch[1];\n                    const arrayIndex = parseInt(arrayMatch[2], 10);\n\n                    // Ensure the array exists at this key\n                    if (!current[arrayKey]) {\n                        current[arrayKey] = [];\n                    }\n\n                    // Ensure the specific index in the array exists\n                    if (!current[arrayKey][arrayIndex]) {\n                        current[arrayKey][arrayIndex] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the current array item\n                    current = current[arrayKey][arrayIndex];\n                } else {\n                    // Regular object key (no array notation)\n                    if (!current[part]) {\n                        current[part] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the next nested level\n                    current = current[part];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction getCurrentKey(dotKey){\n    /**\n     * Gets the first key from a dot notation path\n     * @param {String} dotKey\n     * @returns {String} The current key\n     * \n     */\n\n    if(h.isNull(dotKey)){ return null }\n\n    // Get property\n    let keyItems = dotKey.split('.')\n    let keyItem1 = keyItems?.[0]\n\n    let property1 = keyItem1.split('[')[0]\n    let position1 = keyItem1.split('[')[1] || null\n\n\n    return property1\n\n}\nfunction getCurrentPosition(dotKey){\n    /**\n     * Gets the first position from a dot notation path\n     * @param {String} dotKey\n     * @returns {String} The current position\n     */\n\n    try{\n        // Get property\n        let keyItems = dotKey.split('.')\n        let keyItem1 = keyItems?.[0]\n\n        let property1 = keyItem1.split('[')[0]\n        let position1 = keyItem1.split('[')[1] || null\n\n        position1 = position1.replace(']', '')\n        position1 = position1.trim()\n        position1 = Number(position1)\n\n        return position1\n    } catch { return null }\n\n}\n\nfunction getNextDotKey(dotKey){\n    /**\n     * Gets the remaining keys / values from a dot notation path\n     * @param {String} dotKey\n     * @returns {String} The next key\n     */\n\n    let keyItems = dotKey.split('.')\n    if(keyItems.length > 1){\n        let newKeys = keyItems.slice(1)\n        let newKey = newKeys.join('.')\n        return newKey\n    } else {\n        return null\n    }\n\n\n}","\nimport { krakenNullHelpers as h} from './krakenNullHelpers.js'\n\nexport const krakenJsonHelpers = {\n\n\n    isValid: isValid,\n    flatten: objectToDotNotation,\n    objectToDotNotation: objectToDotNotation,\n    simplify: simplify,\n    toPropertiesList: jsonToPropertiesSingle,\n    toPropertiesSingle: jsonToPropertiesList\n    \n}\n\nfunction isValid(value){\n    /**\n     * Checks if a value is a valid JSON string\n     * @param {String} value\n     * @returns {Boolean}\n     * \n     */\n\n    try{\n        let l = JSON.parse(value)\n        return true\n    } catch {\n        return false\n    }\n}\n\n\n\nfunction simplify(data) {\n    /**\n     * Simplify a json object\n     * @param {Object} data The data\n     * @returns {Object} The simplified data\n     * \n     */\n\n    if(h.isNull(data)){ return null }\n    \n    \n    // Remove arrays of 1\n    if (Array.isArray(data) && typeof data != 'string') {\n        // If the array has exactly one element, return that element\n        \n        if (data.length === 1) {\n            return simplify(data[0]);\n        } else {\n            // Otherwise, process each element in the array\n            return data.map(simplify);\n        }\n    } else if (data !== null && typeof data === 'object' && Object.keys(data).length > 0) {\n\n\n        // Skip if thing class object\n        if(data.record_type){\n            return data\n        }\n        \n        // Sort keys\n        let keys = Object.keys(data).sort()\n        \n        \n        for (const key of keys) {\n\n            \n            let value = simplify(data[key]);\n            if(value === 0  || (value !== null && value !== undefined)){\n                data[key] = value\n            } else {\n                delete data[key]\n            }\n                \n           \n        }\n        return data;\n    } else {\n        \n        return data;\n    }\n}\n\n\nfunction jsonToPropertiesSingle(record){\n    /**\n     * Converts a json object to a list of properties\n     * @param {Object} record The record\n     * @returns {Array} The list of properties\n     * \n     */\n\n    \n    // Converts lists to single item(the first item)\n\n\n    if(Array.isArray(record)){\n        if(record.length == 0) { return null }\n        record = record[0]\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = jsonWithoutList(record[k])\n        }\n    }\n    return record\n}\n\nfunction jsonToPropertiesList(record){\n    /**\n     * Converts a json object to a list of properties\n     * @param {Object} record The record\n     * @returns {Array} The list of properties\n     * \n     */\n\n    \n    // Converts single items to lists\n\n\n    if(Array.isArray(record)){\n        let newArray = []\n        for(let r of record){\n            newArray.push(jsonToLists(r))\n        }\n        record = newArray\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = [record[k]]\n        }\n    }\n    return record\n}\n\n\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n    var items =key.split('.');\n    for (let t=0; t<items.length; t++){\n        value = value[items[t]];\n    };\n    return value;\n}\n\n\nfunction setPropertyValueFromDot(key, record, value){\n    // Retrieves value by following dot notation\n\n    var items = key.split('.');\n\n    let item = items[0]\n\n\n    if(items.length > 1){\n        if(!record[item]){\n            record[item] = {}\n        }\n\n        setPropertyValueFromDot(items.slice(1).join('.'), record[item], value)\n    } else {\n\n        record[item] = value\n    }\n\n    return record;\n}\n\n\n\nfunction objectToDotNotation(obj, parentPrefix = '') {\n    /**\n     * Converts an object to a dot notation object\n     * @param {Object} obj The object\n     * @param {String} parentPrefix The parent prefix\n     * @returns {Object} The dot notation object\n     * \n     */\n\n    \n    let result = {};\n\n    // Helper function to handle recursion and path building\n    function recurse(o, path) {\n        for (let key in o) {\n            if (o.hasOwnProperty(key)) {\n                const newPath = path ? `${path}.${key}` : key;\n\n                // If the property is an object or array, recurse further\n                if (typeof o[key] === 'object' && o[key] !== null) {\n                    recurse(o[key], newPath);\n                } else {\n                    // Otherwise, add the property to the result\n                    result[newPath] = o[key];\n                }\n            }\n        }\n    }\n\n    recurse(obj, parentPrefix);\n    return result;\n}\n\n","\n\nexport const krakenUuidHelpers = {\n    /**\n     * UUID helpers\n     * \n     */\n\n    isValid: isValid,\n    toString: toString,\n    new: getNew,\n    \n}\n\n\n// -----------------------------------------------------\n//  Constructor \n// -----------------------------------------------------\n\nfunction getNew(){\n    /**\n     * Returns a new uuid\n     * @returns {String} The uuid\n     */\n\n    let value = String(crypto.randomUUID())\n    return value\n    \n}\n\n\n// -----------------------------------------------------\n//  Base \n// -----------------------------------------------------\n\nfunction isValid(value){\n    /**\n     * Check if value is a valid UUID\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    return h.isString(value) && h.isUuid(value)\n}\n\n\n\nfunction toString(value){\n    /**\n     * Returns a string representation of the UUID\n     * @param {String} value\n     * @returns {String}\n     */\n\n    return String(value)\n}","\n\nexport const krakenObjectHelpers = {\n\n    isObject: isObject,\n    isValid: isObject,\n    getKeys: getKeys,\n    keys: getKeys,\n    toString: toString,\n    toStirng: toString,\n    merge: merge\n    \n}\n\n\nfunction isObject(value){\n\n    return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nfunction getKeys(value){\n\n    if(isObject(value) == false) { return [] }\n\n    let keys = Object.keys(value)\n    keys.sort()\n    return keys\n}\n\n\nfunction toString(value){\n\n    if(isObject(value) == false) { return [] }\n\n    if(value['@type']){\n\n        return `${value[\"@type\"]}/${value['@id']}`\n    } else {\n\n        let keys = Object.keys(value)\n        if(keys.length == 0){ return '{}'}\n\n        return `{\"${keys[0]}\": \"${value[keys[0]]}\", ... }`\n        \n    }\n\n    \n}\n\nfunction merge(target, source){\n    /**\n     * Merges two objects together\n     * @param {Object} target\n     * @param {Object} source\n     * @returns {Object} The merged object\n     * \n     */\n    if(isObject(target) == false) { return null }\n    if(isObject(source) == false) { return target }\n\n    let result = { ...target, ...source}\n\n    return result\n}\n\n","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenObjectHelpers } from \"./krakenObjectHelpers.js\";\n\nimport { krakenUuidHelpers} from \"./krakenUuidHelpers.js\";\n\n\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    object: krakenObjectHelpers,\n   \n}\n\n\n\nexport const krakenBaseThingHelpers = {\n\n    // Base\n    isValid: isValid,\n    toString: toString,\n    isEmpty: isEmpty,\n     clone: clone,\n\n    // Properties\n\n    record_type: {\n        get: getRecordType,\n        set: setRecordType,\n    },\n    record_id: {\n        get: getRecordId,\n        set: setRecordId,\n    },\n    ref: {\n        get: getRef,\n        set: setRef,\n    },\n    keys: getKeys,\n    value: {\n        get: getValue,\n        set: setValue,\n    },\n    values: {\n        get: getValues,\n        set: setValues,\n    },\n\n    children: extractChildrenFromRecord,\n    flatten: flattenRecord,\n\n\n    // Comparison\n    isSame: isSameRecord,\n    isNotSame: isNotSameRecord,\n    eq: isEqualRecord,\n    ne: isNotEqualRecord,\n    lt: lt,\n    gt: gt,\n    validate: recordMeetConditions,\n\n    // Operations\n    replace: replaceValueInRecord,\n    merge: mergeRecords,\n    replaceChildren: replaceChildrenWithRef,\n    update: updateRecordsToLatest,\n    addIds: assignMissingIds,\n\n    // Lists\n    length: getLengthOfRecordList,\n    get: getRecordFromRecordList,\n    push: addRecordToRecordList,\n    delete: deleteRecordFromRecordList,\n    dedupe: dedupeRecords,\n    sort: sortRecordList,\n    filter: filterRecordList,\n\n};\n\n\n// -----------------------------------------------------\n//  Base\n// -----------------------------------------------------\n\n\nfunction isValid(value) {\n    /**\n     * Checks if a value is a valid record\n     * @param {Object} value\n     * @returns {Boolean}\n     * \n     */\n    if (h.isNull(value)) {\n        return false;\n    }\n\n    if (h.object.isValid(value) == false) {\n        return false;\n    }\n\n    if (h.isNull(getRecordType(value))) {\n        return false;\n    }\n\n    //if(h.isNull(getRecordId(value))){ return false }\n\n    return true;\n}\n\n\n\nfunction toString(value) {\n    /**\n     * Converts a value to a string\n     * @param {Object} value\n     * @returns {String}\n     * \n     */\n    \n    if (isValid(value) == false) {\n        return '';\n    }\n\n    return `${getRecordType(value)} ${getRecordId(value)}`\n}\n\n\nfunction isEmpty(record){\n    /**\n     * Checks if a record is empty (type, id but nothing else)\n     * @param {Object} record\n     * @returns {Boolean}\n     * \n     */\n\n    // error handling\n    if(!isValid(record)){ return true }\n\n    // check if empty\n    for(let k of Object.keys(record)){\n        if(k.startsWith('@')){\n            continue\n        }\n        if(h.isNotNull(record?.[k])){\n            return false\n        }\n    }\n    return true\n}\n\n\nfunction clone(record){\n    /**\n     * Clones a record\n     * @param {Object} record\n     * @returns {Object}\n     * \n     */\n\n    let newRecord = {}\n    for(let k of Object.keys(record)){\n        newRecord[k] = record[k]\n    }\n\n    newRecord['@id'] = krakenUuidHelpers.new()\n\n    return newRecord\n\n    \n}\n\n// -----------------------------------------------------\n//  Properties\n// -----------------------------------------------------\n\nfunction getRecordType(record_or_record_type, record_id) {\n    /**\n     * Gets the record type\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {String}\n     */\n    \n    let value =\n        record_or_record_type?.[\"@type\"] ||\n        record_or_record_type?.record_type ||\n        record_or_record_type;\n\n\n    if(h.array.isArray(value)){\n        value = value?.[0] || null\n    }\n\n    if (typeof value != \"string\") {\n        return null;\n    }\n\n    return value;\n}\n\nfunction setRecordType(record, value){\n    /**\n     * Sets the record type\n     * @param {Object} record\n     * @param {String} value\n     * @returns {Object} The record\n     */\n\n    record['@type'] = value;\n    return record;\n\n}\n\n\nfunction getRecordId(record_or_record_type, record_id) {\n    /**\n     * Gets the record id\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {String}\n     */\n    \n    let value =\n        record_or_record_type?.[\"@id\"] ||\n        record_or_record_type?.record_id ||\n        record_id;\n\n    if(h.array.isArray(value)){\n        value = value?.[0] || null\n    }\n\n    if (typeof value != \"string\") {\n        return null;\n    }\n\n    return value;\n}\n\nfunction setRecordId(record, value){\n    /**\n     * Sets the record id\n     * @param {Object} record\n     * @param {String} value\n     * @returns {Object} The record\n     */\n    record['@id'] = value;\n    return record;\n}\n\nfunction getRef(record_or_record_type, record_id) {\n    /**\n     * Gets the record ref\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {String}\n     */\n\n    let record_type = getRecordType(record_or_record_type, record_id)\n    record_id = getRecordId(record_or_record_type, record_id)\n\n    if (h.isNull(record_type)){ return null }\n    if (h.isNull(record_id)){ return null }\n\n    let result = {\n        \"@type\": record_type, \n        \"@id\": record_id\n    };\n\n    return result;\n}\n\nfunction setRef(record, record_or_record_type, record_id){\n    /**\n     * Sets the record ref\n     * @param {Object} record\n     * @param {String} record_or_record_type\n     * @param {String} record_id\n     * @returns {Object} The record\n     */\n\n    record[\"@type\"] = getRecordType(record_or_record_type, record_id)\n    record[\"@id\"] = getRecordId(record_or_record_type, record_id)\n    return record;\n\n}\n\nfunction getKeys(record){\n    /**\n     * Returns the property ids from a record\n     * @param {Object} record\n     * @returns {Array} The property ids\n     * \n     */\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n\n    /**\n     * Return propertyIDs without those starting with _\n     */\n    // Error handling\n    if (h.isNull(record)) { return null }\n    if(h.object.isValid(record) == false){ return null }\n\n    // Get propertyIDs    \n    let results = []\n    for(let k of Object.keys(record)){\n\n        if(!k.startsWith('_') && !k.startsWith('@')){\n            results.push(k)\n        }\n    }\n\n    results = results.sort()\n\n    return results\n\n}\n\n\nfunction getValue(record, propertyID) {\n    /**\n     * Returns the value of a property\n     * @param {Object} record\n     * @param {String} propertyID\n     * @returns {Object} The value\n     * \n     */\n\n    // Returns value of thing or record with specifid propertyID. Works with dot notation\n\n    if (h.isNull(record)) {\n        return null;\n    }\n\n    if (h.isNull(propertyID)) {\n        return null;\n    }\n\n    let values = getValues(record, propertyID);\n\n    return values?.[0] || null;\n}\n\n\nfunction setValue(record, propertyID, value) {\n    /**\n     * Sets the record values\n     * @param {Object} record\n     * @param {String} propertyID\n     * @param {Array} values\n     * @returns {Object} The record\n     */\n\n    // Get value \n    record = h.dot.set(record, propertyID, value);\n\n    return record;\n}\n\n\n\n\nfunction getValues(record, propertyID, db) {\n    /**\n     * Returns the values of a propertyID\n     * @param {Object} record\n     * @param {String} propertyID\n     * @returns {Array} The values\n     * \n     */\n\n    // Get value \n\n    let propertyPaths = propertyID.split('.');\n\n    let values = record\n\n    // Iterate for each dot notation path to get latest version of value everytime\n    for(let p of propertyPaths){\n\n        // Get value from first dot notation path\n        values = h.dot.get(record, p)\n\n        // Retrieve latest version of thing from db (if db provided)\n        if(h.isArray(values)){\n            values = values.map(x => getRecordFromRecordList(db, x) || x)\n        } else {\n            values = getRecordFromRecordList(db, values) || values\n        }\n    }\n\n    // Convert to array\n    values = h.toArray(values);\n\n    // Return\n    return values;\n}\n\nfunction setValues(record, propertyID, values){\n    /**\n     * Sets the record values\n     * @param {Object} record\n     * @param {String} propertyID\n     * @param {Array} values\n     * @returns {Object} The record\n     */\n\n    // Get value \n    record = h.dot.set(record, propertyID, values);\n\n    return record;\n}\n\n\n\nfunction extractChildrenFromRecord(record) {\n    /**\n     * Extracts the children from a record\n     * @param {Object} record\n     * @returns {Array} The children\n     * \n     */\n\n    // Error handling\n    if (h.isNull(record)) {\n        return [];\n    }\n\n    // Get child things\n    let childThings = [];\n    for (let k of Object.keys(record)) {\n        for (let value of h.toArray(record[k])) {\n            if (isValid(value)) {\n                childThings.push(value);\n                childThings = childThings.concat(\n                    extractChildrenFromRecord(value),\n                );\n            }\n        }\n    }\n\n    childThings = childThings.filter(x => h.isNotNull(x))\n\n\n    // Dedupe child things\n    childThings = dedupeRecords(childThings);\n\n    return childThings;\n}\n\n\n\n\n\nfunction flattenRecord(record){\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n    if (h.isNull(record)) {\n        return null;\n    }\n\n    let results = [record]\n\n    // Get children\n    results = results.concat(extractChildrenFromRecord(record))\n\n    // Replace children with refs\n    results = results.map(x => replaceChildrenWithRef(x))\n\n    // Dedupe\n    results = dedupeRecords(results)\n\n    // Return\n    return results\n\n}\n\n// -----------------------------------------------------\n//  Comparisons\n// -----------------------------------------------------\n\nfunction isSameRecord(thing1, thing2) {\n    /**\n     * Checks if two records are the same (type and id)\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {Boolean} True if the records are the same\n     */\n    if (h.isNull(getRecordType(thing1))) {\n        return false;\n    }\n    if (h.isNull(getRecordId(thing1))) {\n        return false;\n    }\n\n    if (getRecordType(thing1) != getRecordType(thing2)) {\n        return false;\n    }\n    if (getRecordId(thing1) != getRecordId(thing2)) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isNotSameRecord(thing1, thing2){\n    /**\n     * Checks if two records are not the same (type and id)\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {Boolean} True if the records are not the same\n     */\n\n    if (h.isNull(getRecordType(thing1))) {\n        return false;\n    }\n    return !isSameRecord(thing1, thing2) \n\n}\n\n\nfunction isEqualRecord(thing1, thing2) {\n    /**\n     * Checks if two records are equal (type, id and values)\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {Boolean} True if the records are equal\n     * \n     */\n    if (h.isNull(thing1) && h.isNull(thing2)) {\n        return true;\n    }\n    if (h.isNull(thing1) && h.isNotNull(thing2)) {\n        return false;\n    }\n    if (h.isNotNull(thing1) && h.isNull(thing2)) {\n        return false;\n    }\n\n    let record1 = thing1?.record || thing1;\n    let record2 = thing2?.record || thing2;\n\n    try {\n        if (JSON.stringify(record1) == JSON.stringify(record2)) {\n            return true;\n        } else {\n            return false;\n        }\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction isNotEqualRecord(thing1, thing2) {\n    return !isEqualRecord(thing1, thing2);\n}\n\nfunction lt(thisThing, otherThing) {\n    if (thisThing.record_type < otherThing.record_type) {\n        return true;\n    }\n    if (thisThing.record_type > otherThing.record_type) {\n        return false;\n    }\n\n    if (thisThing.record_id < otherThing.record_id) {\n        return true;\n    }\n    if (thisThing.record_id > otherThing.record_id) {\n        return false;\n    }\n\n    return false;\n}\n\n\nfunction gt(thisThing, otherThing) {\n    if (thisThing.record_type > otherThing.record_type) {\n        return true;\n    }\n    if (thisThing.record_type < otherThing.record_type) {\n        return false;\n    }\n\n    if (thisThing.record_id > otherThing.record_id) {\n        return true;\n    }\n    if (thisThing.record_id < otherThing.record_id) {\n        return false;\n    }\n    return false;\n}\n\nfunction recordMeetConditions(record, conditions) {\n    /**\n     * Checks if a record meets the conditions\n     * @param {Object} record\n     * @param {Object} conditions\n     * @returns {Boolean} True if the record meets the conditions\n     * \n     */\n\n    // Handle if conditions in the form of uri\n    for (let k of Object.keys(conditions)) {\n        if(  \n            !(\n                (h.toArray(record[k]) != h.toArray(conditions?.[k])) ||\n                (h.toArray(record[k])).includes(conditions?.[k])\n            )\n           ){\n            return false\n        }    \n    }\n    return true;\n}\n\n\n\n// -----------------------------------------------------\n//  Operations \n// -----------------------------------------------------\n\n\nfunction assignMissingIds(record){\n    /**\n     * Assigns missing ids to a record and its values\n     * @param {Object} record\n     * @returns {Object} The record\n     * \n     */\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n    if(h.isNull(record)){\n        return null\n    }\n\n    if(h.array.isArray(record)){\n        return record.map(x => assignMissingIds(x))\n    }\n\n    if(!h.object.isValid(record)){\n        return record\n    }\n\n    if(h.isNull(record?.['@id'])){\n        record['@id'] = krakenUuidHelpers.new()\n    }\n\n    for(let k of Object.keys(record)){\n        let values = h.toArray(record[k])\n        let newValues = []\n        for(let value of values){\n            value = assignMissingIds(value)\n            newValues.push(value)\n        }\n        record[k] = newValues\n    }\n\n    record = h.json.simplify(record)\n\n    return record\n}\n\nfunction replaceChildrenWithRef(record){\n    /**\n     * Replaces values that are things with refs\n     * @param {Object} record\n     * @returns {Object} The record\n     * \n     */\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n        // Error handling\n        if (h.isNull(record)) {\n            return null;\n        }\n\n    for(let k of Object.keys(record)){\n\n        let values = h.toArray(record[k])\n\n        let newValues = []\n        for(let v of values){\n            if(isValid(v)){\n                v = getRefFromRecord(v)\n            }\n            newValues.push(v)\n        }\n    }\n    return record\n}\n\n\nfunction replaceValueInRecord(record, oldValue, newValue) {\n    /**\n     * Replaces all instances of a value in a record\n     * @param {Object} record\n     * @param {Object} oldValue\n     * @param {Object} newValue\n     * @returns {Object} The record\n     */\n\n    record = JSON.parse(JSON.stringify(record))\n\n\n    // Error handling\n    if (h.isNull(oldValue)) {\n        return null;\n    }\n\n    // Handle array\n    if(h.array.isArray(record)){\n        return record.map(x => replaceValueInRecord(x, oldValue, newValue))\n    }\n\n    // Handle non object\n    if(!h.object.isValid(record)){\n        return record\n    }\n\n    // Handle object\n\n\n    // Replace value\n    for (let k of Object.keys(record)) {\n        let newValues = [];\n        for (let value of h.toArray(record[k])) {\n            // Replace if equal\n            if (value == oldValue) {\n                newValues.push(newValue);\n            // Replace if same\n            } else if (isSameRecord(oldValue, value)) {\n                newValues.push(newValue);\n            } else {\n                newValues.push(value);\n            }\n\n        }\n        record[k] = newValues;\n    }\n\n    // Recurse for sub values\n    for (let k of Object.keys(record)) {\n        let newValues = [];\n        for (let value of h.toArray(record[k])) {\n            newValues.push(replaceValueInRecord(value, oldValue, newValue));\n        }\n        record[k] = newValues;\n    }\n\n    // Simplify record\n    record = h.json.simplify(record);\n\n    // Return\n    return record;\n}\n\nfunction mergeRecords(record1, record2) {\n    /**\n     * Merges two records\n     * @param {Object} record1\n     * @param {Object} record2\n     * @returns {Object} The merged record\n     */\n\n    record1 = JSON.parse(JSON.stringify(record1))\n    record2 = JSON.parse(JSON.stringify(record2))\n\n\n    // Error handling\n    if (h.isNull(record1)) {\n        return null;\n    }\n\n    // Merge\n    for (let k of Object.keys(record2)) {\n        let newValues = h.toArray(record1[k]).concat(h.toArray(record2[k]));\n        newValues = [...new Set(newValues)];\n        record1[k] = newValues;\n    }\n\n\n    // Simplify record\n    record1 = h.json.simplify(record1);\n\n    // Return\n    return record1;\n}\n\n\n\nfunction updateRecordsToLatest(record, db){\n    /**\n     * Updates all records or references to a record from latest version in the db\n     * @param {Object} record\n     * @param {Object} db\n     * @returns {Object} The record\n     * \n     */\n    record = JSON.parse(JSON.stringify(record))\n\n    record = getRecordFromRecordList(db, record) || record\n\n    for(let k of Object.keys(record)){\n\n        let values = h.toArray(record[k])\n\n        let newValues = []\n        for(let v of values){\n            if(isValid(v)){\n                v = getRecordFromRecordList(db, v) || v\n            }\n            newValues.push(v)\n        }\n        record[k] = newValues\n\n    }\n    return record\n\n}\n\n\n// -----------------------------------------------------\n//  Arrays \n// -----------------------------------------------------\n\nfunction getLengthOfRecordList(records){\n    /**\n     * Returns the length of a record list\n     * @param {Array} records\n     * @returns {Number} The length\n     * \n     */\n\n    // Error handling\n    if(h.isNull(records)){ return 0 }\n    records = h.toArray(records)\n\n    return records.length\n\n}\n\nfunction getRecordFromRecordList(records, record_or_record_type, record_id){\n    /**\n     * Returns a record from a record list\n     * @param {Array} records\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {Object} The record\n     * \n     */\n\n    let filteredRecords = filterRecordList(records, getRefFromRecord(record_or_record_type, record_id))\n\n    let result = filteredRecords?.[0] || null\n\n    return result\n\n}\n\n\nfunction addRecordToRecordList(records, record){\n    /**\n     * Add a record to array. If exists, merge the records\n     * @param {Array} records\n     * @param {Object} record\n     * @returns {Array} The records\n     */\n\n    records = JSON.parse(JSON.stringify(records))\n\n    // Error handling\n    records = h.toArray(records)\n    if(h.isNull(record)){ return records }\n\n\n    // List handling\n    if(h.array.isArray(record)){\n        for(let r of record){\n            records = addRecordToRecordList(records, r)\n        }\n        return records\n    }\n\n\n    // Retrieve current records same as new record from array\n    let currentRecords = filterRecordList(records, getRefFromRecord(record))\n\n    // Remove currentRecords from array\n    for (let r of currentRecords){\n        records = deleteRecordFromRecordList(records, r)\n    }\n\n    // Merge current records and new record\n    for(let r of currentRecords){\n        record = mergeRecords(record, r)\n    }\n\n    // Add new record to array\n    records.push(record)\n\n    // Return\n    return records\n\n}\n\n\nfunction deleteRecordFromRecordList(records, record){\n    /**\n     * Deletes a record from a record list\n     * @param {Array} records\n     * @param {Object} record\n     * @returns {Array} The records\n     */\n\n    records = JSON.parse(JSON.stringify(records))\n\n\n    for(let i=0; i < records.length; i++){\n\n\n        if(isSameRecord(records[i], getRefFromRecord(record))){\n            records = records.splice(i, 1)\n        }\n    }\n\n    return records\n\n}\n\n\n\nfunction dedupeRecords(records) {\n    /**\n     * Dedupes a record list by merging ame records (type and id)\n     * @param {Array} records\n     * @returns {Array} The records\n     * \n     */\n    // Error handling\n    if (h.isNull(records)) {\n        return [];\n    }\n\n\n    let results = []\n    for(let r of records){\n        results = addRecordToRecordList(results, r)\n    }\n\n    return results;\n}\n\nfunction sortRecordList(records, sortBy, sortOrder){\n    /**\n     * Sorts a record list\n     * @param {Array} records\n     * @param {String} sortBy\n     * @param {String} sortOrder\n     * @returns {Array} The records\n     * \n     */\n\n    records = JSON.parse(JSON.stringify(records))\n\n\n    // Error handling\n    if (h.isNull(records)) {\n        return null;\n    }\n\n    // Sort\n    records = h.toArray(records)\n\n    function sortFunction(a, b){\n\n        let aValue = getValueFromRecord(a, sortBy)\n        let bValue = getValueFromRecord(b, sortBy)\n\n        if(aValue == bValue){\n            return 0\n        }\n\n        if(sortOrder == 'asc'){\n            return aValue < bValue ? -1 : 1\n        }\n\n        if(sortOrder == 'desc'){\n            return aValue > bValue ? -1 : 1\n        }\n\n    }\n\n    records = records.sort(sortFunction);\n\n    return records;\n}\n\n\nfunction filterRecordList(records, conditions) {\n    /**\n     * Filters a record list\n     * @param {Array} records\n     * @param {Object} conditions\n     * @returns {Array} The records\n     * \n     */\n\n    records = JSON.parse(JSON.stringify(records))\n\n\n    // Error handling\n    if (h.isNull(records)) {\n        return [];\n    }\n\n    records = h.toArray(records)\n\n    // Error handling\n    if (h.isNull(conditions)) {\n        return records;\n    }\n\n    let results = [];\n    for (let r of records) {\n        if (recordMeetConditions(r, conditions)) {\n            results.push(r);\n        }\n    }\n\n    return results;\n}\n","\n\nimport { krakenNullHelpers as h} from './krakenNullHelpers.js';\n\nexport const krakenColorHelpers = {\n    hexToRgb: hexToRgb,\n    rgbToHex: rgbToHex,\n    hexToHsl: hexToHsl,\n    hslToHex: hslToHex,\n    palette:{\n        complementary: complementaryColor,\n        lighter: lighterColor,\n        darker: darkerColor,\n    }\n};\n\n\n\nfunction hexToRgb(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n    /**\n     * Convert an RGB color value to HEX\n     * @param {Number| String} r The red color value or the entire color string\n     * @param {Number} g The green color value\n     * @param {Number} b The blue color value\n     * @returns {String} The corresponding HEX color value\n     */\n    if(h.isNull(g) && h.isNull(b) && r.includes(',')){\n        r = r.replace('(', '')\n        r = r.replace(')', '')\n        let rgb = r.split(',')\n        r = Number(rgb[0].trim())\n        g = Number(rgb[1].trim())\n        b = Number(rgb[2].trim())\n        \n    }\n\n    \n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\n\n\n\nfunction hexToHsl(hex) {\n    hex = hex.replace(\"#\", \"\");\n    let r = parseInt(hex.substring(0, 2), 16) / 255;\n    let g = parseInt(hex.substring(2, 4), 16) / 255;\n    let b = parseInt(hex.substring(4, 6), 16) / 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        let d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h *= 60;\n    }\n    return [Math.round(h), Math.round(s * 100), Math.round(l * 100)];\n};\n\nfunction hslToHex(h, s, l) {\n    s /= 100;\n    l /= 100;\n    let c = (1 - Math.abs(2 * l - 1)) * s;\n    let x = c * (1 - Math.abs((h / 60) % 2 - 1));\n    let m = l - c / 2;\n    let r = 0, g = 0, b = 0;\n\n    if (h >= 0 && h < 60) { r = c; g = x; b = 0; }\n    else if (h >= 60 && h < 120) { r = x; g = c; b = 0; }\n    else if (h >= 120 && h < 180) { r = 0; g = c; b = x; }\n    else if (h >= 180 && h < 240) { r = 0; g = x; b = c; }\n    else if (h >= 240 && h < 300) { r = x; g = 0; b = c; }\n    else if (h >= 300 && h < 360) { r = c; g = 0; b = x; }\n\n    r = Math.round((r + m) * 255).toString(16).padStart(2, \"0\");\n    g = Math.round((g + m) * 255).toString(16).padStart(2, \"0\");\n    b = Math.round((b + m) * 255).toString(16).padStart(2, \"0\");\n\n    return `#${r}${g}${b}`;\n};\n\n\n\nfunction complementaryColor(hexColor){\n    /**\n     * Returns complementary color of a given hex color\n     * @param {String} hexColor Hex color\n     * @returns {String} Complementary color\n     */\n\n    const [h, s, l] = hexToHsl(hexColor);\n    const complementary = hslToHex((h + 180) % 360, s, l)\n    return complementary\n    \n}\n\nfunction lighterColor(hexColor, increment){\n    /**\n     * Returns lighter color of a given hex color\n     * @param {String} hexColor Hex color\n     * @param {Number} increment Increment\n     * @returns {String} Lighter color\n     */\n\n\n    const [h, s, l] = hexToHsl(hexColor);\n    let newColor = hslToHex(h, s, Math.min(l + increment * 10, 100))\n\n    return newColor\n    \n}\n\nfunction darkerColor(hexColor, increment){\n    /**\n     * Returns lighter color of a given hex color\n     * @param {String} hexColor Hex color\n     * @param {Number} increment Increment\n     * @returns {String} Lighter color\n     */\n\n\n    const [h, s, l] = hexToHsl(hexColor);\n    let newColor = hslToHex(h, s, Math.min(l - increment * 10, 100))\n\n    return newColor\n\n}\n\n","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray\n}\n\n\n\n/** @const {Object}  krakenDateHelpers\n * - isDate: Determiens if value is of type Date\n * - toDate: Converts a value (string, etc.) to Date\n * - getDuration: Returns duration between two dates\n * - getDurationRecord: Returns duration in schema.org QuantitativeValue record\n */\nexport const krakenDateHelpers = {\n\n    // Base\n    isDate: isValid,\n    isValid: isValid,\n    isValidText: isValidText,\n    eq: eq,\n    lt: lt,\n    gt: gt,\n    getDuration: getDuration,\n    duration: getDuration,\n    getDurationRecord: getDurationRecord,\n    toDate: toDate,\n    toString: toString,\n    human: {\n        duration: getHumanReadableDuration,\n        date: getHumanReadableDate\n    },\n    iso: {\n        getIsoDurationFromDates: toISODurationFromDates,\n        getTextFromIsoDuration: convertISODurationToEnglish,\n        getIsoDurationFromText: convertEnglishToISODuration\n    },\n    now: getCurrentDateObject,\n    \n    // Shortcuts\n    \n\n}\n\n/**\n * Returns true if value if a Date object\n * @param {String | Date | object} value\n * @return {bool} isDate True if date object\n */\nfunction isValid(value){\n    if(value instanceof Date) { return true }\n    \n    return false\n}\n\nfunction isValidText(value){\n    if(value instanceof Date) { return true }\n\n    value = toDate(value)\n\n    if(value instanceof Date) { return true }\n\n    \n    return false\n}\n\nfunction toString(value){\n    /**\n     * Converts a value (string, etc.) to Date\n     * @param {String | Date | object} value\n     * @return {Date} date\n     */\n\n   \n    if(isValid(value) == false){ \n    \n        value = toDate(value)\n        if(isValid(value) == false){\n            return ''\n        }\n    }\n\n\n\n    let formattedDate = value.toLocaleString()\t\n    \n\n    return formattedDate\n}\n\n\nfunction toDate(value){\n    /**\n     * Converts a value (string, etc.) to Date\n     * @param {String | Date | object} value\n     * @return {Date} date\n     */\n    \n    if(isValid(value) == true){ return value }\n\n    if (typeof value !== 'string') {\n        return undefined;\n    }\n    \n    // Native conversion\n    try {\n        const date = new Date(value);\n        \n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n\n      \n        \n    } catch (error) {\n        \n    }\n\n\n    // Convert from different formats\n    const formatMap = {\n        \"YYYY-MM-DD\": /(\\d{4})-(\\d{2})-(\\d{2})/,\n        \"MM/DD/YYYY\": /(\\d{2})\\/(\\d{2})\\/(\\d{4})/,\n        \"DD-MM-YYYY\": /(\\d{2})-(\\d{2})-(\\d{4})/,\n        \"YYYY/MM/DD\": /(\\d{4})\\/(\\d{2})\\/(\\d{2})/\n    };\n\n    for(let format of Object.keys(formatMap)){\n\n    \n        const regex = formatMap[format];\n       \n        const match = value.match(regex);\n        if (!match) {\n            continue\n        }\n    \n        let year, month, day;\n    \n        switch (format) {\n            case \"YYYY-MM-DD\":\n            case \"YYYY/MM/DD\":\n                year = match[1];\n                month = match[2] - 1; // JS months are 0-based\n                day = match[3];\n                break;\n            case \"MM/DD/YYYY\":\n                month = match[1] - 1;\n                day = match[2];\n                year = match[3];\n                break;\n            case \"DD-MM-YYYY\":\n                day = match[1];\n                month = match[2] - 1;\n                year = match[3];\n                break;\n            default:\n                break\n        }\n    \n        const date = new Date(year, month, day);\n    \n        // Check if the date is valid\n        try{\n            if (!isNaN(date.getTime())) {\n               return date\n            }\n            \n        } catch {}\n        \n        \n    }\n    return null\n\n    \n}\n\n\nfunction eq(date1, date2){\n    /**\n     * Returns true if two dates are equal\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {bool} isEqual\n     */\n\n    if(!date1 || !date2){ return false }\n    if(date1 == null || date2 == null){ return false }\n\n    if(date1.getTime() == date2.getTime()){ return true }\n    return false\n}\n\nfunction lt(date1, date2){\n    /**\n     * Returns true if date1 is greater than date2\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {bool} isGreater\n     */\n\n    if(!isValid(date1) || !isValid(date2)){ return false }\n\n    return date1 < date2\n\n}\n\nfunction gt(date1, date2){\n    /**\n     * Returns true if date1 is greater than date2\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {bool} isGreater\n     */\n\n    if(!isValid(date1) || !isValid(date2)){ return false }\n\n    return date1 > date2\n    \n}\n\n\nfunction getDuration(date1, date2){\n    /**\n     * Returns duration between two dates\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Number} duration\n     */\n\n    date1 = toDate(date1)\n    date2 = toDate(date2)\n\n    \n    if(isValid(date1) == false){ return undefined }\n    if(isValid(date2) == false){ return undefined }\n\n    let startDate \n    let endDate\n    \n    if(date1 < date2){\n        startDate = date1\n        endDate = date2\n    } else {\n        startDate = date2\n        endDate = date1\n    }\n\n    let duration = (endDate - startDate) / 1000\n    return duration\n    \n}\n\nfunction getDurationRecord(date1, date2){\n    /**\n     * Returns duration between two dates\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Number} duration\n     */\n\n    let duration = getDuration(date1, date2)\n\n    let result = {\n        \"@type\": \"QuantitativeValue\",\n        \"@id\": String(crypto.randomUUID()),\n        \"unitCode\": \"SEC\",\n        \"unitText\": \"s\",\n        'value': duration\n    }            \n\n    \n    return result\n\n}\n\n\nfunction getCurrentDateObject() {\n    /**\n     * Returns current date object\n     * @return {Date} date\n     * \n     */\n    let now = new Date();   \n    return now;\n}\n\n\n// -----------------------------------------------------\n//  Human readable  \n// -----------------------------------------------------\n\nfunction getHumanReadableDate(date) {\n    /**\n     * Returns human readable date\n     * @param {Date} date\n     * @return {String} date\n     * \n     */\n\n\n    // If not date 2, assume date 2 is now\n    \n    const now = new Date();\n \n    const targetDate = new Date(date);\n    const diff = Math.abs(now - targetDate); // difference in milliseconds\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const months = Math.floor(days / 30); // approximation for months\n    const years = Math.floor(days / 365); // approximation for years\n\n    if (years > 0) {\n        return years === 1 ? \"1 year ago\" : `${years} years ago`;\n    } else if (months > 0) {\n        return months === 1 ? \"1 month ago\" : `${months} months ago`;\n    } else if (days > 0) {\n        return days === 1 ? \"1 day ago\" : `${days} days ago`;\n    } else if (hours > 0) {\n        return hours === 1 ? \"1 hour ago\" : `${hours} hours ago`;\n    } else if (minutes > 0) {\n        return minutes === 1 ? \"1 minute ago\" : `${minutes} minutes ago`;\n    } else {\n        return seconds === 1 ? \"1 second ago\" : `${seconds} seconds ago`;\n    }\n}\n\nfunction getHumanReadableDuration(startDate, endDate) {\n    /**\n     * Returns human readable duration\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @return {String} duration\n     */\n\n    \n    startDate = toDate(startDate)\n    endDate = toDate(endDate)\n\n    \n    if(h.isNull(startDate)){ return '' }\n    if(h.isNull(endDate)){ return '' }\n\n    \n    const diffInMilliseconds = Math.abs(endDate - startDate);\n\n    const millisecondsInSecond = 1000;\n    const millisecondsInMinute = millisecondsInSecond * 60;\n    const millisecondsInHour = millisecondsInMinute * 60;\n    const millisecondsInDay = millisecondsInHour * 24;\n    const millisecondsInMonth = millisecondsInDay * 30.44; // Approximate value for a month\n    const millisecondsInYear = millisecondsInDay * 365.25; // Account for leap years\n\n    const years = Math.floor(diffInMilliseconds / millisecondsInYear);\n    const months = Math.floor((diffInMilliseconds % millisecondsInYear) / millisecondsInMonth);\n    const days = Math.floor((diffInMilliseconds % millisecondsInMonth) / millisecondsInDay);\n    const hours = Math.floor((diffInMilliseconds % millisecondsInDay) / millisecondsInHour);\n    const minutes = Math.floor((diffInMilliseconds % millisecondsInHour) / millisecondsInMinute);\n    const seconds = Math.floor((diffInMilliseconds % millisecondsInMinute) / millisecondsInSecond);\n\n    let duration = [];\n    if (years) { return `${years} year${years > 1 ? 's' : ''}`};\n    if (months)  { return `${months} month${months > 1 ? 's' : ''}`};\n    if (days)  { return `${days} day${days > 1 ? 's' : ''}`};\n    if (hours)  { return `${hours} hour${hours > 1 ? 's' : ''}`};\n    if (minutes)  { return `${minutes} minute${minutes > 1 ? 's' : ''}`};\n    if (seconds)  { return `${seconds} second${seconds >= 0  ? 's' : ''}`};\n    return ''\n    \n    \n    \n}\n\n\n\n// -----------------------------------------------------\n//  ISO \n// -----------------------------------------------------\n\n\n\nfunction toISODurationFromDates(startDate, endDate) {\n    /**\n     * Returns ISO duration from dates\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @return {String} duration\n     */\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    let years = end.getFullYear() - start.getFullYear();\n    let months = end.getMonth() - start.getMonth();\n    let days = end.getDate() - start.getDate();\n    let hours = end.getHours() - start.getHours();\n    let minutes = end.getMinutes() - start.getMinutes();\n    let seconds = end.getSeconds() - start.getSeconds();\n\n    // Handle negative values by adjusting the larger units\n    if (seconds < 0) {\n        seconds += 60;\n        minutes--;\n    }\n    if (minutes < 0) {\n        minutes += 60;\n        hours--;\n    }\n    if (hours < 0) {\n        hours += 24;\n        days--;\n    }\n    if (days < 0) {\n        const daysInPreviousMonth = new Date(end.getFullYear(), end.getMonth(), 0).getDate();\n        days += daysInPreviousMonth;\n        months--;\n    }\n    if (months < 0) {\n        months += 12;\n        years--;\n    }\n\n    // Construct ISO 8601 duration string\n    let duration = 'P';\n\n    if (years > 0) duration += `${years}Y`;\n    if (months > 0) duration += `${months}M`;\n    if (days > 0) duration += `${days}D`;\n\n    if (hours > 0 || minutes > 0 || seconds > 0) {\n        duration += 'T'; // Time part separator\n\n        if (hours > 0) duration += `${hours}H`;\n        if (minutes > 0) duration += `${minutes}M`;\n        if (seconds > 0) duration += `${seconds}S`;\n    }\n\n    return duration;\n}\n\nfunction convertISODurationToEnglish(duration) {\n    /**\n     * Converts ISO duration to english\n     * @param {String} duration\n     * @return {String} duration\n     * \n     */\n\n    \n    const isoDurationRegex = /^P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?)?$/;\n    const matches = duration.match(isoDurationRegex);\n\n    if (!matches) {\n        return \"Invalid ISO 8601 duration\";\n    }\n\n    const years = matches[1] ? `${matches[1]} year${matches[1] > 1 ? 's' : ''}` : '';\n    const months = matches[2] ? `${matches[2]} month${matches[2] > 1 ? 's' : ''}` : '';\n    const days = matches[3] ? `${matches[3]} day${matches[3] > 1 ? 's' : ''}` : '';\n    const hours = matches[4] ? `${matches[4]} hour${matches[4] > 1 ? 's' : ''}` : '';\n    const minutes = matches[5] ? `${matches[5]} minute${matches[5] > 1 ? 's' : ''}` : '';\n    const seconds = matches[6] ? `${matches[6]} second${matches[6] > 1 ? 's' : ''}` : '';\n\n    const parts = [years, months, days, hours, minutes, seconds].filter(Boolean);\n\n    if (parts.length === 0) {\n        return \"No duration specified\";\n    }\n\n    return parts.join(', ');\n}\n\nfunction convertEnglishToISODuration(englishDuration) {\n    /**\n     * Converts english duration to ISO duration\n     * @param {String} englishDuration\n     * @return {String} duration\n     * \n     */\n    const timeUnits = {\n        year: 'Y',\n        years: 'Y',\n        month: 'M',\n        months: 'M',\n        day: 'D',\n        days: 'D',\n        hour: 'H',\n        hours: 'H',\n        minute: 'M',\n        minutes: 'M',\n        second: 'S',\n        seconds: 'S'\n    };\n\n    let years = 0, months = 0, days = 0, hours = 0, minutes = 0, seconds = 0;\n\n    // Split the input into parts (e.g., [\"2 years\", \"6 months\"])\n    const parts = englishDuration.split(',').map(part => part.trim());\n\n    parts.forEach(part => {\n        const [value, unit] = part.split(' ');\n        const number = parseInt(value, 10);\n\n        if (isNaN(number) || !timeUnits[unit.toLowerCase()]) {\n            throw new Error(\"Invalid duration format\");\n        }\n\n        switch (unit.toLowerCase()) {\n            case 'year':\n            case 'years':\n                years = number;\n                break;\n            case 'month':\n            case 'months':\n                months = number;\n                break;\n            case 'day':\n            case 'days':\n                days = number;\n                break;\n            case 'hour':\n            case 'hours':\n                hours = number;\n                break;\n            case 'minute':\n            case 'minutes':\n                minutes = number;\n                break;\n            case 'second':\n            case 'seconds':\n                seconds = number;\n                break;\n        }\n    });\n\n    // Construct ISO 8601 duration string\n    let isoDuration = 'P';\n    if (years) isoDuration += `${years}Y`;\n    if (months) isoDuration += `${months}M`;\n    if (days) isoDuration += `${days}D`;\n\n    if (hours || minutes || seconds) {\n        isoDuration += 'T';\n        if (hours) isoDuration += `${hours}H`;\n        if (minutes) isoDuration += `${minutes}M`;\n        if (seconds) isoDuration += `${seconds}S`;\n    }\n\n    return isoDuration || \"P0D\"; // Return P0D for no duration\n}\n\n","\n\nexport const krakenEmailHelpers = {\n    isValid: isValid,\n    getDomain: getDomain,\n    getUsername: getUsername,\n}\n\n\nfunction isValid(email) {\n    /**\n     * Checks if an email is valid\n     * @param {String} email\n     * @returns {Boolean}\n     * \n     */\n    if (typeof email !== 'string') {\n        throw new TypeError('The provided value must be a string.');\n    }\n\n    // Regular expression to validate email addresses\n    const emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/ ;\n\n    return emailRegex.test(email);\n}\n\n\n\n\nfunction getUsername(email){\n    /**\n     * Returns the username of an email address\n     * @param {String} email\n     * @returns {String} The domain\n     * \n     */\n\n    if(!isValid(email)){\n        return null\n    }\n\n    return email.split('@')[0]\n\n}\n\n\nfunction getUsernamePattern(email){\n    /**\n     * Returns the pattern of the username of an email address\n     * todo: complete\n     */\n    if(!isValid(email)){\n        return null\n    }\n\n    let username = getUsername(email)\n\n    return \n\n    \n}\n\n\n\nfunction getDomain(email){\n    /**\n     * Returns the domain of an email address\n     * @param {String} email\n     * @returns {String} The domain\n     * \n     */\n\n    if(!isValid(email)){\n        return null\n    }\n\n    return email.split('@')[1]\n    \n}","\nimport { krakenNullHelpers} from './krakenNullHelpers.js';\n\nexport const krakenHashHelpers = {\n    get: getHash,\n};\n\n\n\n\n\nfunction getHash(str) {\n\n    let value = str\n\n    if(krakenNullHelpers.isNull(value)){\n        value = 'null'\n    }\n\n    try {\n        value = JSON.stringify(str)\n    } catch {\n        return null\n    }\n\n    let input = value\n    \n    const prime1 = 31; // A small prime number\n    const prime2 = 37; // Another small prime number\n    const seed = 0xabcdef; // Initial seed value\n    let hash1 = seed;\n    let hash2 = seed;\n\n    for (let i = 0; i < input.length; i++) {\n        const charCode = input.charCodeAt(i);\n        hash1 = (hash1 * prime1) ^ charCode; // Mixing with prime1\n        hash2 = (hash2 * prime2) ^ charCode; // Mixing with prime2\n    }\n\n    // Combine the two hashes into a pseudo 256-bit hash\n    let combinedHash = ((hash1 & 0xffffffff) >>> 0).toString(16).padStart(8, '0') +\n                       ((hash2 & 0xffffffff) >>> 0).toString(16).padStart(8, '0');\n\n    // Repeat the process to generate a 64-character hash\n    while (combinedHash.length < 64) {\n        combinedHash += combinedHash; // Repeat pattern\n    }\n\n    return combinedHash.slice(0, 64); // Trim to 256 bits (64 hex chars)\n}\n\n\n\nfunction getHashOLD(str) {\n    /**\n     * Get a hash value\n     * @param {Object} hash The hash\n     * @returns {String} The hash value\n     *\n     */\n\n    let value = str\n\n    if(krakenNullHelpers.isNull(value)){\n        value = 'null'\n    }\n    \n    try {\n        value = JSON.stringify(str)\n    } catch {\n        return null\n    }\n\n    \n    let seed = 5;\n\n    let h1 = 0xdeadbeef ^ seed,\n        h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < value.length; i++) {\n        ch = value.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507);\n    h1 ^= Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507);\n    h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n    let hashValue = 4294967296 * (2097151 & h2) + (h1 >>> 0);\n\n    return hashValue;\n}\n","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenObjectHelpers } from \"./krakenObjectHelpers.js\";\nimport { krakenDateHelpers } from \"./krakenDateHelpers.js\";\nimport { krakenBaseThingHelpers} from './krakenBaseThingHelpers.js'\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    date:  krakenDateHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    isObject: krakenObjectHelpers.isObject,\n    object: krakenObjectHelpers,\n    thing: krakenBaseThingHelpers\n}\n\n\nexport const krakenHeadingHelpers = {\n    record: {\n        get: getHeadingRecord,\n    },\n    oneLiner: {\n        get: getHeadingOneLiner,\n    },\n    heading1: _getHeading1,\n    heading2: _getHeading2,\n    headingDescription: _getHeadingDescription,\n    headingDate: _getHeadingDate,\n    headingDateSince: _getHeadingDateSince,\n    headingDuration: _getHeadingDuration,\n    headingStatus: _getHeadingStatus,\n    headingImage: _getHeadingImage,\n    headingStars: _getHeadingStars,\n    headingTotal: _getHeadingTotal,\n    addHeadings: addHeadingstoRecord\n\n    \n\n    \n};\n\n\nfunction addHeadingstoRecord(record){\n    /**\n     * Adds heading to record\n     * @param {Object} record\n     * @returns {Object} The record\n     */\n\n\n    let headings = getHeadingRecord(record)\n\n    for(let k in headings){\n        record[k] = headings[k]    \n    }\n\n\n    // Recurse\n    for(let k in record){\n\n        if(h.isArray(record[k])){\n            \n            for (let i=0; i < record[k].length; i++) {\n                \n                if(h.thing.isValid(record[k][i])){\n                    record[k][i] = addHeadingstoRecord(record[k][i])\n                }\n            }\n        }\n\n        if(h.thing.isValid(record[k])){\n            record[k] = addHeadingstoRecord(record[k])\n        }\n        \n    }\n\n    return record\n\n    \n}\n\nfunction getHeadingRecord(record, locale){\n    /**\n     * Returns the heading record\n     * @param {Object} record\n     * @returns {Object} The heading record\n     */\n\n    // Array\n    if(h.isArray(record)){\n        return record.map(x => getHeadingRecord(x, locale))\n    }\n\n    // Handle non object\n    if(!h.isObject(record)){\n        return record\n    }\n\n    // return non thing\n    if(h.isNull(record?.['@type'])){\n        return record\n    }\n    \n    // Copy record\n    \n    record = JSON.parse(JSON.stringify(record))\n    \n    record._heading1 =  _getHeading1(record)\n    record._heading2 =  _getHeading2(record)\n    record._headingDescription =  _getHeadingDescription(record)\n    record._headingDate =  _getHeadingDate(record)\n    record._headingDateSince =  _getHeadingDateSince(record)\n    record._headingStatus =  _getHeadingStatus(record)\n    record._headingImage = _getHeadingImage(record)\n    record._headingDuration = _getHeadingDuration(record)\n    record._headingStars = _getHeadingStars(record)\n    record._headingPrice = _getHeadingPrice(record)\n    record._headingPriceUnit = _getHeadingPriceUnit(record)\n    record._headingHtmlInputType = getHtmlInputType(record)\n\n    // Recurse for sub records\n    for(let k of Object.keys(record)){\n        record[k] = getHeadingRecord(record[k], locale)\n    }\n\n    record = krakenJsonHelpers.simplify(record)\n\n    \n    // Return\n    return record\n}\n\nfunction getHeadingOneLiner(record, locale){\n    /**\n     * Returns the heading one liner\n     * @param {Object} record\n     * @returns {str} The heading one liner\n     */\n\n    let elements = []\n    elements.push(_getHeadingDate(record))\n    elements.push(_getHeading1(record))\n    elements.push(_getHeadingStatus(record))\n\n    elements = elements.filter(x => !h.isNull(x))\n    return elements.join(' ')\n    \n}\n\n\nfunction _getHeading1(record) {\n   \n    let heading = \"heading1\";\n    return _getHeadingX(record, heading);\n   \n}\n\n\nfunction _getHeading2(record) {\n    let heading = \"heading2\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDescription(record) {\n    let heading = \"headingDescription\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDate(record) {\n    let heading = \"headingDate\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingStatus(record) {\n    let heading = \"headingStatus\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingImage(record) {\n\n    if(h.isNotNull(record?.contentUrl)){\n        return record?.contentUrl\n    }\n    if(h.isNotNull(record?.image?.contentUrl)){\n        return record?.image?.contentUrl\n    }\n    return null\n\n}\n\nfunction _getHeadingDuration(record){\n\n    let date = _getHeadingDate(record) \n    if(h.isNull(date)){ return null }\n    \n    let duration = h.date.human.duration(date)\n    return duration\n}\n\nfunction _getHeadingDateSince(record){\n\n    let date = _getHeadingDate(record) \n    if(h.isNull(date)){ return null }\n    let duration = h.date.human.duration(date)\n    return duration\n\n}\n\n\nfunction _getHeadingStars(record){\n\n    let score = record?.ratingValue\n\n    if(h.isNull(score)){ return null }\n    \n    let runningScore = 0\n\n    let content = ''\n    while(runningScore < score){\n        content += fullStar()\n        runningScore += 1\n    }\n\n\n    if(score > runningScore && score < runningScore +1){\n        content += halfStar()\n    }\n\n    while(runningScore < (score?.bestRating || 5) ){\n        content += emptyStar()\n        runningScore +=1\n    }\n\n    return content\n    \n}\n\nfunction _getHeadingPrice(record){\n\n    if(h.isNull(record?.priceSpecification)){ return null }\n\n    let ps = record?.priceSpecification?.[0] || record?.priceSpecification\n\n    let price = ps?.price\n    let priceCurrency = ps?.priceCurrency\n\n    let content = ''\n\n    if(priceCurrency == 'CAD' || priceCurrency == 'USD'){\n        content = '$'\n    }\n\n    \n    \n    if(h.number.isValid(h.number.toNumber(ps?.price))){\n\n        content += String(ps.price)\n           \n    }\n\n    if(content ==''){\n        content = null\n    }\n    return content\n    \n}\n\nfunction _getHeadingPriceUnit(record){\n\n    if(h.isNull(record?.priceSpecification)){ return null }\n\n    let ps = record?.priceSpecification?.[0] || record?.priceSpecification\n\n    let content = null\n    if(h.isNotNull(ps?.referenceQuantity?.unitCode)){\n\n        content = ps?.referenceQuantity?.unitCode\n        if(h.isNotNull(content)){\n            content = content.toLowerCase()\n        }\n    }\n\n    return content\n\n}\n\nfunction getHtmlInputType(record){\n\n    if(record?.['@type'] != 'PropertyValueSpecification'){\n        return\n    }\n\n\n    if(record?.minValue == 0 && record.maxValue==1){\n        return 'checkbox'\n    }\n\n    \n\n    if(h.isNotNull(record?.minValue)){\n        return \"number\"\n    }\n    if(h.isNotNull(record?.maxValue)){\n        return 'number' \n    }\n\n    if(h.isNotNull(record?.valueName) && record?.valueName.includes('Date')){\n        return 'datetime-local'\n    }\n\n    if(h.isNotNull(record?.valueName) && record?.valueName.includes('Time')){\n        return 'datetime-local'\n    }\n\n    if(h.isNotNull(record?.valueName) && record?.valueName.toLowerCase().includes('email')){\n        return 'email'\n    }\n\n    if(h.isNotNull(record?.valueName) && record?.valueName.toLowerCase().endsWith('url')){\n        return 'url'\n    }\n\n    if(h.isNotNull(record?.valueName) && record?.valueName.toLowerCase().includes('phone')){\n        return 'phone'\n    }\n    \n   \n    \n}\n\n\n\nfunction _getHeadingTotal(record){\n\n    \n}\n\nfunction _getHeadingX(record, heading) {\n    /**\n     * Returns the heading for a given record\n     * @param {Object} record\n     * @param {String} heading\n     * @returns {String} The heading\n     */\n\n    let headingValue = ''\n    try {\n        \n        let record_type = record[\"@type\"];\n    \n        let config = getConfig();\n    \n        let headingPossibilities = config?.[record_type]?.[heading];\n\n        // Revert to thing if null\n        if (h.isNull(headingPossibilities) ) {\n            headingPossibilities = config?.[\"Thing\"]?.[heading];\n        }\n    \n        headingValue = null;\n\n\n        // if heading2, ensures that it is not equal to heading1\n        let comparaison = null\n        if(heading === \"heading2\"){\n            comparaison = _getHeadingX(record, \"heading1\")\n        }\n        \n        // Iterate through possibilities until a non null value is found\n        for (let hp of h.toArray(headingPossibilities)) {\n            headingValue = _getValue(record, heading, hp);\n    \n            if (h.isNotNull(headingValue)) {\n\n                if(heading == \"heading2\"){\n                    if (comparaison != headingValue){\n                        break\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n    } catch {\n        headingValue = record?.[\"@id\"]\n    }\n        \n    return headingValue;\n}\n\nfunction _getValue(record, heading, keys) {\n    keys = h.toArray(keys);\n\n    let values = [];\n    for (let k of keys) {\n        let value = record[k];\n\n        if (Array.isArray(value)) {\n            value = value[0];\n        }\n\n        // Handle object as values (when listItem references item for example )\n        if (value?.[\"@type\"]) {\n            value = _getHeadingX(value, \"heading1\");\n        }\n\n        if (value && value != null) {\n            values.push(value);\n        }\n    }\n\n    if (values.length == 0) {\n        return null;\n    }\n\n    // Assemble values\n    let headingValue = values.join(\" \");\n\n    return headingValue;\n}\n\nfunction getConfig() {\n    let record = {\n        Thing: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"\"],\n        },\n        Article: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        Action: {\n            heading1: [\"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        EditorPart: {\n            heading1: [\"propertyID\"],\n            heading2: [\"value\"],\n            headingDescription: [\"value\"],\n        },\n        Person: {\n            heading1: [[\"givenName\", \"familyName\"], \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"title\", \"email\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        ListItem: {\n            heading1: [\"item\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"item\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        CreativeWork: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        HowTo: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        HowToSection: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        HowToStep: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        HowToDirection: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        PostalAddress: {\n            heading1: [\"streetAddress\", \"name\", [\"@type\", \"@id\"]],\n            heading2: [\n                [\n                    \"addressLocality\",\n                    \"addressRegion\",\n                    \"postalCode\",\n                    \"addressCountry\",\n                ],\n            ],\n            headingDescription: [\"text\", \"name\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        QuantitativeValue: {\n            heading1: [[\"value\", \"unitText\"], [\"value\", \"unitCode\"], \"@id\"],\n        },\n        Order: {\n            \n        }\n    };\n\n    return record;\n}\n\n\n\nfunction fullStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n    </svg>`\n}\n\nfunction halfStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-half\" viewBox=\"0 0 16 16\">\n          <path d=\"M5.354 5.119 7.538.792A.52.52 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.54.54 0 0 1 16 6.32a.55.55 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.5.5 0 0 1-.146.05c-.342.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.172-.403.6.6 0 0 1 .085-.302.51.51 0 0 1 .37-.245zM8 12.027a.5.5 0 0 1 .232.056l3.686 1.894-.694-3.957a.56.56 0 0 1 .162-.505l2.907-2.77-4.052-.576a.53.53 0 0 1-.393-.288L8.001 2.223 8 2.226z\"/>\n        </svg>`\n}\n\n\n\nfunction emptyStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n  <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z\"/>\n</svg>`\n}\n\n\n","\n\n\nexport const krakenRegexHelpers = {\n    isValid: isValid,\n    regexFromString: regexFromString,\n    test: testRegex,\n    match: matchRegex\n}\n\n\nfunction isValid(str){\n    /**\n     * Checks if a regex is valid\n     * @param {String} str\n     * @returns {Boolean}\n     */\n\n    try{\n        let result = regexFromString(str)\n        return true\n    } catch {\n        return false\n    }\n    \n}\n\nfunction regexFromString(str) {\n  const match = str.match(/^([\\/~@;%#'])(.*?)\\1([gimsuy]*)$/);\n  return match ? \n    new RegExp(\n      match[2],\n      match[3]\n        // Filter redundant flags, to avoid exceptions\n        .split('')\n        .filter((char, pos, flagArr) => flagArr.indexOf(char) === pos)\n        .join('')\n    ) \n    : new RegExp(str);\n}\n\n\nfunction testRegex(str, regex){\n\n    if(typeof regex == 'string'){\n        regex = regexFromString(regex)\n    }\n\n   \n    return regex.test(str)\n    \n}\n\nfunction matchRegex(str, regex){\n\n    \n\n}","\nimport { krakenValueHelpers as v } from \"./krakenValueHelpers.js\";\nimport { krakenFileHelpers} from './krakenFileHelpers.js'\n\n\n\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenDateHelpers } from \"./krakenDateHelpers.js\";\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    date: krakenDateHelpers\n}\n\n\n\n\n\nexport class KrSimpleThing {\n    constructor(record_type_or_record, record_id) {\n        this._record = {};\n\n        if (record_type_or_record?.[\"@type\"]) {\n            this._record = record_type_or_record;\n        } else {\n            this._record[\"@type\"] = record_type_or_record;\n            this._record[\"@id\"] = record_id;\n        }\n\n    }\n\n    // -----------------------------------------------------\n    //  Core\n    // -----------------------------------------------------\n\n    toString() {\n\n      \n        let content = `${headingRecord?._headingDate || \"\"} ${headingRecord?._heading1} ${headingRecord?._heading2}`;\n        \n        return content\n    }\n\n    toJSON() {\n        return this.record;\n    }\n\n    get json() {\n        return JSON.stringify(this.record, null, 4);\n    }\n\n    new() {\n        let newObject = new Thing_simple();\n        newObject.record = this.record;\n    }\n\n    clone() {\n        let newObject = new Thing_simple();\n        newObject.record = this.record;\n    }\n\n    // -----------------------------------------------------\n    //  Attributes\n    // -----------------------------------------------------\n\n    get record() {\n        return JSON.parse(JSON.stringify(this._record));\n    }\n    set record(value) {\n        this._record = JSON.parse(JSON.stringify(value));\n    }\n\n    get record_type() {\n        return this._record?.[\"@type\"];\n    }\n    set record_type(value) {\n        this._record[\"@type\"] = value;\n    }\n\n    get record_id() {\n        if (h.isNull(this._record?.[\"@id\"])) {\n            this._record[\"@id\"] == String(crypto.randomUUID());\n        }\n        return this._record?.[\"@id\"];\n    }\n    set record_id(value) {\n        this._record[\"@id\"] = value;\n    }\n\n    // -----------------------------------------------------\n    //  Shortcut Attributes\n    // -----------------------------------------------------\n\n    get name() {\n        return this._record.name \n    }\n    set name(value) {\n         this._record.name = value;\n    }\n\n    get url() {\n        return this._record?.url;\n    }\n    set url(value) {\n         this._record.url = value;\n    }\n}\n\n\nexport class KrSimpleAction extends KrSimpleThing {\n    constructor(name, object) {\n        super(\"Action\");\n        this.setActive();\n        this._record.error = null\n        this.name = name;\n        this.object = object;\n    }\n\n    // -----------------------------------------------------\n    //  Base\n    // -----------------------------------------------------\n\n    toString(indent=0) {\n        let content = `${' '.repeat(indent)}- ${h.date.toString(this.startTime)} o:${h.toArray(this.object).length} i:${h.toArray(this.instrument).length} r:${h.toArray(this.result).length} ${this.status} ${this.name} ${this.error || ''}\\n`;\n\n        if(h.isNotNull(this.instrument)){                \n            for(let i of h.toArray(this.instrument)){\n                if(i?.record_type == \"Action\"){\n                    content += i.toString(indent + 4)\n                }\n            }\n        }\n        return content\n    }\n\n   \n    new() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    clone() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    lt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    gt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    // -----------------------------------------------------\n    //  Action attributes\n    // -----------------------------------------------------\n\n    get actionStatus() {\n        return this._record?.actionStatus;\n    }\n    set actionStatus(value) {\n        this._record.actionStatus = value;\n    }\n\n    get status() {\n        let value = this.actionStatus || \"\";\n        if (h.isNotNull(value)) {\n            value = value.replace(\"ActionStatus\", \"\");\n        }\n        return value;\n    }\n\n    get object() {\n        return this._record?.object;\n    }\n    set object(value) {\n        this._record.object = h.toArray(this._record.object).concat(h.toArray(value))\n    }\n\n    get instrument() {\n        return this._record?.instrument;\n    }\n    set instrument(value) {\n        this._record.instrument = h.toArray(this._record.instrument).concat(h.toArray(value))\n    }\n\n    get result() {\n        return this._record?.result;\n    }\n    set result(value) {\n        this._record.result = h.toArray(this._record.result).concat(h.toArray(value))\n        \n    }\n\n    get startTime() {\n        return this._record?.startTime;\n    }\n    set startTime(value) {\n        this._record.startTime = value;\n    }\n\n    get endTime() {\n        return this._record?.endTime;\n    }\n    set endTime(value) {\n        this._record.endTime = value;\n    }\n\n    get error() {\n        return this._record?.error;\n    }\n    set error(value) {\n        this._record.error = value;\n        if (h.isNotNull(value)) {\n            this.actionStatus = \"FailedActionStatus\";\n            this.endTime = new Date();\n        }\n    }\n\n    get duration() {\n        return h.date.duration(this.startTime, this.endTime);\n    }\n\n    isSuccess() {\n        return this.actionStatus == \"CompletedActionStatus\";\n    }\n\n    // -----------------------------------------------------\n    //  Action methods\n    // -----------------------------------------------------\n\n    setPotential(error) {\n        this.actionStatus = \"PotentialActionStatus\";\n        this.error = String(error);\n        this.startTime = null;\n        this.endTime = null;\n    }\n\n    setActive(error) {\n        this.actionStatus = \"ActiveActionStatus\";\n        this.error = String(error);\n        this.startTime = new Date();\n    }\n\n    setCompleted() {\n        this.actionStatus = \"CompletedActionStatus\";\n        this.endTime = new Date();\n    }\n\n    setFailed(error) {\n        this.actionStatus = \"FailedActionStatus\";\n        this.error = String(error);\n        this.endTime = new Date();\n    }\n\n    close(){\n\n        for(let i of h.toArray(this.instrument)){\n            \n            if(i?.actionStatus == 'FailedActionStatus'){\n                this.setFailed(i.error);\n                return\n            }\n        }\n        this.setCompleted();\n        \n    }\n\n    // -----------------------------------------------------\n    //  Comment\n    // -----------------------------------------------------\n\n    getHumanRecord() {\n        let humanRecord = v.innerValuesToText(this.record);\n        humanRecord.duration = h.date.human.duration(this.startTime, this.endTime);\n        return humanRecord;\n    }\n}\n\n\n\nexport class KrSimpleFile extends KrSimpleThing {\n    constructor(file) {\n        super(\"DigitalObject\");\n\n        this._file = null\n        \n       \n    }\n\n    // -----------------------------------------------------\n    //  Base\n    // -----------------------------------------------------\n\n    toString() {\n        return `${h.date.toText(this.startTime)} ${this.name} ${this.status}`;\n    }\n\n    new() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    clone() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    lt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    gt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    \n\n    // -----------------------------------------------------\n    //  File methods\n    // -----------------------------------------------------\n\n    get file(){\n\n        return this._file\n    }\n\n     set file(value){\n         this.setFile(value)\n    }\n\n    async setFile(value){\n        this._file = value\n        this._record =  await krakenFileHelpers.getRecord(value)\n    }\n\n    // -----------------------------------------------------\n    //  Comment\n    // -----------------------------------------------------\n\n    getHumanRecord() {\n        let humanRecord = v.innerValuesToText(this.record);\n        humanRecord.duration = h.date.human.duration(this.startTime, this.endTime);\n        return humanRecord;\n    }\n}\n\n\n\nclass KrSimpleCache {\n\n    constructor(){\n        this._db = {}\n    }\n\n    set(thing){\n        /**\n         * Store a thing in cache\n         * @param {KrSimpleThing} thing\n         * \n         */\n\n        let record_type = thing.record_type || thing?.[\"@type\"] || null\n        let record_id = thing.record_id || thing?.[\"@id\"] || null\n\n        if(h.isNull(record_type) || h.isNull(record_id)){\n            throw new Error('Invalid record type or id')\n        }\n        \n        \n        \n        this._db[record_type] = this._db?.[record_type] || {}\n        this._db[record_type][record_id] = thing\n        \n    }\n\n    get(record_or_record_type, record_id){\n        /**\n         * Get a thing from cache\n         * @param {KrSimpleThing} record_or_record_type\n         * @param {String} record_id\n         * \n         */\n\n        let record_type = record_or_record_type.record_type || record_or_record_type?.[\"@type\"] || record_or_record_type\n         record_id = record_or_record_type.record_id || record_or_record_type?.[\"@id\"] || record_id\n\n        if(h.isNull(record_type) || h.isNull(record_id)){\n            throw new Error('Invalid record type or id')\n        }\n\n        return this._db?.[record_type]?.[record_id] || null\n        \n    }\n\n    getAll(){\n        /**\n         * Get all things from cache\n         * @param {KrSimpleThing} record_or_record_type\n         * @param {String} record_id\n         * \n         */\n\n\n        let results = []\n        for(let t in this._db){\n            for(let i in this._db[t]){\n                results.push(this._db[t][i])\n            }\n        }\n        return results\n        \n    }\n    \n}\n\n\n\nexport const krakenSimpleThingHelpers = {\n    Thing: KrSimpleThing,\n    Action: KrSimpleAction,\n    File: KrSimpleFile,\n    Cache: KrSimpleCache\n    \n}","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenObjectHelpers } from \"./krakenObjectHelpers.js\";\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    object: krakenObjectHelpers\n}\n\n\n\nexport const krakenValueHelpers = {\n\n    toString: toString,\n    getType: getType,\n    getTypeSchemaOrg: getTypeSchemaOrg,\n    innerValuesToText: innerValuesToText,\n    valuesToText: innerValuesToText\n}\n\n\nfunction isValid(value){\n    /**\n     * Checks if a value is valid\n     * @param {Object} value\n     * @returns {Boolean}\n     */\n\n    return true\n    \n}\n\n\nfunction toString(value) {\n    /**\n     * Converts a value to a string\n     * @param {Object} value The value\n     * @returns {String} The string\n     * \n     */\n    \n    if(value !== 0 && value === undefined){ return ''}\n    if(value !== 0 && value === null){ return ''}\n    if(value !== 0 && value == ''){ return ''}\n    if(value !== 0 && h.array.isValid(value) && value.length == 0 ){ return ''}\n    if(value !== 0 && value == {}){ return ''}\n    if(value !== 0 && value == 'undefined'){ return ''}\n    \n    if (h.thing.isValid(value)) {\n        return h.thing.toString(value)\n    } else if (h.date.isValid(value)) {\n        return h.date.toString(value)\n    } else if (h.date.isValidText(value)) {\n        return h.date.toString(value)\n    } else if (h.array.isValid(value)) {\n        return h.array.toString(value)\n    } else if (h.number.isValid(value)) {\n        return h.number.toString(value)\n    } else if (h.object.isObject(value)) {\n        return h.object.toString(value)\n    } else {\n        value = String(value)\n        value = value.replace('ActionStatus', '')\n        value = value.replace('undefined', '')\n        value = h.string.fromCamelCase(value)\n        return value\n    }\n}\n\n\nfunction innerValuesToText(value){\n    /**\n     * Convertsthe values of a dict to a string\n     * @param {Object} value The value\n     * @returns {String} The string\n     */\n    \n    if (h.array.isValid(value)) {\n        let result = []\n        for(let v of value){\n            result.push(innerValuesToText(v))\n        }\n        return result\n    } \n\n    if(h.object.isObject(value)){\n\n        let result = {}\n        for(let k of h.object.keys(value)){\n            result[k] = toString(value[k])\n        }\n        return result \n    }\n    \n    return toString(value)\n}\n\n\nfunction getType(value) {\n    /**\n     * Returns the type of a value\n     * @param {Object} value The value\n     * @returns {String} The type (thing, datetime, array, number, string)\n     * \n     */\n\n    if (h.thing.isThing(value)) {\n        return 'thing'\n    } else if (h.date.isValid(value)) {\n        return 'datetime'\n    } else if (h.array.isValid(value)) {\n        return 'array'\n    } else if (h.number.isNumber(value)) {\n        return 'number'\n    } else {\n        return 'string'\n    }\n\n}\n\n\nfunction getTypeSchemaOrg(value){\n    /**\n     * Returns the schema.org type of a value \n     * @param {Object} value The value\n     * @returns {String} The type (thing, datetime, array, number\n     */\n\n    let t = getType(value)\n\n\n    if(t == \"thing\"){\n        return value['@type']\n    }\n    \n    if(t == \"string\"){\n        if(h.url.toUrl(value)){\n            return 'url'\n        }\n        \n    }\n\n    return t\n\n    \n}\n\n","\nexport const krakenFileHelpers = {\n    getPreview: getPreviewElementFromFile,\n    getRecord: getRecordFromFile,\n};\n\n// -----------------------------------------------------\n//  Record\n// -----------------------------------------------------\n\nasync function getRecordFromFile(file) {\n    console.log(\"--- width\", file.width);\n    let record = {};\n    record[\"@type\"] = _getRecordTypeFromFile(file);\n    record.contentSize = file.size;\n    record.dateModified = file.lastModifiedDate;\n    record.encodingFormat = file.type;\n    record.name = file.name;\n\n    return record;\n}\n\nfunction _getRecordTypeFromFile(file) {\n    let record_type = null;\n    if (file.type.startsWith(\"image/\")) {\n        record_type = \"ImageObject\";\n    } else if (file.type.startsWith(\"video/\")) {\n        record_type = \"VideoObject\";\n    } else if (file.type.startsWith(\"audio/\")) {\n        fileType = \"AudioObject\";\n    } else if (file.type.startsWith(\"application/\")) {\n        record_type = \"SoftwareApplication\";\n    } else if (file.type.startsWith(\"text/\")) {\n        record_type = \"DigitalDocument\";\n    }\n    return record_type;\n}\n\n// -----------------------------------------------------\n//  Elements\n// -----------------------------------------------------\n\nasync function getPreviewElementFromFile(file) {\n    /**\n     * Given a file object, returns an element with preview of the file\n     */\n\n    let previewContainer = document.createElement(\"span\");\n\n    if (file) {\n        const reader = new FileReader(); // Create a FileReader\n        const fileType = file.type;\n\n        // Image file\n        if (fileType.startsWith(\"image/\")) {\n            reader.onload = function (e) {\n                const img = document.createElement(\"img\");\n                img.src = e.target.result;\n                img.style.maxWidth = \"300px\";\n                img.style.maxHeight = \"300px\";\n                previewContainer.appendChild(img);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Text file\n        else if (fileType.startsWith(\"text/\")) {\n            reader.onload = function (e) {\n                const text = document.createElement(\"pre\");\n                text.textContent = e.target.result;\n                previewContainer.appendChild(text);\n            };\n            reader.readAsText(file);\n        }\n        // Video file\n        else if (fileType.startsWith(\"video/\")) {\n            reader.onload = function (e) {\n                const video = document.createElement(\"video\");\n                video.src = e.target.result;\n                video.controls = true;\n                video.style.maxWidth = \"300px\";\n                video.style.maxHeight = \"300px\";\n                previewContainer.appendChild(video);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Audio file\n        else if (fileType.startsWith(\"audio/\")) {\n            reader.onload = function (e) {\n                const audio = document.createElement(\"audio\");\n                audio.src = e.target.result;\n                audio.controls = true;\n                previewContainer.appendChild(audio);\n            };\n            reader.readAsDataURL(file);\n        }\n        // PDF file\n        else if (fileType === \"application/pdf\") {\n            reader.onload = function (e) {\n                const object = document.createElement(\"object\");\n                object.data = e.target.result;\n                object.type = \"application/pdf\";\n                object.style.width = \"100%\";\n                object.style.height = \"500px\";\n                previewContainer.appendChild(object);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Other file types\n        else {\n            previewContainer.textContent =\n                \"File type not supported for preview.\";\n        }\n    }\n    return previewContainer;\n}\n","\n\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\n\n\nconst h = {\n    isNull: krakenNullHelpers.isNull,\n    null: krakenNullHelpers\n}\n\n\nexport const krakenStorageHelpers = {\n    /**\n     * Local storage helpers\n     * Sets things records in local storage\n     *\n     * \n     */\n\n    \n    get: getRecord,\n    getAll: getAllRecords,\n    set: setRecord\n}\n\n\n\nfunction getRecord(record_or_record_type, record_id){\n    /**\n     * Gets a record from storage\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {Object} The record\n     */\n\n    let record_type = record_or_record_type?.['@type'] || record_or_record_type?.record_type || record_or_record_type\n    record_id = record_or_record_type?.['@id'] || record_or_record_type?.record_id || record_id\n    \n    if(h.isNull(record_type)){\n        throw new Error('Invalid record type')\n    }\n\n    if(h.isNull(record_id)){\n        throw new Error('Invalid record id')\n    }\n    \n\n    let db = JSON.parse(localStorage.getItem(\"things\"));\n\n    return db?.[record_type]?.[record_id] || null\n\n}\n\nfunction getAllRecords(){\n    /**\n     * Gets records from storage\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @returns {Object} The record\n     */\n\n\n    let db = JSON.parse(localStorage.getItem(\"things\"));\n\n    let records = []\n    for(let record_type in db){\n        for(let record_id in db[record_type]){\n            records.push(db[record_type][record_id])\n        }\n    }\n\n    return records\n\n}\n\n\nfunction setRecord(record){\n    /**\n     * Sets a record in storage\n     * @param {Object} record\n     * @returns {Object} The record\n     */\n\n    let db = JSON.parse(localStorage.getItem(\"things\"));\n\n    db = db || {}\n\n\n    let record_type = record?.['@type'] || record?.record_type || null\n    let record_id = record?.['@id'] || record?.record_id || null\n\n    if(h.isNull(record_type)){\n        return false\n    }\n\n    if(h.isNull(record_id)){\n        return false\n    }\n    \n\n    db[record_type] = db?.[record_type] || {}\n    \n    db[record_type][record_id] = record\n    localStorage.setItem(\"things\", JSON.stringify(db))\n\n    \n    return true\n    \n}\n\n","import { krakenDateHelpers } from \"./krakenDateHelpers.js\";\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\nexport const krakenStringHelpers = {\n    isValid: isValid,\n    toString: toString,\n    toCamelCase: toCamelCase,\n    fromCamelCase: fromCamelCase,\n    capitalize: capitalizeWords,\n    clean: cleanString\n    \n};\n\n\nfunction isValid(str){\n    /**\n     * Checks if a string is valid\n     * @param {String} str\n     * @returns {Boolean}\n     * \n     */\n\n    if(typeof str == 'string'){\n        return true\n    }\n    return false\n    \n}\n\nfunction toString(value){\n    /**\n     * Converts a value to a string\n     * @param {Object} value\n     * @returns {String}\n     */\n\n    if(krakenNullHelpers.isNull(value)){ return ''}\n    \n    try {\n        return value.toString() \n    } catch {\n         return String(value)\n    }\n    \n    \n}\n\n\nfunction cleanString(str){\n    /**\n     * Clean up string by removing spaces and non standard charcters\n     * @param {String} str\n     * @returns {String}\n     */\n    let string = str\n\n    // Remove html codes\n    string =  string.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n    // Remove next lines\n    string = string.replace('\\n', '')\n\n    // remove spaces\n    string = string.trim()\n\n\n    return string\n}\n\n\n\nfunction toCamelCase(str) {\n    /**\n     * Converts a string to camel case\n     * @param {String} str\n     * @returns {String}\n     */\n    \n    return (\n        str\n            // Split the string by spaces, underscores, or hyphens\n            .split(/[-_\\s]+/)\n            // Convert the first word to lowercase and capitalize the first letter of the following words\n            .map((word, index) =>\n                index === 0\n                    ? word.toLowerCase()\n                    : word.charAt(0).toUpperCase() +\n                      word.slice(1).toLowerCase(),\n            )\n            // Join them back into a single string\n            .join(\"\")\n    );\n}\n\nfunction fromCamelCase(str) {\n    /**\n     * Converts a string from camel case\n     * @param {String} str\n     * @returns {String}\n     */\n\n    \n    return (\n        str\n            // Insert a space before every uppercase letter and convert the whole string to lowercase\n            .replace(/([A-Z])/g, \" $1\")\n            .toLowerCase()\n            .trim()\n    );\n}\n\n\n\nfunction capitalizeWords(input) {\n    /**\n     * Capitalize the first letter of each word in a string\n     * @param {String} input\n     * @returns {String}\n     */\n\n    \n    // Error checking: input should be a string\n    if (typeof input !== 'string') {\n        return input\n    }\n    try{\n\n        // Split the string into an array of words, capitalize the first letter of each word, then join them back into a single string\n        return input.split(' ').map(word => {\n            if (word.length > 0) {\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n            }\n            return word; // Handles cases where there might be multiple spaces\n        }).join(' ');\n    } catch (error){ return input}\n}\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n","\nimport { krakenNullHelpers} from './krakenNullHelpers.js';\nimport { krakenAnalysisHelpers} from './krakenAnalysisHelpers.js';\n\n\nconst h = {\n    null: krakenNullHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    analysis: krakenAnalysisHelpers\n}\n\n\n/**\n * String operation helpers\n * String operations are complete operations contained in a single string\n * Similar to template engine\n * Example: 'orderItems | filter:orderItems.name == \"item1\" | orderItems.name'\n * Would return the following parts:\n *     1.\n *         - no: 0\n *         - propertyID: orderItems\n *         - operator: null\n *         - config: null\n *     2.\n *         - no: 1\n *         - propertyID: orderItems.name\n *         - operator: filter\n *         - config: { \"orderItems.name\":  \"item1\" }\n *     3.\n *         - no: 2\n *         - propertyID: orderItems.name\n *         - operator: null\n *         - config: null\n *         \n * \n */\n\n\nexport const krakenStringOperationHelpers = {\n    get: getOperations,\n    getOperations: getOperations,\n    execute: executeOperations,\n}\n\n\nfunction executeOperations(records, operations){\n    /**\n     * Executes the operations on the records\n     * @param {Array} records\n     * @param {Array} operations\n     * @returns {Array|Object|str} The records\n     * \n     */\n\n    // Error handling\n    if(h.isNull(records)){ return null }\n    if(h.isNull(operations)){ return records }\n    \n    if(typeof operations == 'string'){\n        operations = getOperations(operations)\n    }\n\n\n    let values = records\n    \n\n    for(let o of operations){\n        values = executeOperation(values, o)\n    }\n\n    return values\n    \n}\n\n\nfunction executeOperation(records, operation){\n    /**\n     * Executes the operation on the records\n     * @param {Object} record\n     * @param {Object} operation\n     * @returns {Object|str} The record\n     */\n    \n    // Error handling\n    if(h.isNull(records)){ return null }\n    if(h.isNull(operation)){ return records }\n\n    if(h.isNull(operation.operator)){\n        return h.analysis.getValues(records, operation?.propertyID)\n    }\n\n    if(operation.operator == 'filter'){\n        return h.analysis.filter(records, operation?.config)\n    }\n\n    if(operation.operator == 'sumProduct'){\n        return h.analysis.sumProduct(records, operation.propertyID?.[0], operation.propertyID?.[1])\n    }\n\n    if(operation.operator == 'n'){\n        return h.analysis.n(records, operation.propertyID)\n    }\n    \n    if(operation.operator == 'sum'){\n        return h.analysis.sum(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'min'){\n        return h.analysis.min(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'max'){\n        return h.analysis.max(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'avg'){\n        return h.analysis.avg(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'first'){\n        return h.analysis.first(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'last'){\n        return h.analysis.last(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'stdev'){\n        return h.analysis.stdev(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'transpose'){\n        return h.analysis.transpose(records, operation.propertyID)\n    }\n\n    if(operation.operator == 'with'){\n        return h.analysis.getValues(records, operation.propertyID)\n    }\n\n    return records\n}\n\nfunction getOperations(str){\n    /**\n     * return all operations from a string\n     * @param {String} str\n     * @returns {Array}\n     * \n     */\n\n    let parts = _getOperationParts(str)\n\n    let records = []\n    for(let i = 0; i < parts.length; i++){\n        records.push(getOperationRecord(parts[i], i))\n    }\n\n    // return records\n    return records\n    \n}\n\n\nfunction getOperationRecord(part, no){\n    /**\n     * return the record associated with an operation\n     * @param {String} part\n     * @returns {Object}\n     */\n\n\n    let record = {\n        'no': no,\n        'propertyID': _getOperationPropertyID(part),\n        'operator': _getOperationOperator(part),\n        'config': _getOperationConfig(part)\n    }\n\n    return record\n\n    \n}\n\n\n\nfunction _getOperationConfig(part){\n    /**\n     * Gets the operation config\n     * @param {String} part The part\n     * @returns {Object} The operation config\n     * \n     */\n\n    // Error handling\n    if(h.isNull(part)){\n        return []\n    }\n\n    if(typeof part != 'string'){\n        return []\n    }\n\n    // If no command, assumes entire thing is propertyID\n    if(!part.includes(':')){\n        return null\n    }\n\n    let configStr = part.split(':')?.[1] || null\n\n    // if contains ==, assume it is not command\n    if(h.isNotNull(configStr) && !configStr.includes('=')){\n        return null\n    }\n\n\n    // Split the config string by ','\n    let configParts = []\n    if(h.isNotNull(configStr)){\n        configParts = configStr.split(',')\n    }\n\n    // Build config record \n    let configRecord = {}\n    for(let c of configParts){\n        let config = c.split('=')\n\n        let configKey = _cleanString(config?.[0])\n        let configValue = _cleanString(config?.[1])\n\n        if(h.isNull(configKey) || h.isNull(configValue)){\n            continue\n        }\n        \n        configRecord[configKey] = configValue\n        \n    }\n\n    return configRecord\n    \n}\n\n\n\nfunction _getOperationPropertyID(part){\n    /**\n     * Gets the propertyID from a part\n     * @param {Object} part The part\n     * @returns {String} The propertyID\n     *\n     * returns an array of propertyIDs of commas present\n     */\n\n    // Error handling\n    if(h.isNull(part)){\n        return []\n    }\n\n    if(typeof part != 'string'){\n        return []\n    }\n\n    // If no command, assumes entire thing is propertyID\n    let propertyID\n    if(!part.includes(':')){\n        propertyID = part\n    } else {\n        propertyID = part.split(':')?.[1] || null\n    }\n\n\n    // if contains =, assume it is not poropertyID\n    if(h.isNotNull(propertyID) && propertyID.includes('=')){\n        return null\n    }\n\n\n    propertyID = _cleanString(propertyID)\n\n\n    // Check if commas \n    if(h.isNotNull(propertyID) && propertyID.includes(',')){\n        propertyID = propertyID.split(',')\n        propertyID = propertyID.map(x => _cleanString(x))\n    }\n    \n    return propertyID\n    \n}\n\nfunction _getOperationOperator(part){\n    /**\n     * Returns the command part of an operation\n     * @param {Object} part The part of the operation\n     * @returns {String} The command\n     */\n\n\n    // Error handling\n    if(h.isNull(part)){\n        return []\n    }\n\n    if(typeof part != 'string'){\n        return []\n    }\n    if(!part.includes(':')){\n        return null\n    }\n\n    //\n    \n    let operator = part.split(':')?.[0] || null\n\n    operator = _cleanString(operator)\n\n    return operator\n    \n    \n}\n\n\nfunction _getOperationParts(str){\n    /**\n     * Gets the parts of a string that are operators (between | )\n     * @param {String} str\n     * @returns {Array}\n     * \n     */\n\n    // Error handling\n    if(h.isNull(str)){\n        return []\n    }\n\n    if(typeof str != 'string'){\n        return []\n    }\n\n    // Get the parts\n    let parts = str.split('|')\n\n    return parts\n    \n}\n\n\nfunction _cleanString(str){\n    /**\n     * Cleans a string\n     * @param {String} str\n     * @returns {String}\n     * \n     */\n\n\n    // Error handling\n    if(h.isNull(str)){ \n        return null \n    }\n\n    try { \n        str = str.trim()\n    } catch (error){\n        \n        return null\n    }\n    \n    return str\n\n    \n}","\nimport { krakenDateHelpers } from \"./krakenDateHelpers.js\";\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\n\nconst h = {\n    isNull: krakenNullHelpers.isNull,\n    null: krakenNullHelpers\n}\n\n\n\n/**\n * Returns records with content of tags\n *\n * record = {\n *    content: {\n *        before: xxx\n *        between: xxx\n *        after: xxx\n *     },\n *     tag: {\n *         name: xxx\n *         type: xxx\n *         value: xxx,\n *         children: []\n *     }\n * }\n */\n\nexport const krakenTagHelpers = {\n    get: getTag\n}\n\nfunction getTag(str){\n    /**\n     * Returns first top level tag\n     * @param {String} str\n     * @returns {Object}\n     * \n     * \n     */\n\n    str = prepareTemplate(str)\n\n    return getIterationTag(str) || getPlaceholderTag(str) || null\n    \n    \n}\n\n\nfunction getIterationTag(template){\n    /**\n     * Retrieve iteration tags ({{#xxx}} ... {/xxx}} ) from string\n     */\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{#')){ return null }\n    if(!template.includes('{{/')){ return null }\n\n    let result = {\n        \"content\": {\n            \"before\": \"\",\n            \"between\": \"\",\n            \"after\": \"\"\n        },\n        \"type\": null,\n        \"value\": null\n        \n    }\n\n    // Find first opening tag\n    let tagStartPositionStart = template.indexOf('{{#')\n    let tagStartPositionEnd = template.indexOf('}}', tagStartPositionStart)\n\n\n    // Iterate through opening and closing tags to find related closing tag\n\n    let lastPositionStart = tagStartPositionEnd\n    let nextOpeningPositionStart\n    let nextOpeningPositionEnd\n    let tagEndPositionStart\n    let tagEndPositionEnd\n    let openingTags = 1\n\n    while (openingTags > 0){\n\n        nextOpeningPositionStart = template.indexOf('{{#', lastPositionStart ) \n        nextOpeningPositionEnd = template.indexOf('}}', nextOpeningPositionStart ) \n        tagEndPositionStart = template.indexOf('{{/', lastPositionStart )\n        tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n        // Case: No closing tags\n        if(tagEndPositionStart == -1){\n           return null\n        } else\n\n        // Case: no more opening tags\n        if(nextOpeningPositionStart == -1){\n            openingTags = openingTags - 1\n            lastPositionStart = tagEndPositionEnd\n        } else\n\n        // Case: closing tag before next opening tag\n        if(tagEndPositionStart < nextOpeningPositionStart){\n            openingTags = openingTags - 1\n            lastPositionStart = tagEndPositionEnd\n        } else\n\n        // Case: opening tag before next closing tag\n        if(tagEndPositionStart > nextOpeningPositionStart){\n            openingTags = openingTags + 1\n            lastPositionStart = nextOpeningPositionEnd\n        }\n\n    }\n\n    // \n\n    // Find matching closing tag\n    //let tagEndPositionStart = template.indexOf('{{/', tagStartPositionEnd)\n    //let tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n    if(tagStartPositionStart == -1 || tagStartPositionEnd == -1 || tagEndPositionStart == -1 || tagEndPositionEnd == -1){ return null }\n\n    \n    result.value = template.slice(tagStartPositionStart + 3, tagStartPositionEnd)\n    result.content.before = template.slice(0, tagStartPositionStart)\n    result.content.after = template.slice(tagEndPositionEnd + 2)\n    result.content.between = template.slice(tagStartPositionEnd + 2, tagEndPositionStart -1)\n    result.type =  'iterator' \n\n    return result\n}\n\nfunction getPlaceholderTag(template){\n    /**\n     * Retrieves tags ({{ xxx }} ) from within string\n     * \n     */\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{')){ return null }\n    if(!template.includes('}}')){ return null }\n\n    let result = {\n        \"content\": {\n            \"before\": \"\",\n            \"between\": \"\",\n            \"after\": \"\"\n        },\n        \"type\": null,\n        \"value\": null\n\n    }\n\n\n    let tagPositionStart = template.lastIndexOf('{{')\n    let tagPositionEnd = template.indexOf('}}', tagPositionStart)\n\n    if(tagPositionStart == -1 || tagPositionEnd == -1 ){ return null }\n\n\n    result.content.before = template.slice(0, tagPositionStart)\n    result.content.after = template.slice(tagPositionEnd + 2)\n    result.content.between = null\n    result.value = template.slice(tagPositionStart + 2, tagPositionEnd)\n    result.type = 'value'\n    \n    return result\n\n\n}\n\n\n\nfunction prepareTemplate(template){\n\n\n    while(template.includes('{{ ')){\n        template = template.replaceAll('{{ ', '{{')\n    }\n    while(template.includes(' }}')){\n        template = template.replaceAll(' }}', '}}')\n    }\n    while(template.includes('{{# ')){\n        template = template.replaceAll('{{# ', '{{#')\n    }\n    while(template.includes('{{/ ')){\n        template = template.replaceAll('{{/ ', '{{/')\n    }\n\n\n    return template\n\n}","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenObjectHelpers} from \"./krakenObjectHelpers.js\";\n\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenStringOperationHelpers } from \"./krakenStringOperationHelpers.js\";\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    object: krakenObjectHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    stringOperation: krakenStringOperationHelpers\n}\n\n\nexport const krakenTemplateHelpers = {\n    get: renderTemplate,\n    replacePlaceholders: renderTemplate,\n    render: renderTemplate,\n};\n\n\nfunction renderTemplate(template, record){\n\n\n    template = prepareTemplate(template)\n\n    let renderedTemplate1 = _renderTemplate(template, record)\n\n    return renderedTemplate1\n}\n\n\n\nfunction _renderTemplate(template, record, depth = 0){\n\n    /**\n     * beforeContent: the content before the opening tag\n     * afterContent: the content after the closing tag\n     * templateContent: the content in between the tags\n     * valueContent: the content replacing the templateContent with actual values\n     */\n\n\n    \n    \n    let content = template\n\n    let values = record\n\n    // Handle iterations\n    let tag = getIterationTag(content)\n\n    while(h.isNotNull(tag)){\n\n        \n        let valueContent = ''\n\n        \n        //let values = h.dot.get(tag.propertyID, record)\n        //let propertyID = tag.contentTag.split('|')\n        //values = h.analysis.runOperations(record, tag.contentTag )\n\n        let propertyID = h.stringOperation.get(tag.contentTag )?.[0]?.propertyID || null\n        values = h.stringOperation.execute(record, tag.contentTag )\n        \n        // If record has many values, iterate through each ones\n        for(let value of h.toArray(values)){\n            let tempRecord = JSON.parse(JSON.stringify(record))\n\n            if(h.isNotNull(propertyID)){\n                 h.dot.set(tempRecord, propertyID, value)\n            } else {\n                tempRecord = value\n            }\n            //h.dot.set(tempRecord, propertyID, value)\n            valueContent += _renderTemplate(tag.contentWithin, tempRecord, depth += 1)\n        }\n        content = String(tag.contentBefore) + String(valueContent) + String(tag.contentAfter)\n\n        tag = getIterationTag(content)\n    }\n\n\n    // Handle placeholders \n    tag = getPlaceholderTag(content)\n\n\n    \n    while(h.isNotNull(tag)){\n\n     \n        let value = h.stringOperation.execute(record, tag.contentTag )\n        if(h.isNull(value)){ value = ''}\n\n        // Convert to json if array or object\n        if(h.isArray(value) || h.object.isValid(value)){\n            value = JSON.stringify(value)\n        }\n\n        \n        content = String(tag.contentBefore) + String(value) + String(tag.contentAfter)\n\n        tag = getPlaceholderTag(content)\n    }\n\n    return content\n\n}\n\n\n\n\nfunction prepareTemplate(template){\n\n\n    if(h.isNull(template)){\n        return ''\n    }\n    \n    while(template.includes('{{ ')){\n        template = template.replaceAll('{{ ', '{{')\n    }\n    while(template.includes(' }}')){\n        template = template.replaceAll(' }}', '}}')\n    }\n\n    return template\n\n}\n\n\nfunction getIterationTag(template){\n    /**\n     * Retrieve iteration tags ({{#xxx}} ... {/xxx}} ) from string\n     */\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{#')){ return null }\n    if(!template.includes('{{/')){ return null }\n\n    let result = {\n        \"type\": 'iteration',\n        'contentBefore': '',\n        'contentWithin': '',\n        'contentAfter': '',\n        'contentTag': ''\n    }\n\n    // Find first opening tag\n    let tagStartPositionStart = template.indexOf('{{#')\n    let tagStartPositionEnd = template.indexOf('}}', tagStartPositionStart)\n\n\n    // Iterate through opening and closing tags to find related closing tag\n\n    let lastPositionStart = tagStartPositionEnd\n    let nextOpeningPositionStart\n    let nextOpeningPositionEnd\n    let tagEndPositionStart\n    let tagEndPositionEnd\n    let openingTags = 1\n    \n    while (openingTags > 0){\n        \n        nextOpeningPositionStart = template.indexOf('{{#', lastPositionStart ) \n        nextOpeningPositionEnd = template.indexOf('}}', nextOpeningPositionStart ) \n        tagEndPositionStart = template.indexOf('{{/', lastPositionStart )\n        tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n        // Case: No closing tags\n        if(tagEndPositionStart == -1){\n           return null\n        } else\n        \n        // Case: no more opening tags\n        if(nextOpeningPositionStart == -1){\n            openingTags = openingTags - 1\n            lastPositionStart = tagEndPositionEnd\n        } else\n            \n        // Case: closing tag before next opening tag\n        if(tagEndPositionStart < nextOpeningPositionStart){\n            openingTags = openingTags - 1\n            lastPositionStart = tagEndPositionEnd\n        } else\n\n        // Case: opening tag before next closing tag\n        if(tagEndPositionStart > nextOpeningPositionStart){\n            openingTags = openingTags + 1\n            lastPositionStart = nextOpeningPositionEnd\n        }\n\n    }\n\n    // \n    \n    // Find matching closing tag\n    //let tagEndPositionStart = template.indexOf('{{/', tagStartPositionEnd)\n    //let tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n    if(tagStartPositionStart == -1 || tagStartPositionEnd == -1 || tagEndPositionStart == -1 || tagEndPositionEnd == -1){ return null }\n\n    result.contentTag = template.slice(tagStartPositionStart + 3, tagStartPositionEnd)\n    result.contentBefore = template.slice(0, tagStartPositionStart)\n    result.contentAfter = template.slice(tagEndPositionEnd + 2)\n    result.contentWithin = template.slice(tagStartPositionEnd + 2, tagEndPositionStart -1)\n\n    return result\n}\n\nfunction getPlaceholderTag(template){\n    /**\n     * Retrieves tags ({{ xxx }} ) from within string\n     * \n     */\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{')){ return null }\n    if(!template.includes('}}')){ return null }\n\n    let result = {\n        \"type\": 'placeholder',\n        'propertyID': null,\n        'contentBefore': '',\n        'contentTag': '',\n        'contentAfter': '',\n        'commandName': null,    \n        'commandPropertyID': null\n    }\n\n    let tagPositionStart = template.lastIndexOf('{{')\n    let tagPositionEnd = template.indexOf('}}', tagPositionStart)\n\n    if(tagPositionStart == -1 || tagPositionEnd == -1 ){ return null }\n\n    result.contentTag = template.slice(tagPositionStart + 2, tagPositionEnd)\n    \n    result.contentBefore = template.slice(0, tagPositionStart)\n    result.contentAfter = template.slice(tagPositionEnd + 2)\n\n    return result\n\n    \n}\n\n\n","export const krakenTestHelpers = {\n    getThing: getThing,\n    getListItem: getListItem,\n    getItemList: getItemList,\n    getList: getItemList,\n    getPerson: getPerson,\n    getOrganization: getOrganization,\n    getAction: getAction,\n    getSystemRecord: getSystemRecord,\n    getPropertyValue: getPropertyValue,\n\n    action: getAction,\n    article: getArticle,\n    creativeWork: creativeWork,\n    howTo: howTo,\n    itemList: getItemList,\n    list: getItemList,\n    listItem: getListItem,\n    offer: offer,\n    offerCatalog: offerCatalog,\n    organization: getOrganization,\n    person: getPerson,\n    potentialAction: potentialAction,\n    product: product,\n    propertyValue: getPropertyValue,\n    thing: getThing,\n};\n\nfunction creativeWork(n) {\n    return {\n        \"@type\": \"CreativeWork\",\n        \"@id\": \"CreativeWork_\" + String(n),\n        headline:\n            \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        image: {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"ImageObject\",\n            \"@id\": \"image1\",\n            name: \"image_1\",\n            contentUrl: \"https://placehold.co/600x400\",\n        },\n        potentialAction: [\n            {\n                \"@type\": \"action\",\n                \"@id\": \"action_1\",\n                name: \"action_1_name\",\n                url: \"#\",\n            },\n        ],\n    };\n}\n\nfunction offer(n=0) {\n    return {\n        \"@type\": \"Offer\",\n        \"@id\": \"Offer_\" + String(n),\n        additionalProperty:[\n            {\n                \"@type\":\"Propertyvalue\",\n                \"@id\":\"PropertyValue_1_\" + String(n),\n                \"propertyID\": \"PropertyValue_1\",\n                \"value\": \"Additional offer property 1_\" + String(n),\n            },\n            {\n                \"@type\":\"Propertyvalue\",\n                \"@id\":\"PropertyValue_2_\" + String(n),\n                \"propertyID\": \"PropertyValue_2\",\n                \"value\": \"Additional offer property 2_\" + String(n),\n            },\n            {\n                \"@type\":\"Propertyvalue\",\n                \"@id\":\"PropertyValue_3_\" + String(n),\n                \"propertyID\": \"PropertyValue_3\",\n                \"value\": \"Additional offer property 3_\" + String(n),\n            },\n            {\n                \"@type\":\"Propertyvalue\",\n                \"@id\":\"PropertyValue_4_\" + String(n),\n                \"propertyID\": \"PropertyValue_4\",\n                \"value\": \"Additional offer property 4_\" + String(n),\n            }\n            \n        ],\n        name: \"Offer_per_month_\" + String(n),\n        itemOffered: {\n            \"@type\": \"Service\",\n            \"@id\": \"Service_\" + String(n),\n            name: \"Service_\" + String(n),\n        },\n        offeredBy: {\n            \"@type\": \"Organization\",\n            \"@id\": \"organization_\" + String(n),\n            name:  \"organization_\" + String(n),\n        },\n        priceSpecification: {\n            \"@type\": \"UnitPriceSpecification\",\n            price: \"25\",\n            priceCurrency: \"USD\",\n            referenceQuantity: {\n                \"@type\": \"QuantitativeValue\",\n                value: \"1\",\n                unitCode: \"MON\",\n            },\n        },\n        potentialAction: [\n            {\n                \"@type\": \"Action\",\n                \"@id\": \"action_1_\" + String(n),\n                \"name\": \"Buy now\",\n                \"url\": \"https://www.test.com\",\n            }\n        ]\n    };\n}\n\nfunction offerCatalog(no=3, n=0){\n\n    let record = {\n        \"@type\": \"OfferCatalog\",\n        \"@id\": \"OfferCatalog_\" + String(n),\n        \"name\": \"OfferCatalog_\" + String(n),\n        \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        itemListElement: []\n    }\n\n    for(let i=0; i < no; i++){\n\n        let item = {\n            \"@type\": \"ListItem\",\n            \"@id\": \"ListItem_\" + String(n) + \"_\" + String(i),\n            item: offer(i)\n        }\n        record.itemListElement.push(item)\n    }\n\n    return record\n}\n\nfunction howTo(n) {\n    return {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"HowTo\",\n        name: \"HowTo name - Lorem ipsum dolor sit amet.\",\n        headline:\n            \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\",\n        estimatedCost: {\n            \"@type\": \"MonetaryAmount\",\n            currency: \"USD\",\n            value: \"20\",\n        },\n        totalTime: \"PT30M\",\n        tool: [\n            {\n                \"@type\": \"HowToTool\",\n                name: \"Tool 1\",\n            },\n            {\n                \"@type\": \"HowToTool\",\n                name: \"Tool 2\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n            },\n        ],\n        supply: {\n            \"@type\": \"HowToSupply\",\n            name: \"Supply1\",\n            image: {\n                \"@context\": \"https://schema.org/\",\n                \"@type\": \"ImageObject\",\n                \"@id\": \"image1\",\n                name: \"image_1\",\n                contentUrl: \"https://placehold.co/600x400\",\n            },\n        },\n        step: [\n            {\n                \"@type\": \"HowToStep\",\n                position: \"1\",\n                headline:\n                    \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n                itemListElement: [\n                    {\n                        \"@type\": \"HowToDirection\",\n                        position: \"1\",\n                        text: \"Position your wheel wedges in front of the front tires if a rear tire is flat, or behind the rear tires if a front tire is flat\",\n                    },\n                    {\n                        \"@type\": \"HowToTip\",\n                        position: \"2\",\n                        text: \"You don't want the car to move while you're working on it.\",\n                    },\n                ],\n            },\n            {\n                \"@type\": \"HowToStep\",\n                position: \"2\",\n                headline:\n                    \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n                itemListElement: [\n                    {\n                        \"@type\": \"HowToDirection\",\n                        position: \"1\",\n                        text: \"Position your wheel wedges in front of the front tires if a rear tire is flat, or behind the rear tires if a front tire is flat\",\n                    },\n                    {\n                        \"@type\": \"HowToTip\",\n                        position: \"2\",\n                        text: \"You don't want the car to move while you're working on it.\",\n                    },\n                ],\n            },\n            {\n                \"@type\": \"HowToStep\",\n                position: \"3\",\n                headline:\n                    \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n                itemListElement: [\n                    {\n                        \"@type\": \"HowToDirection\",\n                        position: \"1\",\n                        text: \"Position your wheel wedges in front of the front tires if a rear tire is flat, or behind the rear tires if a front tire is flat\",\n                    },\n                    {\n                        \"@type\": \"HowToTip\",\n                        position: \"2\",\n                        text: \"You don't want the car to move while you're working on it.\",\n                    },\n                ],\n            },\n            {\n                \"@type\": \"HowToStep\",\n                position: \"4\",\n                headline:\n                    \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n                itemListElement: [\n                    {\n                        \"@type\": \"HowToDirection\",\n                        position: \"1\",\n                        text: \"Position your wheel wedges in front of the front tires if a rear tire is flat, or behind the rear tires if a front tire is flat\",\n                    },\n                    {\n                        \"@type\": \"HowToTip\",\n                        position: \"2\",\n                        text: \"You don't want the car to move while you're working on it.\",\n                    },\n                ],\n            },\n            {\n                \"@type\": \"HowToStep\",\n                position: \"5\",\n                headline:\n                    \"Headline - Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                text: \"Text - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\",\n                image: {\n                    \"@context\": \"https://schema.org/\",\n                    \"@type\": \"ImageObject\",\n                    \"@id\": \"image1\",\n                    name: \"image_1\",\n                    contentUrl: \"https://placehold.co/600x400\",\n                },\n                itemListElement: [\n                    {\n                        \"@type\": \"HowToDirection\",\n                        position: \"1\",\n                        text: \"Position your wheel wedges in front of the front tires if a rear tire is flat, or behind the rear tires if a front tire is flat\",\n                    },\n                    {\n                        \"@type\": \"HowToTip\",\n                        position: \"2\",\n                        text: \"You don't want the car to move while you're working on it.\",\n                    },\n                ],\n            },\n        ],\n    };\n}\n\nfunction getThing(n) {\n    let n0 = String(n);\n    let record = {\n        \"@type\": \"Thing\",\n        \"@id\": `thing${n0}`,\n        name: `thing${n0}`,\n        other1: {\n            \"@type\": \"Thing\",\n            \"@id\": `thing${n0}-0`,\n            name: `thing${n0}-0`,\n        },\n        other2: [\n            {\n                \"@type\": \"Thing\",\n                \"@id\": `thing${n0}-1`,\n                name: `thing${n0}-1`,\n            },\n            {\n                \"@type\": \"Thing\",\n                \"@id\": `thing${n0}-2`,\n                name: `thing${n0}-2`,\n            },\n        ],\n    };\n    return record;\n}\n\nfunction getItemList(noItems, n = 0) {\n    /**\n     * Returns a list of n items\n     * @param {Number} n\n     * @returns {Array} The list\n     *\n     */\n\n    let n0 = String(n);\n    let record = {\n        \"@type\": \"ItemList\",\n        \"@id\": `ItemList${n}`,\n        name: `ItemList${n}`,\n        itemListElement: [],\n    };\n\n    for (let i = 0; i < noItems; i++) {\n        let listItem = getListItem(i);\n\n        if (n > 0) {\n            listItem.previousItem = {\n                \"@type\": \"ListItem\",\n                \"@id\": `ListItem${String(n - 1)}`,\n            };\n        }\n\n        if (i < noItems - 1) {\n            listItem.nextItem = {\n                \"@type\": \"ListItem\",\n                \"@id\": `ListItem${String(n + 1)}`,\n            };\n        }\n        record.itemListElement.push(listItem);\n    }\n\n    return record;\n}\n\nfunction getListItem(n = 0) {\n    /**\n     * Returns an item\n     * @param {Number} n\n     * @returns {Array} The list\n     *\n     */\n\n    let n0 = String(n);\n\n    let record = {\n        \"@type\": \"ListItem\",\n        \"@id\": `ListItem${n0}`,\n        name: `ListItem${n0}`,\n        position: n,\n        item: getThing(n),\n    };\n\n    return record;\n}\n\nfunction getPerson(n = 0) {\n    let n0 = String(n);\n\n    let record = {\n        \"@type\": \"Person\",\n        \"@id\": `person${n0}`,\n        givenName: `givenName${n0}`,\n        familyName: `familyName${n0}`,\n        email: `givenName${n0}_familyName${n0}@organization${n0}.com`,\n        telephone: `1-514-111-222${n0}`,\n        hasOccupation: {\n            \"@type\": \"Occupation\",\n            \"@id\": `occupation${n0}`,\n            name: `occupation${n0}`,\n        },\n        worksfor: getOrganization(n),\n    };\n\n    return record;\n}\n\nfunction getOrganization(n) {\n    let n0 = String(n);\n    let record = {\n        \"@type\": \"Organization\",\n        \"@id\": `testOrganization${n0}`,\n        name: `testOrganization${n0}`,\n        url: `https:\\/\\/www.testOrganization${n0}.com`,\n    };\n\n    return record;\n}\n\nfunction getAction(n) {\n    let n0 = String(n);\n\n    let record = {\n        \"@type\": \"action\",\n        \"@id\": `action${n0}`,\n        name: `action${n0}`,\n        actionStatus: \"ActiveActionStatus\",\n        startTime: \"\",\n        endTime: \"\",\n        object: \"\",\n        result: \"\",\n        instrument: \"\",\n    };\n\n    return record;\n}\n\nfunction getSystemRecord() {\n    let record = {\n        \"@type\": \"Thing\",\n        \"@id\": \"thing1\",\n        _id: \"567e0725-a4b7-4a15-a5e5-39a2751bc09f\",\n        _version: \"2.0\",\n        _dbCollection: null,\n        _dbId: null,\n        _record_type: \"Thing\",\n        _record_id: \"thing1\",\n        _headings: [],\n        _refs: [],\n        _propertyValues: [\n            {\n                \"@type\": \"ReplaceAction\",\n                \"@id\": \"67120ec1-89ce-4644-ba45-e5f534cf2570\",\n                actionStatus: \"CompletedActionStatus\",\n                valid: true,\n                object: {\n                    \"@type\": \"PropertyValue\",\n                    propertyID: \"@type\",\n                    value: \"Thing\",\n                },\n                metadata: {\n                    createdDate: new Date(),\n                    position: 5,\n                },\n            },\n            {\n                \"@type\": \"ReplaceAction\",\n                \"@id\": \"8a363b93-46ac-4fe1-a4ed-c74b9fa890cc\",\n                actionStatus: \"CompletedActionStatus\",\n                valid: true,\n                object: {\n                    \"@type\": \"PropertyValue\",\n                    propertyID: \"@id\",\n                    value: \"thing1\",\n                },\n                metadata: {\n                    createdDate: new Date(),\n                    position: 7,\n                },\n            },\n            {\n                \"@type\": \"ReplaceAction\",\n                \"@id\": \"71c07e54-506d-49d2-a273-6d6a9e8ed1bd\",\n                actionStatus: \"CompletedActionStatus\",\n                valid: true,\n                object: {\n                    \"@type\": \"PropertyValue\",\n                    propertyID: \"name\",\n                    value: \"thing1\",\n                },\n                metadata: {\n                    createdDate: new Date(),\n                    position: 9,\n                },\n            },\n        ],\n        _createdDate: new Date(),\n        name: \"thing1\",\n    };\n\n    return record;\n}\n\nfunction getPropertyValue(propertyID, value) {\n    /**\n     * Returns a property value\n     */\n\n    let record = {\n        \"@type\": \"ReplaceAction\",\n        \"@id\": `propertyValue${propertyID}`,\n        actionStatus: \"CompletedActionStatus\",\n        valid: true,\n        object: {\n            \"@type\": \"PropertyValue\",\n            \"@id\": `pv_${propertyID}_1`,\n            propertyID: propertyID,\n            value: `${value}`,\n        },\n        metadata: {\n            createdDate: new Date(),\n            position: 9,\n        },\n    };\n\n    return record;\n}\n\nfunction getArticle(n) {\n    return {\n        \"@type\": \"CreativeWork\",\n        \"@id\": \"Article1\",\n        headline: \"Headline 1\",\n        author: {\n            \"@type\": \"Person\",\n            \"@id\": \"person_1\",\n            givenName: \"givenName_1\",\n            familyName: \"familyName_1\",\n            email: \"test@test.com\",\n            telephone: \"1-514-111-2222\",\n            jobTitle: \"Job_title_1\",\n            hasOccupation: {\n                \"@type\": \"Occupation\",\n                \"@id\": \"occupation_1\",\n                name: \"occupation_1\",\n            },\n            worksfor: {\n                \"@type\": \"Organization\",\n                \"@id\": \"organization_1\",\n                name: \"test_org_1\",\n                url: \"https://www.test.com\",\n            },\n        },\n        image: {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"ImageObject\",\n            \"@id\": \"image1\",\n            name: \"image_1\",\n            contentUrl: \"https://placehold.co/600x400\",\n        },\n        text: \"Text 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        hasPart: [\n            {\n                \"@type\": \"CreativeWork\",\n                \"@id\": \"SubArticle1\",\n                headline: \"Sub headline 1\",\n                text: \"text 1-1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            },\n            {\n                \"@type\": \"CreativeWork\",\n                \"@id\": \"SubArticle2\",\n                headline: \"Sub headline 2\",\n                text: \"text 1-2 - Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            },\n        ],\n    };\n}\n\nfunction product(n) {\n    return {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Product\",\n        aggregateRating: {\n            \"@type\": \"AggregateRating\",\n            ratingValue: \"3.5\",\n            reviewCount: \"11\",\n        },\n        description:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        name: \"Product name 1\",\n        image: {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"ImageObject\",\n            \"@id\": \"image1\",\n            name: \"image_1\",\n            contentUrl: \"https://placehold.co/600x400\",\n        },\n        offers: {\n            \"@type\": \"Offer\",\n            availability: \"https://schema.org/InStock\",\n            price: \"55.00\",\n            priceCurrency: \"USD\",\n        },\n        positiveNotes: [\n            {\n                \"@type\": \"ListItem\",\n                \"@id\": \"positiveNote0\",\n                position: 0,\n                item: {\n                    \"@type\": \"CreativeWork\",\n                    \"@id\": \"positiveNote0Item\",\n                    headline: \"Positive note 1\",\n                    text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    image: {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"ImageObject\",\n                        \"@id\": \"image0\",\n                        name: \"image_0\",\n                        contentUrl: \"https://placehold.co/600x400\",\n                    },\n                },\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"@id\": \"positiveNote1\",\n                position: 1,\n                item: {\n                    \"@type\": \"CreativeWork\",\n                    \"@id\": \"positiveNote1Item\",\n                    headline: \"Positive note 1\",\n                    text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    image: {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"ImageObject\",\n                        \"@id\": \"image1\",\n                        name: \"image_1\",\n                        contentUrl: \"https://placehold.co/600x400\",\n                    },\n                },\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"@id\": \"positiveNote2\",\n                position: 2,\n                item: {\n                    \"@type\": \"CreativeWork\",\n                    \"@id\": \"positiveNote2Item\",\n                    headline: \"Positive note 3\",\n                    text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    image: {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"ImageObject\",\n                        \"@id\": \"image2\",\n                        name: \"image_2\",\n                        contentUrl: \"https://placehold.co/600x400\",\n                    },\n                },\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"@id\": \"positiveNote3\",\n                position: 3,\n                item: {\n                    \"@type\": \"CreativeWork\",\n                    \"@id\": \"positiveNote3Item\",\n                    headline: \"Positive note 3\",\n                    text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n                    image: {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"ImageObject\",\n                        \"@id\": \"image3\",\n                        name: \"image_3\",\n                        contentUrl: \"https://placehold.co/600x400\",\n                    },\n                },\n            },\n        ],\n    };\n}\n\n\n\nfunction potentialAction(n=0){\n\n\n    return {\n        \"@type\": \"Action\",\n        \"@id\": \"action_\" + String(n),\n        \"name\": \"action_\" + String(n),\n        \"description\": \"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n        \"actionStatus\": \"PotentialActionStatus\",\n        \"name_input\": {\n            \"@type\": \"PropertyValueSpecification\",\n            \"valueName\": \"name\"\n        },\n        \"email_input\": {\n            \"@type\": \"PropertyValueSpecification\",\n            \"valueName\": \"email\"\n        },\n        \"approval_input\": {\n            \"@type\": \"PropertyValueSpecification\",\n            \"valueName\": \"approval\",\n            \"description\": \"By clicking on this, you agree to give your first born child.\",\n            \"minValue\": 0,\n            \"maxValue\": 1,\n            \"required\":\"true\"\n        }\n    }\n\n    \n}","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\nimport { krakenNumberHelpers } from \"./krakenNumberHelpers.js\";\nimport { krakenJsonHelpers } from \"./krakenJsonHelpers.js\";\nimport { krakenObjectHelpers } from \"./krakenObjectHelpers.js\";\n\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray,\n    isArray: krakenArrayHelpers.isArray,\n    dot: krakenDotNotationHelpers,\n    number: krakenNumberHelpers,\n    json: krakenJsonHelpers,\n    object: krakenObjectHelpers,\n}\n\n\n\n//import { krakenValueHelpers as v} from '../localization/krakenValueHelpers.js'\nlet MAX_WIDTH = 30\n\nexport function krakenTextTable(records, keys, headers){\n\n\n    let content = ''\n    \n    // Duplicate records\n    records = JSON.parse(JSON.stringify(records))\n\n\n    // Build keys from records keys if missing\n    if(h.isNull(keys)){\n        keys = h.array.getKeys(records)\n    }\n\n    \n    // If record, convert properties to array\n    if(h.array.isArray(records) == false){\n        if(h.object.isObject(records) == true){\n\n            let values = []\n            let keys = Object.keys(records)\n            for(let k of keys){\n                let v = records[k]\n                v.propertyID = k\n                values.push(v)\n            }\n            records = values\n        } \n    }\n    \n\n    \n    \n   \n    // Build headers from keys if missing\n    if(h.isNull(headers)){\n        headers = keys\n    }\n\n\n    // Build new record with only selected keys and values\n    let newRecords = []\n    for(let r of records){\n        let newRecord = {}\n        keys.map(k => newRecord[k] = h.dot.get(k, r))\n        newRecords.push(newRecord)\n    }\n    records = newRecords\n\n    \n    // Convert values\n    //records = v.innerValuesToText(records)\n    \n\n    // Get max length for each keys\n    let keysLength = {}\n    let totalLength = 0\n\n    \n    \n    for(let i=0; i < keys.length; i++){\n\n        let key = keys[i]\n        let header = headers[i]\n    \n        //let values = h.array.getValuesForKey(records, key)\n        let values = records.map(x => x?.[key] || '')\n\n        keysLength[key] = header.length\n\n        for(let v of values){\n            let l = v.length\n            \n            if ( l > keysLength[key] ){\n                keysLength[key] = l\n            }\n        }\n        totalLength += keysLength[key] + 2\n        \n    }\n\n    \n\n    // Build table header\n\n    // Top bar line\n    content += `${''.padEnd(totalLength, '-')}`\n    content +='\\n'\n\n    // Headings\n    for(let i=0; i < keys.length; i++){\n        let key = keys[i]\n        let header = headers[i]\n        content += `${header.padEnd(keysLength[key] + 2, ' ')}`\n    }\n    content +='\\n'\n    \n    for(let key of keys){\n        content += `${''.padEnd(keysLength[key] + 2, '-')}`\n    }\n    content += '\\n'\n\n    \n    // Build table rows\n    for(let record of records){\n       \n        for(let key of keys){\n            \n            let c = String(record?.[key] || '' )\n            if(c.length > MAX_WIDTH){ c = c.slice(0, MAX_WIDTH -3) + '... '}\n            c = c.padEnd(keysLength[key] + 2, ' ')\n            content += `${c}`\n\n            \n        }\n        \n        content += '\\n'\n    }\n    \n\n    \n    \n    content += `${''.padEnd(totalLength, '-')}`\n    content += '\\n'\n\n    return content\n    \n}","\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\n\n\nconst h = {\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    null: krakenNullHelpers\n}\n\n\nexport const krakenUriTemplateHelpers = {\n    /**\n     * uri template helpers\n     * Convert to from uri template\n     *\n     * \n     */\n\n\n    uriToPvs: convertUriTemplateToSchema,\n    pvsToUri: convertSchemaToUriTemplate\n    \n}\n\n\n\n\n\nfunction convertSchemaToUriTemplate(record){\n    /**\n     * Convert a schema to a uri template\n     * \n     */\n\n\n    let items = []\n\n\n    let keys = Object.keys(record)\n\n\n\n    for(let key of keys){\n\n        let value = record[key]\n\n        let item \n\n\n        switch (key){\n\n            case \"valueRequired\":\n                if(value == true){\n                    item = `required`\n                }\n                break;\n\n            case \"defaultValue\":\n                item = `default=${value}`\n\n                break;\n\n            case \"valueName\":\n\n                item = `name=${value}`\n                break;\n\n            case \"readonlyValue\":\n\n                item = `readonly=${value}`\n                break;\n\n            case \"multipleValues\":\n\n                item = `multiple=${value}`\n                break;\n\n            case \"valueMinLength\":\n\n                item = `minlength=${value}`\n                break;\n\n            case \"valueMaxLength\":\n\n                item = `maxlength=${value}`\n                break;\n\n            case \"valuePattern\":\n\n                item = `pattern=${value}`\n                break;\n\n            case \"minValue\":\n                item = `min=${value}`\n                break;\n\n            case \"maxValue\":\n                item = `max=${value}`\n                break;\n\n            case \"stepValue\":\n                item = `step=${value}`\n                break;\n\n            default: \n                break;      \n\n        }\n\n        if(item){\n            items.push(item)\n        }\n    }\n\n\n    // Filter empty items\n    items = items.filter(x => x && x != null)\n\n    // Combine items\n    let uriTemplate = items.join(' ')\n    \n\n    return uriTemplate\n\n\n\n}\n\n\n\nfunction convertUriTemplateToSchema(uriTemplate) {\n    /**\n     * Converts a uri template to a schema property value specific ation\n     * {\n            \"@type\": \"PropertyValueSpecification\",\n            \"@id\": \"86719a5e-c87d-4d69-8920-47e7f59c3ea8\",\n            \"defaultValue\": null,\n            \"readonlyValue\": null,\n            \"valueRequired\": true,\n            \"multipleValues\": false,\n            \"minValue\": null,\n            \"maxValue\": null,\n            \"valueMinLength\": null,\n            \"valueMaxLength\": null,\n            \"valuePattern\": null,\n            \"stepValue\": null,\n            \"valueName\": null,\n        }\n        \n\n     */\n    if (typeof uriTemplate !== 'string') {\n        throw new TypeError('uriTemplate must be a string');\n    }\n\n    // Extract placeholders from the URI template\n\n    let items = uriTemplate.split(' ')\n\n\n    let pvs = {\n        \"@type\": \"PropertyValueSpecification\",\n\n    }\n\n    for(let item of items){\n\n        let key = item.split('=')?.[0] || null\n        key=key.trim()\n        key = key.toLowerCase()\n\n        let value = item.split('=')?.[1] || null\n        value = value || ''\n        value=value.trim()\n\n\n        switch (key){\n\n            case \"required\":\n                value = Boolean(value || true)\n                pvs.valueRequired = value\n                break;\n\n            case \"default\":\n                value = Boolean(value)\n                pvs.defaultValue = value\n                break;\n\n            case \"name\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                if(h.isNotNull(value)){\n                    pvs.valueName = value\n                }\n                break;\n\n            case \"readonly\":\n                value = Boolean(value)\n                pvs.readonlyValue = value \n                break;\n\n            case \"multiple\":\n                value = Boolean(value)\n                pvs.multipleValues = value \n                break;\n\n            case \"minlength\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                value = Number(value)\n                pvs.valueMinLength = value\n                break;\n\n            case \"maxlength\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                value = Number(value)\n                pvs.valueMaxLength = value\n                break;\n\n            case \"valuePattern\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                pvs.valuePattern = value\n                break;\n\n            case \"min\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                value = Number(value)\n                pvs.minValue = value\n                break;\n\n            case \"max\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                value = Number(value)\n                pvs.maxValue = value\n                break;\n            case \"step\":\n                value=value.replaceAll('\"', '')\n                value=value.replaceAll(\"'\", \"\")\n                value = Number(value)\n                pvs.stepValue = value\n                break;\n\n            default: \n                break;\n        }\n\n    }\n\n    // Assign entire content as default value if no value is set\n    if(Object.keys(pvs).length <= 1){\n        pvs.defaultValue = uriTemplate\n    } \n\n    // Return the PVS\n    return pvs\n\n\n}\n\n\n","\nimport { krakenNullHelpers} from './krakenNullHelpers.js'\n\nexport const krakenUrlHelpers = {\n\n    isValid: isValid,\n    toString: toString,\n    getDomain: getDomain,\n    domain: getDomain,\n    getUrl: getUrl,\n    toUrl: getUrl,\n    \n    \n}\n\nfunction isValid(value){\n    /**\n     * Checks if a value is a valid url\n     * @param {String} value\n     * @returns {Boolean}\n     */\n\n    if(!value || value == null){ return false }\n\n    if(value instanceof URL) { return true }\n\n    \n    return krakenNullHelpers.isNotNull(getUrl(value))\n    \n}\n\nfunction toString(url){\n    /**\n     * Returns the url as a string\n     * @param {String} url\n     * @returns {String}\n     */\n\n    if(isValid(url)){\n        return String(url)\n    } \n    return null\n    \n}\n\n\n\nfunction getUrl(baseUrl, path, params) {\n    /**\n     * Returns a url\n     * @param {String} baseUrl\n     * @param {String} path\n     * @param {Object} params\n     */\n    \n    // Returns url string\n    try {\n        if (!baseUrl || typeof baseUrl !== 'string') {\n            throw new Error('Invalid base URL');\n        }\n        \n        if (!path ) {\n            path = '';\n        }\n        if (typeof path !== 'string') {\n            throw new Error('Invalid path');\n        }\n        if (params && typeof params !== 'object') {\n            throw new Error('Invalid params');\n        }\n\n        let url = new URL(path, baseUrl);\n\n        if (params) {\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null) {\n                    url.searchParams.append(key, params[key]);\n                }\n            });\n        }\n\n        return url.toString();\n        \n    } catch (error) {\n        //console.error('Error building URL:', error.message);\n        return undefined;\n    }\n}\n\n\n\n\n\n\nfunction getDomain(value){\n    /**\n     * Returns the domain of a url\n     * @param {String} value\n     * @returns {String}\n     * \n     */\n\n    try {\n\n        if(!value || value == null){ return undefined }\n\n        if(!(value instanceof URL)) { \n\n            if(typeof value != 'string'){\n                return undefined\n            }\n\n            value = new URL(value);\n        }\n\n\n        let domain = value.hostname\n\n        domain = domain.replace('www.', '')\n\n        if (domain == 'wrong.protocol'){ return undefined }\n        \n        // Use URL constructor to parse the URL\n        return domain;\n\n        \n    } catch (error) {\n        // If an error occurs, return an appropriate error message\n        return undefined;\n    }\n   \n    \n    \n}","\n\n\n\nexport const krakenElementStyleHelpers = {\n\n    add: addStyle\n\n    \n}\n\n\n\nfunction addStyle(content){\n    /**\n     * Add style to document\n     * @param {string} content\n     * @returns {void}\n     */\n\n    \n    var styleSheet = document.createElement(\"style\")\n    styleSheet.textContent = content\n    document.head.appendChild(styleSheet)\n\n    \n}","import { krakenElementHelpers } from './krakenElementHelpers.js'\nimport { krakenElementEventHelpers } from './krakenElementEventHelpers.js'\nimport { krakenElementThingHelpers } from './krakenElementThingHelpers.js'\nimport { krakenElementThingObserverHelpers } from './krakenElementThingObserverHelpers.js'\nimport { krakenElementTemplateHelpers } from './krakenElementTemplateHelpers.js'\nimport { krakenElementOrchestratorHelpers} from './krakenElementOrchestratorHelpers.js'\n\n\n\n\nimport { krakenElementCursorHelpers } from './krakenElementCursorHelpers.js'\nexport const krakenDomHelpers = {\n    cursor: krakenElementCursorHelpers,\n    element: krakenElementHelpers,\n    event: krakenElementEventHelpers,\n    thing: krakenElementThingHelpers,\n    thingObserver: krakenElementThingObserverHelpers,\n    template: krakenElementTemplateHelpers,\n    orchestrator: krakenElementOrchestratorHelpers\n}","\n\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\n\n\n/**\n *\n * classes:\n *     - krThing: thing\n *     - krProperty: property\n *     - krValue: value\n *     - \n */\n\n// Classes constants\nlet thingClass = 'krThing'\nlet propertyClass = 'krProperty'\nlet valueClass = 'krValue'\n\n\nexport const krakenElementHelpers = {\n    /**\n     * current: returns the element that composes the current record\n     * parent: returns element parent of \n     */\n\n    isValid: isValid,\n    toString: toString,\n    \n    record_type: getRecordType,\n    record_id: getRecordId,\n    ref: getRef,\n    recordType: getRecordType,\n    recordId: getRecordId,\n    type: getRecordType,\n    id: getRecordId,\n    getId: getIdOfElement,\n    setId: setIdToElement,\n    meetsConditions: meetsConditions,\n    insert: {\n        above: insertElementAbove,\n        below: insertElementBelow\n    },\n    remove: removeElement,\n    content: {\n        get: getContentOfElement,\n        set: setContentOfElement\n    },\n    active:{\n        set: setActive,\n        unset: unsetActive,\n        toggle: toggleActive\n    },\n    selected: {\n        get: getSelectedElement,\n        set: setSelectedElement,\n        unset: unsetSelectedElement,\n        toggle: toggleSelectedElement\n    },\n    dragging: {\n        get: getDraggingElement,\n        set: setDraggingElement,\n        unset: unsetDraggingElement,\n        toggle: toggleDraggingElement\n    },\n    class: {\n        get: getClassElement,\n        set: setClassElement,\n        unset: unsetClassElement,\n        toggle: toggleClassElement\n    },\n    traversal: {\n        commonParent: findCommonParentOfElements\n    },\n\n    // Array\n    filter: filter,\n    \n    \n}\n\n\n// -----------------------------------------------------\n//  Generic \n// -----------------------------------------------------\n\nfunction isValid(element){\n    /**\n     * Returns true if element is valid\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    if(element && element.nodeType){\n        return true\n    }\n    return false\n}\n\nfunction toString(element){\n\n    return `${getI(element)} ${getRcordId(element)}`\n    \n}\n\nfunction getIdOfElement(element){\n    /**\n     * Returns the id of the element\n     * @param {Object} element\n     * @returns {String}\n     */\n\n    return element?.id || null\n    \n}\n\nfunction setIdToElement(element, id){\n    /**\n     * Sets the id of the element\n     * @param {Object} element\n     * @param {String} id Uses uuid if null\n     */\n\n\n    if(h.isNull(element)){ return null }\n    \n    if(h.isNotNull(element.getAttribute('id'))){\n        return \n    }\n\n    let newID = 'element_' + h.uuid.new()\n    \n    element.setAttribute('id', newID)\n    \n}\n\n\nfunction getRecordType(element){\n    /**\n     * Returns the record type of the element\n     * @param {Object} element\n     * @returns {String} The record type\n     */\n\n    let record_type = element.getAttribute('data-record-type')\n    return record_type\n  \n}function getRecordId(element){\n\n    let record_id = element.getAttribute('data-record-id')\n    return record_id\n\n}\n\n\nfunction getRef(element){\n    /**\n     * Returns the ref of the element\n     * @param {Object} element\n     * @returns {String} The ref\n     * \n     */\n\n\n    let ref = {\n        \"@type\": getRecordType(element),\n        \"@id\": getRecordId(element)\n    }\n\n    if(h.isNotNull(ref?.['@type']) || h.isNotNull(ref?.['@id'])){\n        return ref\n    }\n    return null\n    \n}\n\n\n// -----------------------------------------------------\n//  Operations (insert, delete) \n// -----------------------------------------------------\n\nfunction insertElementBelow(newElement, parent){\n    /**\n     * Inserts a new element between a parent and its chldren\n     * @param {Object} newElement to insert\n     * @param {Object} parent\n     * @returns {Object} The new element\n     */\n\n    while(parent.firstElementChild){\n        newElement.appendChild(parent.firstElementChild)\n    }\n    parent.appendChild(newElement)\n    return newElement\n}\n\nfunction insertElementAbove(newElement, children){\n    /**\n     * Inserts a new element between an element and its parent\n     * @param {Object} newElement to insert\n     * @param {Object} children\n     * @returns {Object} The new element\n     */\n\n    \n    children.after(newElement)\n    newElement.appendChild(children)\n    //parent.appendChild(newElement)\n    return newElement\n}\n\nfunction removeElement(element){\n    /**\n     * Removes an element\n     * @param {Object} element\n     * @returns {Object} The new element\n     * \n     */\n\n    if(!isValid(element)){ return false}\n\n    element.remove()\n\n    return\n\n    \n}\n\n// -----------------------------------------------------\n//  Element content \n// -----------------------------------------------------\n\n\nfunction getContentOfElement(element){\n    /**\n     * Returns the content of the element\n     * @param {Object} element\n     * @returns {String} The content\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    // Get content\n    let content = element.innerHTML\n\n    return content\n    \n}\n\nfunction setContentOfElement(element, content){\n    /**\n     * Sets the content of an element\n     * @param {Object} element\n     * @param {Element|String} content to set (element or string))\n     * @returns {Object} The element\n     */\n\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    // \n    if(typeof content == 'string'){\n        element.innerHTML = content\n    }\n    \n    if(Array.isArray(content)){\n        for(let c of content){\n            setContentOfElement(element, c)\n        }\n        return\n    }\n    \n    if(content instanceof HTMLElement){\n        element.appendChild(content)\n    }\n\n    return element\n}\n\n\n// -----------------------------------------------------\n//  Comparisons \n// -----------------------------------------------------\n\nfunction meetsConditions(element, conditions){\n    /**\n     * Returns true if an element attributes meets conditions.\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Boolean}\n     */\n    \n    if(h.isNull(conditions)){ return true }\n\n    for(let key of Object.keys(conditions)){\n\n        // If key is class\n        if(key.startsWith('.')){\n            if(!element.classList.contains(conditions[key])){\n                return false\n            }\n        } else {\n            // If key is attribute\n            if(element.getAttribute(key) != conditions[key]){\n                return false\n            }\n        }\n    }\n    return true\n}\n\n\n// -----------------------------------------------------\n//  DOM Traversal \n// -----------------------------------------------------\n\nfunction findCommonParentOfElements(elements, conditions) {\n    /**\n     * Returns the common parent of different elements\n     * @param {Array} elements\n     * @returns {Object} The common parent\n     */\n    \n    if (!elements || elements.length === 0) return null;\n\n    // Helper function to get all parents of an element\n    function getParents(element) {\n        let parents = [];\n        while (element) {\n            parents.push(element);\n            element = element.parentElement;\n        }\n        return parents;\n    }\n\n    // Get the list of parents for the first element\n    let commonParents = getParents(elements[0]);\n\n    // Traverse the list of elements and keep finding common parents\n    for (let i = 1; i < elements.length; i++) {\n        const elementParents = getParents(elements[i]);\n        // Update commonParents to be only those in both lists\n        commonParents = commonParents.filter(parent => elementParents.includes(parent));\n\n        // If no common parent is found, return null\n        if (commonParents.length === 0) return null;\n    }\n\n    // Return the first common parent, which is the closest common ancestor\n    return commonParents[0];\n}\n\n\n\n\n// -----------------------------------------------------\n//  Active \n// -----------------------------------------------------\n\nfunction getActive(element, conditions){\n    /**\n     * Returns elements with 'krActive' class under element.\n     * Uses document if element is missing\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Array} The active elements\n     */\n    \n    element = element || document\n\n    let activeElements = element.querySelectorAll('.krActive')\n    activeElements = activeElements.filter(x => meetsConditions(x, conditions))\n\n    return activeElements\n}\n\nfunction setActive(element, conditions){\n    /**\n     * Sets 'krActive' class to elements with 'krActive' class under element.\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.add('krActive'))\n    return element\n    \n}\nfunction unsetActive(element, conditions){\n    /**\n     * Unset the 'krActive' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.remove('krActive'))\n    return element\n}\n\nfunction toggleActive(element, conditions){\n    /**\n     * Toggles the 'krActive' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.toggle('krActive'))\n    return element\n}\n\n// -----------------------------------------------------\n//  Selected \n// -----------------------------------------------------\n\nfunction getSelectedElement(element, conditions){\n    /**\n     * Returns elements with 'krSelected' class under element.\n     * Uses document if element is missing\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Array} The selected elements\n     */\n    element = element || document\n\n    let selectedElements = element.querySelectorAll('.krSelected')\n    selectedElements = selectedElements.filter(x => meetsConditions(x, conditions))\n\n    return selectedElements\n}\n\nfunction setSelectedElement(element, conditions){\n    /**\n     * Sets the 'krSelected' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The selected elements\n     */\n    \n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.add('krSelected'))\n    return element\n}\nfunction unsetSelectedElement(element, conditions){\n    /**\n     * Unset the 'krSelected' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The selected elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.remove('krSelected'))\n    return element\n}\n\nfunction toggleSelectedElement(element, conditions){\n    /**\n     * Toggles the 'krSelected' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The selected elements\n     */\n    \n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.toggle('krSelected'))\n    return element\n}\n\n\n// -----------------------------------------------------\n//  Dragging \n// -----------------------------------------------------\n\nfunction getDraggingElement(element, conditions){\n    /**\n     * Returns elements with 'krDragging' class under element.\n     * Uses document if element is missing\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Array} The active elements\n     */\n\n    element = element || document\n\n    let activeElements = element.querySelectorAll('.krDragging')\n    activeElements = activeElements.filter(x => meetsConditions(x, conditions))\n\n    return activeElements\n}\n\nfunction setDraggingElement(element, conditions){\n    /**\n     * Sets 'krDragging' class to elements with 'krDragging' class under element.\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.add('krDragging'))\n    return element\n\n}\nfunction unsetDraggingElement(element, conditions){\n    /**\n     * Unset the 'krDragging' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.remove('krDragging'))\n    return element\n}\n\nfunction toggleDraggingElement(element, conditions){\n    /**\n     * Toggles the 'krDragging' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.toggle('krDragging'))\n    return element\n}\n\n\n\n\n// -----------------------------------------------------\n//  Class \n// -----------------------------------------------------\n\nfunction getClassElement(element, className, conditions){\n    /**\n     * Returns elements with 'krDragging' class under element.\n     * Uses document if element is missing\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Array} The active elements\n     */\n\n    element = element || document\n\n    let activeElements = element.querySelectorAll('.' + className)\n    activeElements = activeElements.filter(x => meetsConditions(x, conditions))\n\n    return activeElements\n}\n\nfunction setClassElement(element, className, conditions){\n    /**\n     * Sets 'className' class to elements with 'className' class under element.\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.add(className))\n    return element\n\n}\nfunction unsetClassElement(element, className, conditions){\n    /**\n     * Unset the 'krDragging' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.remove(className))\n    return element\n}\n\nfunction toggleClassElement(element, className, conditions){\n    /**\n     * Toggles the 'krDragging' class on element\n     * @param {Object} element\n     * @param {Object} conditions needing to be met (optional))\n     * @returns {Object|Array} The elements\n     */\n    let e = h.toArray(element)\n    e = e.filter(x => meetsConditions(x, conditions))\n    e.map(x => x.classList.toggle(className))\n    return element\n}\n\n\n// -----------------------------------------------------\n//  Array \n// -----------------------------------------------------\n\nfunction filter(elements, conditions){\n    /**\n     * Filters an array of elements\n     * @param {Array} elements\n     * @param {Object} conditions\n     * @returns {Array} The filtered array\n     */\n\n    let e = h.toArray(elements)\n    e = e.filter(x => meetsConditions(x, conditions))\n\n    return e\n}","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nimport { krakenElementHelpers as eh} from './krakenElementHelpers.js'\n\n\n\nexport const krakenElementEventHelpers = {\n    dragDrop: {\n        setDraggable: setDragDropDraggableElement,\n        setDropzone: setDragDropDropzoneElement,\n    },\n    dragDropReordering: {\n        setDraggable: setDragDropDraggableReorderingElement,\n        setDropzone: setDragDropDropzoneReorderingElement,\n    },\n    generic: {\n        setDraggable: setDraggableGenericElement,\n        setDropzone: setDropzoneGenericElement,\n    },\n    click: {\n        set: setClickableElement,\n    },\n};\n\n\n// -----------------------------------------------------\n//  Register events \n// -----------------------------------------------------\n\n\n\n// -----------------------------------------------------\n//  Drag drop reordering\n// -----------------------------------------------------\n\nfunction setDragDropDraggableReorderingElement(element, elementHandle, callbackFn, params) {\n    \n\n    // If no handle provided, considers entire element is draggable\n    console.log(elementHandle)\n    elementHandle = elementHandle || element\n    \n    //elementHandle.draggable = true;\n\n    elementHandle.addEventListener(\"mousedown\", (event) => {\n        \n        //event.preventDefault();\n        //event.stopPropagation();\n        element.draggable = true\n\n        console.log('mousedown')\n    });\n    \n    elementHandle.addEventListener(\"mouseup\", (event) => {\n\n        //event.preventDefault();\n        //event.stopPropagation();\n        element.draggable = false\n\n    });\n    \n    element.addEventListener(\"dragstart\", (event) => {\n        //event.preventDefault();\n        event.stopPropagation();\n        event.dataTransfer.setData(\"text/plain\", element.id);\n        element.style.opacity = '0.4';\n    });\n    \n    element.addEventListener(\"dragend\", (event) => {\n        //event.preventDefault();\n        event.stopPropagation();\n        event.dataTransfer.setData(\"text/plain\", element.id);\n        element.style.opacity = '1';\n        element.draggable = false\n    });\n\n}\n\nfunction setDragDropDropzoneReorderingElement(element, callbackFn, params) {\n    element.addEventListener(\"dragover\", (event) => {\n        event.preventDefault();\n        //event.stopPropagation();\n    });\n\n    element.addEventListener(\"dragenter\", (event) => {\n        event.preventDefault();\n        //event.stopPropagation();\n        event.currentTarget.classList.add('dragover')\n        \n        \n    })\n    \n    element.addEventListener(\"dragleave\", (event) => {\n        event.preventDefault();\n        //event.stopPropagation();\n        event.currentTarget.classList.remove('dragover')\n        \n        \n    })\n    \n    \n    element.addEventListener(\"drop\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let draggedElementID = event.dataTransfer.getData(\"text/plain\");\n        let dropzoneElementID = event.currentTarget?.id;\n\n        let draggedElement = document.getElementById(draggedElementID)\n        let dropzoneElement =event.currentTarget\n\n        // Move dragged element before dropzone\n        dropzoneElement.before(draggedElement)\n        \n        let action = new h.classes.Action(\"Dragdrop - drop\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": draggedElementID,\n            name: \"Draggable element\",\n        };\n        action.instrument = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": dropzoneElementID,\n            name: \"Dropzone element\",\n        };\n        action.setCompleted();\n\n        if (callbackFn){\n            callbackFn(action, params);\n        }\n\n        // Remove all dragover\n        for(let e of document.querySelectorAll('.dragover')){\n            e.classList.remove('dragover')\n        }\n    });\n}\n\n\n// -----------------------------------------------------\n//  Drag drop\n// -----------------------------------------------------\n\nfunction setDragDropDraggableElement(element, callbackFn, params) {\n    element.draggable = true;\n\n    element.addEventListener(\"dragstart\", (event) => {\n        event.dataTransfer.setData(\"text/plain\", element.id);\n    });\n}\n\nfunction setDragDropDropzoneElement(element, callbackFn, params) {\n    element.addEventListener(\"dragover\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n    });\n\n    element.addEventListener(\"drop\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let draggedElementID = event.dataTransfer.getData(\"text/plain\");\n        let dropzoneElementID = event.currentTarget?.id;\n\n        let action = new h.classes.Action(\"Dragdrop - drop\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": draggedElementID,\n            name: \"Draggable element\",\n        };\n        action.instrument = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": dropzoneElementID,\n            name: \"Dropzone element\",\n        };\n        action.setCompleted();\n\n        \n        callbackFn(action, params);\n    });\n}\n\n// -----------------------------------------------------\n//  Click\n// -----------------------------------------------------\n\nfunction setClickableElement(element, callbackFn, params) {\n    element.addEventListener(\"click\", (event) => {\n        let element = event.currentTarget;\n        let elementID = element.id;\n\n        let action = new h.classes.Action(\"Click element\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": elementID,\n            name: \"Clickable element\",\n        };\n\n        action.setCompleted();\n\n            callbackFn(action, params);\n    });\n}\n\n// -----------------------------------------------------\n//  Set draggable generic\n// -----------------------------------------------------\n\nfunction setDraggableGenericElement(element, content, callbackFn, params) {\n    /**\n     * Assigns content to draggable element\n     */\n    element.draggable = true;\n\n    element.addEventListener(\"dragstart\", (event) => {\n        if (typeof content == \"string\") {\n            event.dataTransfer.setData(\"text/plain\", element.id);\n        } else {\n            for (let key of Object.keys(content)) {\n                event.dataTransfer.setData(key, content?.[key]);\n            }\n        }\n    });\n}\n\n// -----------------------------------------------------\n//  Set dropzone generic\n// -----------------------------------------------------\n\nfunction setDropzoneGenericElement(element, callbackFn, params) {\n    /**\n     * Assigns content to draggable element\n     */\n\n\n\n    \n    //element.draggable = true;\n\n    element.addEventListener(\"dragover\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n    });\n\n    element.addEventListener(\"drop\", async (event) => {\n\n        event.preventDefault();\n\n        let action = new h.classes.Action(\"Generic Drop event\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": event.currentTarget.id,\n            name: \"Clickable element\",\n        };\n\n        //action.object = event.currentTarget\n        \n        for (const item of event.dataTransfer.items) {\n\n            \n            if (item.kind === \"string\" && item.type.match(/^text\\/plain/)) {\n                // This \n                let result = {\n                    \"@type\": \"CreativeWork\",\n                    name: \"Text content\",\n                    text: event.dataTransfer.getData(item.type),\n                };\n                action.result = result;\n            } else if (\n                item.kind === \"string\" &&\n                item.type.match(/^text\\/html/)\n            ) {\n                // Drag data item is HTML\n                let result = {\n                    \"@type\": \"WebPageElement\",\n                    name: \"HTML content\",\n                    text: event.dataTransfer.getData(item.type),\n                };\n                action.result = result\n            } else if (\n                item.kind === \"string\" &&\n                item.type.match(/^text\\/uri-list/)\n            ) {\n                // Drag data item is URI\n                let result = {\n                    \"@type\": \"WebPage\",\n                    url: event.dataTransfer.getData(item.type),\n                };\n                action.result = result\n            } else if (item.kind === \"file\") {\n                \n                // Drag data item is a file\n                let result = new h.classes.File()\n                \n                await result.setFile(item.getAsFile())\n                action.result = result\n                \n                \n            }\n        }\n        action.setCompleted();\n        callbackFn(action, params);\n    });\n}\n","import { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\nimport { krakenElementHelpers as eh} from './krakenElementHelpers.js'\n\nimport { krakenElementThingInitHelpers } from \"./krakenElementThingInitHelpers.js\"\nimport { krakenElementThingObserverHelpers } from \"./krakenElementThingObserverHelpers.js\"\nimport { krakenElementThingPartHelpers } from \"./krakenElementThingPartHelpers.js\"\nimport { krakenElementThingPropertyHelpers } from \"./krakenElementThingPropertyHelpers.js\"\nimport { krakenElementThingRecordHelpers } from \"./krakenElementThingRecordHelpers.js\"\nimport { krakenElementThingRenderHelpers } from \"./krakenElementThingRenderHelpers.js\"\nimport { krakenElementThingRenderSystemHelpers } from \"./krakenElementThingRenderSystemHelpers.js\"\nimport { krakenElementThingTraverseHelpers } from \"./krakenElementThingTraverseHelpers.js\"\nimport { krakenElementThingEventHelpers } from \"./krakenElementThingEventHelpers.js\"\n\nlet TEMPLATEDB = {}\n\n\n\nexport const krakenElementThingHelpers = {\n    /**\n     * current: returns the element that composes the current record\n     * parent: returns element parent of\n     *\n     * How to use:\n     *\n     * Scenario 1: html template with placeholders\n     *     - select top element of template\n     *     - \n     */\n\n    // Base \n\n    isValid: isValid,\n    set: set,\n   \n\n    // Initialization\n    init: init,\n\n    // Properties\n    property: krakenElementThingPropertyHelpers,\n    \n    // Record manipulation\n    record: krakenElementThingRecordHelpers,\n    \n    // Elements sections\n    parts: krakenElementThingPartHelpers,\n\n    // Rendering\n    render: render,\n    renderSystem: renderSystem,\n\n    // Getting elements\n    traverse: krakenElementThingTraverseHelpers,\n\n    // events\n    event: krakenElementThingEventHelpers\n    \n};\n\n\n\n// -----------------------------------------------------\n//  Base \n// -----------------------------------------------------\n\nfunction isValid(element){\n    /**\n     * Checks if a element is valid (element and has type)\n     * @param {Object} value\n     * @returns {Boolean}\n     */\n\n    if(!eh.isValid(element)) { return false}\n\n    if(h.isNotNull(getElementType(element))){ return true }\n\n    return false\n    \n}\n\nfunction init(element, TEMPLATEDB, force=false){\n    /**\n     * Initializes an element\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    return krakenElementThingInitHelpers.init(element, TEMPLATEDB, force)\n    \n}\n\nfunction set(element, record, conditions){\n    /**\n     * Sets the record of an element\n     * @param {Object} element\n     * @param {Object} record\n     * @returns {Object} The element\n     */\n\n    return krakenElementThingRenderHelpers.render(element, record, conditions, TEMPLATEDB)\n\n    \n}\nfunction render(element, record, conditions){\n    /**\n     * Sets the record of an element\n     * @param {Object} element\n     * @param {Object} record\n     * @returns {Object} The element\n     */\n\n    return krakenElementThingRenderHelpers.render(element, record, conditions, TEMPLATEDB)\n\n\n}\n\n\nfunction renderSystem(element, record, conditions, TEMPLATEDB){\n    /**\n     * Sets the record of an element\n     * @param {Object} element\n     * @param {Object} record\n     * @returns {Object} The element\n     */\n\n    return krakenElementThingRenderSystemHelpers.render(element, record, conditions, TEMPLATEDB)\n\n\n}\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nimport { krakenElementHelpers as eh} from './krakenElementHelpers.js'\n\nimport { krakenElementTemplateHelpers } from \"./krakenElementTemplateHelpers.js\";\n\n\nimport { krakenElementThingPropertyHelpers as property} from \"./krakenElementThingPropertyHelpers.js\"\n\nimport { krakenElementThingPartHelpers as part} from \"./krakenElementThingPartHelpers.js\"\nimport { krakenElementThingTraverseHelpers as traverse} from \"./krakenElementThingTraverseHelpers.js\"\n\n\n//import { templateDB } from './krakenElementThingTemplateDatabase.js'\n\nexport const krakenElementThingInitHelpers = {\n    init: initThingElementAll,\n};\n\n\n\nfunction initThingElementAll(element, TEMPLATEDB, force=false) {\n    /**\n     * Initializes the element as a thing element\n     * @param {Object} element (init document if not provided))\n     * @returns {Object} The element\n     */\n\n    // Init action\n    let action = new h.classes.Action(\n        `Initialize All ${property.type.get(element)} element ${element?.id}`,\n    )\n    action.object = element\n\n    \n    // Error handling\n    element = element || document.body\n\n    if(h.isArray(element)){\n        action.instrument = element.map(x => initThingElementAll(x, TEMPLATEDB, force))\n        action.close()\n        return action\n    }\n\n\n    // Placeholders\n    //replacePlaceholders(element)\n\n    // Add missing classes  \n    let elements = element.getElementsByTagName(\"*\")\n    for (let e of elements) {\n        addMissingClasses(e);\n    }\n\n    // Init childrens\n    let item = element.firstElementChild;\n    while (item) {\n        let nextItem = item.nextElementSibling;\n        action.instrument = initThingElementAll(item, TEMPLATEDB, force);\n        item = nextItem;\n    }\n\n    \n    // Init element\n    if (h.isNotNull(property.type.get(element))) {\n        action.instrument = initThingElement(element, TEMPLATEDB, force);\n    }\n    \n\n    \n\n    action.close()\n\n   \n    return action;\n}\n\n\nfunction initThingElement(element, TEMPLATEDB, force) {\n    /**\n     * Initialize thing, property and value elements\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n    let action = new h.classes.Action(\n        `Initialize ${property.type.get(element)} element ${element?.id}`,\n    )\n\n\n    \n    action.object = element\n    \n    if (h.isNull(element)) {\n        action.setFailed('Element is null')\n        return action;\n    }\n\n\n    // Return if no type\n    if(h.isNull(property.type.get(element))){\n        action.close()\n        return action;\n    }\n\n    \n    // Set element id (if missing)\n    eh.setId(element);\n\n\n\n    // Add thing and value element if missing\n    if(property.type.get(element) == 'property'){\n        \n        let addThingAction = addThingToProperty(element)\n    \n        let addValueAction = addValueToProperty(element)\n\n        \n    }\n\n\n    // Add part element if missing       \n    let mainAction = addMainIfMissing(element, TEMPLATEDB)\n    \n    let mainPart = part.main.get(element)\n\n\n    // Set main part content as template \n    let retrieve3Action = retrieveInnerContentAsTemplate(mainPart, TEMPLATEDB, force)\n    \n    // Set content as template\n    let retrieve2Action = retrieveInnerContentAsTemplate(element, TEMPLATEDB, force)\n    \n    \n    \n    action.close()\n    return action\n}\n\n\n\nfunction addMainIfMissing(element, TEMPLATEDB){\n    /**\n     * Add main if missing\n     * @param {Object} element\n     * @returns {Object} The element\n     * \n     */\n\n    let action = new h.classes.Action(\n        `addMainIfMissing ${property.type.get(element)} element ${element?.id}`,\n    )\n    action.object = element\n    \n    let mainPart = part.main.get(element)\n    \n    // Make main part if missing\n    if(h.isNull(mainPart)){\n        mainPart = part.add(element, 'main', '')\n        action.result = mainPart\n\n    }\n\n    action.close()\n    return action\n}\n\n\nfunction replacePlaceholders(element) {\n    /**\n     * Replaces placeholders in element with property elements {{ }}\n     * @param {Object} element\n     * @returns {Object} The element\n     * \n     */\n    // Replace references in {{ }} like {{ name }} or {{ item.name }} with properties\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    \n\n    let newContent = krakenElementTemplateHelpers.get(element.innerHTML);\n\n    if(newContent != element.innerHTML){\n        element.innerHTML = newContent;\n    }\n\n\n    return\n\n\n}\n\n\n\n\nfunction retrieveAndSaveTemplate(element, TEMPLATEDB={}){\n    /**\n     * Retrieves the content from the element and saves it as template\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    \n    let action = new h.classes.Action(\n        `retrieveAndSaveTemplate ${property.type.get(element)} element ${element?.id}`,\n    )\n\n    action.object = element\n\n    // Skip if already has a templateID\n    if(h.isNotNull(element.getAttribute('data-templateID'))){\n        action.close()\n        return action \n    }\n    \n    // Get templates from template\n    let preTemplateParts = element.querySelectorAll('TEMPLATE') //getTemplateOfElement(element)\n\n\n    // Return if no templates found\n    if(h.isNull(preTemplateParts)){\n        action.close()\n        return action \n    }\n\n\n    // Set template id\n    let templateID = 'template_' + h.uuid.new()\n    element.setAttribute('data-templateID', templateID)\n\n    \n    \n    let templateParts = []\n    for( let t of preTemplateParts){\n\n        let className = 'kr' + property.type.get(element).slice(0, 1).toUpperCase() + property.type.get(element).slice(1).toLowerCase()\n\n       if(traverse.current.get(t, className).id == element.id){\n            templateParts.push(t)\n            \n       }\n    }\n\n    action.result = templateParts\n    \n    // Add template parts to TEMPLATEDB\n    if(templateParts.length > 0){\n        \n        for(let t of templateParts){\n            TEMPLATEDB[templateID] = (TEMPLATEDB?.[templateID] || '') +  t.innerHTML;\n\n            \n            TEMPLATEDB[templateID] = TEMPLATEDB[templateID].trim()\n        }\n    } \n\n    action.close()\n    return action\n\n}\n\nfunction retrieveInnerContentAsTemplate(element, TEMPLATEDB, force=false){\n    /**\n     * If no template, retrieves inner content to be used as template\n     * @param {Object} element\n     * @returns {Object} The element\n     * \n     */\n\n\n    let action = new h.classes.Action(\n        `retrieveInnerContentAsTemplate ${property.type.get(element)} element ${element?.id}`,\n    )\n    action.object = element\n\n\n    // Skip if already has a templateID\n    let templateID = element.getAttribute('data-templateID')\n\n    \n    if(h.isNotNull(templateID) && h.isNotNull(TEMPLATEDB?.[templateID]) && force!=true){    \n\n        action.close()\n        return action \n    }\n\n    // Create templateID\n    if(h.isNull(templateID)){\n        templateID = 'template_' + h.uuid.new()\n        element.setAttribute('data-templateID', templateID)\n    }\n        \n    // Get inner content\n    let content = element.innerHTML || ''\n    content = content.replaceAll('\\n', '')\n    content = content.replaceAll('  ', ' ')\n    TEMPLATEDB[templateID] = content\n\n\n    // Set content to null\n    element.innerHTML = ''\n    \n    action.result = element.innerHTML\n    \n    action.close()\n    return action\n    \n}\n\nfunction addThingToProperty(element) {\n    /**\n     * If a property element doens't have a parent thing, adds one\n     * @param {Object} element\n     * @returns {Object} The element\n     * \n     */\n\n\n    let action = new h.classes.Action(\n        `addThingToProperty ${property.type.get(element)} element ${element?.id}`,\n    )\n    action.object = element\n\n    \n    // Error handling\n    if(h.isNull(element)){ \n        action.setFailed('Element is null')\n        return action\n    }\n\n    if (h.isNull(element.getAttribute(\"data-propertyID\"))) {\n        action.setFailed('Element does not have a propertyID')\n        return action\n    }\n\n    // Verify if it has a parent thing element\n    let item = element.parentElement\n    let hasNoThing = false\n    while(h.isNotNull(item) && hasNoThing == false){\n        if(h.isNotNull(item.classList) && item.classList.contains('krThing')){\n            action.close()\n            return action\n            \n        }\n        if(item.classList.contains('krProperty')){\n            hasNoThing = true\n        }\n        item = item.parentElement\n    }\n\n\n\n    // Create new parent\n    let newThingElement = document.createElement(\"span\");\n    newThingElement.classList.add(\"Addedthing\");\n    action.result = newThingElement\n\n    // Add parent to element\n    property.type.setAsThing(newThingElement)\n    \n    //setElementTypeThing(newThingElement);\n    newThingElement.setAttribute(\n        \"data-record-type\",\n        element.getAttribute(\"data-record-type\"),\n    );\n    newThingElement.setAttribute(\n        \"data-record-id\",\n        element.getAttribute(\"data-record-id\"),\n    );\n    eh.insert.above(newThingElement, element);\n\n    action.close()\n    return action\n}\n\n\n\nfunction addValueToProperty(element){\n    /**\n     * Addd value element if missing\n     * \n     */\n\n    let values = traverse.children.values.get(element)\n\n    if(h.isNotNull(values)){\n        return\n    }\n\n    let valueElement = document.createElement(\"span\");\n    property.type.setAsValue(valueElement)\n\n\n    addMainIfMissing(element)\n    let mainPart = part.main.get(element)\n    \n    eh.insert.below(valueElement, mainPart);\n\n    return\n    \n}\n\n\n\n    \nfunction addMissingClasses(element) {\n    /**\n     * Adds missing classes to element\n     * Elements with data- attributes filled in but no class\n     * @param {Object} element\n     * @returns {Object} The element\n     * \n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n\n    // Converts elements with proper attributes to proper class\n\n    let record_type = element.getAttribute(\"data-record-type\");\n    let record_id = element.getAttribute(\"data-record-id\");\n    let propertyID = element.getAttribute(\"data-propertyID\");\n    let valueID = element.getAttribute(\"data-valueID\");\n\n    let record_type_null =\n        !record_type || record_type == null || record_type == \"\";\n    let record_id_null = !record_id || record_id == null || record_id == \"\";\n    let record_propertyID_null =\n        !propertyID || propertyID == null || propertyID == \"\";\n    let record_valueID_null = !valueID || valueID == null || valueID == \"\";\n\n    // Convert to krThing if type and id but not property\n    if (\n        record_type_null == false &&\n        record_id_null == false &&\n        record_propertyID_null == true\n    ) {\n        element.classList.add(\"krThing\");\n    }\n\n    // Convert to krProperty if type and id but not property\n    if (record_propertyID_null == false && record_valueID_null == true) {\n        element.classList.add(\"krProperty\");\n    }\n\n    // Convert to krProperty if type and id but not property\n    if (record_valueID_null == false) {\n        element.classList.add(\"krValue\");\n    }\n\n    // Convert to krTemplate if tag template\n    if(element.tagName == 'TEMPLATE'){\n        element.classList.add(\"krTemplate\");\n    }\n\n    // Return element\n    return element;\n}\n\n","import { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\n\nexport const krakenElementTemplateHelpers = {\n    get: renderTemplate,\n    replacePlaceholders: renderTemplate,\n    render: renderTemplate,\n};\n\nfunction renderTemplate(template, record){\n\n\n\n   // let renderedTemplate1 = _renderTemplate(template, record)\n\n    //return renderedTemplate1\n}\n\n\n\nfunction _renderTemplate(template, record){\n\n    /**\n     * beforeContent: the content before the opening tag\n     * afterContent: the content after the closing tag\n     * templateContent: the content in between the tags\n     * valueContent: the content replacing the templateContent with actual values\n     */\n\n\n    let content = template\n\n    //\n\n    let iterators = []\n\n    // -----------------------------------------------------\n    //  Handle iterations \n    // -----------------------------------------------------\n\n\n    let tag = h.tag.get(content)\n\n    while(h.isNotNull(tag)){\n        \n       \n        // \n        //let newContent = \n\n        if(tag.type =='iterator'){\n            \n        \n            content = `\n                ${String(tag.content.before || '')} \n                    <span class=\"krProperty\" data-propertyID=\"${tag.value || ''}\"> \n                        ${String(tag.content.between || '')} \n                    </span> \n                ${String(tag.content.after || '')}\n                `\n        } else {\n\n            content = `\n            ${String(tag.content.before || '')} \n                \n                    ${h.stringOperation.execute(record, tag.value) || ''}\n               \n            ${String(tag.content.after || '')}\n            `\n            \n        }\n        \n        \n        console.log('tag', tag)\n        tag = h.tag.get(content)\n        \n    }\n\n\n    content = content.trim()\n    \n    \n    return content\n\n}\n\n\n\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nimport { krakenElementThingTraverseHelpers as traverse} from \"./krakenElementThingTraverseHelpers.js\"\n\n\n\nexport const krakenElementThingPropertyHelpers = {\n\n    type: {\n        get: getElementType,\n        getNext: getNextElementType,\n        set: setElementType,\n        delete: deleteElementType,\n        setAsThing: setElementTypeThing,\n        setAsProperty: setElementTypeProperty,\n        setAsValue: setElementTypeValue,\n    },\n    record_type: {\n        get: getRecordType,\n        set: setRecordType,\n    },\n    record_id: {\n        get: getRecordId,\n        set: setRecordId,\n    },\n    propertyID: {\n        get: getPropertyID,\n        set: setPropertyID,\n    },\n    valueID: {\n        get: getValueID,\n        set: setValueID,\n    },\n    valueHash: {\n        get: getValueHash,\n        set: setValueHash,\n    },\n    ref: {\n        get: getRecordRef,\n        set: setRecordRef,\n    }\n   \n    \n}\n\n\n\n\nfunction getRecordType(element) {\n    /**\n     * Returns the record type of the element\n     * @param {Object} element\n     * @returns {String} The record type\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let record_type = element.getAttribute(\"data-record-type\");\n    return record_type;\n}\n\nfunction setRecordType(element, record_type){\n    /**\n     * Sets the record type of the element\n     * @param {Object} element\n     * @param {String|Object} record_type of record or ref\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    record_type = record_type?.['@type'] || record_type?.record_type || record_type\n\n    element.setAttribute(\"data-record-type\", record_type);\n    return element\n}\n\n\n\nfunction getRecordId(element) {\n    /**\n     * Returns the record id of the element\n     * @param {Object} element\n     * @returns {String} The record id\n     */\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let record_id = element.getAttribute(\"data-record-id\");\n    return record_id;\n}\n\nfunction setRecordId(element, record_id){\n    /**\n     * Sets the record type of the element\n     * @param {Object} element\n     * @param {String|Object} record_type of record or ref\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    record_id = record_id?.['@id'] || record_id?.record_id || record_id\n    element.setAttribute(\"data-record-id\", record_id);\n    return element\n}\n\nfunction getPropertyID(element) {\n    /**\n     * Returns the record id of the element\n     * @param {Object} element\n     * @returns {String} The record id\n     */\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let record_id = element.getAttribute(\"data-propertyID\");\n    return record_id;\n}\n\nfunction setPropertyID(element, propertyID){\n    /**\n     * Sets the record type of the element\n     * @param {Object} element\n     * @param {String|Object} record_type of record or ref\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    element.setAttribute(\"data-propertyID\", propertyID);\n    return element\n}\n\nfunction getValueID(element) {\n    /**\n     * Returns the record id of the element\n     * @param {Object} element\n     * @returns {String} The record id\n     */\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let record_id = element.getAttribute(\"data-valueID\");\n    return record_id;\n}\n\nfunction setValueID(element, valueID){\n    /**\n     * Sets the record type of the element\n     * @param {Object} element\n     * @param {String|Object} record_type of record or ref\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    element.setAttribute(\"data-valueID\", valueID);\n    return element\n}\n\n\nfunction getValueHash(element) {\n    /**\n     * Returns the record id of the element\n     * @param {Object} element\n     * @returns {String} The record id\n     */\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let record_id = element.getAttribute(\"data-value\");\n    return record_id;\n}\n\nfunction setValueHash(element, value){\n    /**\n     * Sets the record type of the element\n     * @param {Object} element\n     * @param {String|Object} record_type of record or ref\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    if(typeof value != 'string' || value.length > 20){\n        value = h.hash.get(JSON.stringify(value))\n    }\n    \n    //\n    element.setAttribute(\"data-value\", value);\n    return element\n}\n\n\nfunction getRecordRefAll(element){\n    /**\n     * Returns all the record refs under the element\n     * @param {Object} element\n     * @returns {Array} The record refs\n     */\n\n    // Error handling\n    if(h.isNull(element)){ element = document.body }\n\n    let thingElements = traverse.childrenAll.things.get(element)\n\n    let refs = thingElements.map(x => getRecordRef(x))\n\n    return refs\n\n}\n\nfunction getRecordRef(element) {\n    /**\n     * Returns the ref of the element\n     * @param {Object} element\n     * @returns {Object} The ref\n     */\n\n    let record_type = getRecordType(element);\n    let record_id = getRecordId(element);\n\n    if (h.isNull(record_type)) {\n        return null;\n    }\n    if (h.isNull(record_id)) {\n        return null;\n    }\n\n    let ref = { \"@type\": record_type, \"@id\": record_id };\n    return ref;\n}\n\nfunction setRecordRef(element, ref_or_record_type, record_id){\n    /**\n     * Sets the ref of the element (type and id)\n     * @param {Object} element\n     * @param {Object|String} ref_or_record_type of record or ref\n     * @param {String} record_id\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n\n    let record_type = ref_or_record_type?.['@type'] || ref_or_record_type?.record_type || ref_or_record_type\n    record_id = record_id?.['@id'] || record_id?.record_id || record_id\n\n    setRecordType(element, record_type)\n    setRecordId(element, record_id)\n\n    return element\n\n\n}\n\n\n\n\nfunction getElementType(element) {\n    /**\n     * Returns the element type (thing, property, value)\n     * @param {Object} element\n     * @returns {Object} The element type\n     * \n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    if(h.isNull(element.classList)){ return null }\n    //\n    if (element.classList.contains(\"krThing\")) {\n        return \"thing\";\n    }\n    if (element.classList.contains(\"krProperty\")) {\n        return \"property\";\n    }\n    if (element.classList.contains(\"krValue\")) {\n        return \"value\";\n    }\n    return null;\n}\n\nfunction getNextElementType(element) {\n    /**\n     * Returns the next element type (thing, property, value)\n     * Order thing -> proeprty -> value -> thing\n     * @param {Object} element\n     * @returns {Object} The element type\n     */\n\n    // Error handling\n    if(h.isNull(element)){ return null }\n\n    //\n    let type = getElementType(element);\n    switch (type) {\n        case \"thing\":\n            return \"property\";\n        case \"property\":\n            return \"value\";\n        case \"value\":\n            return \"thing\";\n        default:\n            return null;\n    }\n}\n\nfunction setElementType(element, elementType) {\n    /**\n     * Sets the element type\n     * @param {Object} element\n     * @param {Object} elementType\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return;\n    }\n\n    //\n    deleteElementType(element);\n\n    element.classList.add(elementType);\n}\n\nfunction deleteElementType(element) {\n    /**\n     * Deletes the element type (removes class)\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return;\n    }\n\n    //\n    let classes = [\"krThing\", \"krProperty\", \"krValue\"];\n    for (let c of classes) {\n        element.classList.remove(c);\n    }\n    return;\n}\n\nfunction setElementTypeThing(element) {\n    /**\n     * Sets the element type to thing\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return;\n    }\n    //\n    let elementType = \"krThing\";\n    return setElementType(element, elementType);\n}\n\nfunction setElementTypeProperty(element) {\n    /**\n     * Sets the element type to property\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return;\n    }\n\n    //\n    let elementType = \"krProperty\";\n    return setElementType(element, elementType);\n}\nfunction setElementTypeValue(element) {\n    /**\n     * Sets the element type to value\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return;\n    }\n\n    //\n    let elementType = \"krValue\";\n    return setElementType(element, elementType);\n}\n","import { krakenBaseHelpers as h } from \"../base/krakenBaseHelpers.js\";\n\nimport { krakenElementHelpers as eh } from \"./krakenElementHelpers.js\";\n\nimport { krakenElementTemplateHelpers } from \"./krakenElementTemplateHelpers.js\";\n\nexport const krakenElementThingTraverseHelpers = {\n    \n    things: {\n        get: getThingElements,\n    },\n    current: {\n        element: {\n            get: getCurrentElement,\n        },\n        thing: {\n            get: getCurrentThing,\n        },\n        property: {\n            get: getCurrentProperty,\n        },\n        value: {\n            get: getCurrentValue,\n        },\n    },\n    parent: {\n        element: {\n            get: getParentElement,\n        },\n        thing: {\n            get: getParentThing,\n        },\n        property: {\n            get: getParentProperty,\n        },\n        value: {\n            get: getParentValue,\n        },\n    },\n    top: {\n        element: {\n            get: getTopElement,\n        },\n        thing: {\n            get: getTopThing,\n        },\n        property: {\n            get: getTopProperty,\n        },\n        value: {\n            get: getTopValue,\n        },\n    },\n    children: {\n        elements: {\n            get: getChildrenElements,\n        },\n        things: {\n            get: getChildrenThings,\n        },\n        properties: {\n            get: getChildrenProperties,\n        },\n        values: {\n            get: getChildrenValues,\n        },\n    },\n    childrenAll: {\n        elements: {\n            get: getChildrenElementsAll,\n        },\n        things: {\n            get: getChildrenThingsAll,\n        },\n        properties: {\n            get: getChildrenPropertiesAll,\n        },\n        values: {\n            get: getChildrenValuesAll,\n        },\n    },\n};\n\n\n\n\n\n// -----------------------------------------------------\n//  All the things \n// -----------------------------------------------------\n\n\n\nfunction getThingElements(element, record_or_record_type, record_id) {\n    /**\n     * Returns all thing elements under element (or document if null)\n     * @param {Object} element\n     * @param {Object|String} record_or_record_type\n     * @param {String} record_id\n     * @returns {Array} The thing elements\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        element = document;\n    }\n\n    // \n    let record_type = record_or_record_type?.['@type'] || record_or_record_type?.record_type || record_or_record_type\n    record_id = record_or_record_type?.['@id'] || record_or_record_type?.record_id || record_id\n\n    let conditions;\n    if (h.isNotNull(record_type)) {\n        conditions = {\n            \"data-record-type\": record_type,\n            \"data-record-id\": record_id,\n        };\n    }\n\n    let things = getChildrenThingsAll(element, conditions);\n\n\n\n    return things;\n}\n\n\n\n// -----------------------------------------------------\n//  Retrieving elements - Current\n// -----------------------------------------------------\nfunction getCurrentElement(element, className, conditions) {\n    /**\n     * Returns closest parent element with className and conditions\n     * @param {Object} element\n     * @param {Object} className\n     * @param {Object} conditions\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    //\n    let item = element;\n    while (item) {\n        if (\n            item.classList &&\n            item.classList.contains(className) &&\n            eh.meetsConditions(item, conditions)\n        ) {\n            return item;\n        }\n        item = item.parentElement;\n    }\n    return null;\n}\n\nfunction getCurrentThing(element, conditions) {\n    /**\n     * Returns current thing with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     */\n\n    let className = \"krThing\";\n    return getCurrentElement(element, className, conditions);\n}\n\nfunction getCurrentProperty(element, conditions) {\n    /**\n     * Returns current property with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     */\n\n    let className = \"krProperty\";\n    return getCurrentElement(element, className, conditions);\n}\n\nfunction getCurrentValue(element, conditions) {\n    /**\n     * Returns current value with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     */\n\n    let className = \"krValue\";\n    return getCurrentElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Retrieving elements - Parent\n// -----------------------------------------------------\n\nfunction getParentElement(element, className, conditions) {\n    /**\n     * Returns closest parent element with className and conditions\n     * @param {Object} element\n     * @param {Object} className\n     * @param {Object} conditions\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    //\n    let currentElement = getCurrentElement(element, className, conditions);\n    if (h.isNull(currentElement)) {\n        return;\n    }\n\n    let parentItem = currentElement.parentElement;\n    if (h.isNull(parentItem)) {\n        return null;\n    }\n    let parentElement = getParentElement(parentItem, className, conditions);\n\n    return parentElement;\n}\n\nfunction getParentThing(element, conditions) {\n    /**\n     * Returns parent thing with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n\n    let className = \"krThing\";\n    return getParentElement(element, className, conditions);\n}\nfunction getParentProperty(element, conditions) {\n    /**\n     * Returns parent thing with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n\n    let className = \"krProperty\";\n    return getParentElement(element, className, conditions);\n}\nfunction getParentValue(element, conditions) {\n    /**\n     * Returns parent thing with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n\n    let className = \"krValue\";\n    return getParentElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Retrieving elements - Top\n// -----------------------------------------------------\n\nfunction getTopElement(element, className, conditions) {\n    /**\n     * Returns most top parent element containing class name\n     * @param {Object} element\n     * @param {Object} className\n     * @param {Object} conditions\n     * @returns {Object} The top element\n     *\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    //\n    let item = element;\n    let topElement = null;\n    while (item) {\n        if (\n            item.classList.contains(className) &&\n            eh.meetsConditions(item, conditions)\n        ) {\n            topElement = item;\n        }\n        item = item.parentElement;\n    }\n    return topElement;\n}\n\nfunction getTopThing(element, conditions) {\n    /**\n     * Returns most top parent thing containing class name\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n\n    let className = \"krThing\";\n    return getTopElement(element, className, conditions);\n}\nfunction getTopProperty(element, conditions) {\n    /**\n     * Returns most top parent property containing class name\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n    let className = \"krProperty\";\n    return getTopElement(element, className, conditions);\n}\nfunction getTopValue(element, conditions) {\n    /**\n     * Returns most top parent value containing class name\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The parent thing\n     */\n    let className = \"krValue\";\n    return getTopElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Retrieving elements - Children\n// -----------------------------------------------------\n\nfunction getChildrenElements(element, classToGet, classesToStop, conditions) {\n    /**\n     * Returns all direct children elements with classToGet and conditions\n     * @param {Object} element\n     * @param {Object} classToGet\n     * @param {Object} classesToStop\n     * @param {Object} conditions\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    //\n\n    let results = [];\n    if (!Array.isArray(classesToStop)) {\n        classesToStop = [classesToStop];\n    }\n\n    if (!element.children) {\n        return [];\n    }\n\n    for (let i of element.children) {\n        let skip = false;\n        for (let classToStop of classesToStop) {\n            if (i.classList.contains(classToStop)) {\n                skip = true;\n            }\n        }\n        if (skip == true) {\n            continue;\n        }\n\n        if (\n            i.classList.contains(classToGet) &&\n            eh.meetsConditions(i, conditions)\n        ) {\n            results.push(i);\n        }\n\n        let v = getChildrenElements(i, classToGet, classesToStop, conditions);\n        if (v && v.length > 0) {\n            results = results.concat(v);\n        }\n    }\n\n    return results;\n}\n\nfunction getChildrenThings(element, conditions) {\n    /**\n     * Returns all direct children things with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     */\n    let classToGet = \"krThing\";\n    let classToStop = [\"krProperty\", \"krValue\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenProperties(element, conditions) {\n    /**\n     * Returns all direct children properties with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     */\n    let classToGet = \"krProperty\";\n    let classToStop = [\"krThing\", \"krValue\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenValues(element, conditions) {\n    /**\n     * Returns all direct children values with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     */\n    let classToGet = \"krValue\";\n    let classToStop = [\"krThing\", \"krProperty\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\n// -----------------------------------------------------\n//  Retrieving elements - Children  - All\n// -----------------------------------------------------\n\nfunction getChildrenElementsAll(\n    element,\n    classToGet,\n    classesToStop,\n    conditions,\n) {\n    /**\n     * Get all children and grandchildren\n     * @param {Object} element\n     * @param {Object} classToGet\n     * @param {Object} classesToStop\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     *\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    classesToStop = []\n    //\n    let results = getChildrenElements(\n        element,\n        classToGet,\n        classesToStop,\n        conditions,\n    );\n    let childResults = [];\n\n    for (let r of results) {\n        childResults = childResults.concat(\n            getChildrenElementsAll(r, classToGet, classesToStop, conditions),\n        );\n    }\n    results = results.concat(childResults);\n\n    return results;\n}\n\nfunction getChildrenThingsAll(element, conditions) {\n    /**\n     * Returns all children and grandchildren things with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     *\n     */\n    let classToGet = \"krThing\";\n    let classToStop = [\"krProperty\", \"krValue\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenPropertiesAll(element, conditions) {\n    /**\n     * Returns all children and grandchildren properties with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     *\n     */\n    let classToGet = \"krProperty\";\n    let classToStop = [\"krThing\", \"krValue\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenValuesAll(element, conditions) {\n    /**\n     * Returns all children and grandchildren values with conditions\n     * @param {Object} element\n     * @param {Object} conditions\n     * @returns {Object} The children things\n     *\n     */\n    let classToGet = \"krValue\";\n    let classToStop = [\"krThing\", \"krProperty\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n","import { krakenBaseHelpers as h } from \"../base/krakenBaseHelpers.js\";\n\nimport { krakenElementThingPropertyHelpers } from \"./krakenElementThingPropertyHelpers.js\";\n\nimport { krakenElementThingTraverseHelpers as traverse } from \"./krakenElementThingTraverseHelpers.js\";\n\nimport { krakenElementHelpers as eh } from \"./krakenElementHelpers.js\";\n\n// -----------------------------------------------------\n//  Element components\n// -----------------------------------------------------\n/*\n    Basd on semantic web\n    Each element type (thing, property, value) has the same structure:\n        - header:\n            - Contains stuff before data\n        - main\n            - Contains the actual data\n        - footer\n            - Contains stuff after data\n        - actions\n            - Contains potentialActions\n        - select\n            - Contains elements for selecting thing\n\n\n*/\n\nexport const krakenElementThingPartHelpers = {\n    get: getPartsOfElement,\n    add: addPartToElement,\n    header: {\n        get: getHeaderOfElement,\n    },\n    main: {\n        get: getMainOfElement,\n    },\n    footer: {\n        get: getFooterOfElement,\n    },\n    nav: {\n        get: getNavOfElement,\n    },\n    aside: {\n        get: getAsideOfElement,\n    },\n    sections: {\n        get: getSectionsOfElement,\n    },\n    template: {\n        get: getTemplateOfElement,\n    },\n};\n\nfunction getPartsOfElement(element, partName) {\n    /**\n     * Returns the header portion of an element (class header)\n     * @param {Object} element\n     * @param {Object} section section to retrieve (header, main, footer, etc.)\n     * @returns {Object} The header element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    if (h.isNull(partName)) {\n        return null;\n    }\n\n    //\n    let nextElementType =\n        krakenElementThingPropertyHelpers.type.getNext(element);\n\n    //\n\n    // Add kr to partname if missing\n    let classToGet = partName;\n    if (!classToGet.startsWith(\"kr\")) {\n        classToGet =\n            \"kr\" +\n            classToGet.charAt(0).toUpperCase() +\n            classToGet.slice(1).toLowerCase();\n    }\n\n    // Retrieve elements\n    let bodies = traverse.children.elements.get(\n        element,\n        classToGet,\n        ['krThing', 'krProperty', 'krValue']\n    );\n\n    // Return\n    return bodies;\n}\n\nfunction addPartToElement(element, partName) {\n    /**\n     * Adds a body to an element if missing\n     * @param {Object} element\n     * @returns {Object} The new part\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    // Check if part already exists, return if so\n    let part = getPartsOfElement(element, partName);\n    if (h.isNotNull(part)) {\n        return part;\n    }\n\n    // Add kr to partname if missing\n    let className = partName;\n    if (!className.startsWith(\"kr\")) {\n        className =\n            \"kr\" +\n            className.charAt(0).toUpperCase() +\n            className.slice(1).toLowerCase();\n    }\n\n    // Create new span element, template if part template\n    let elementType = \"span\";\n    let newBodyElement = document.createElement(elementType);\n    newBodyElement.classList.add(className);\n\n    // If class is main, insert betweeen, else add as children\n    if (className == \"krMain\") {\n        eh.insert.below(newBodyElement, element);\n    } else {\n        element.appendChild(newBodyElement);\n    }\n\n    // return\n    return newBodyElement;\n}\n\nfunction getHeaderOfElement(element) {\n    /**\n     * Returns the header portion of an element (class header)\n     * @param {Object} element\n     * @returns {Object} The header element\n     *\n     */\n\n    return getPartsOfElement(element, \"header\")?.[0] || null;\n}\n\nfunction getMainOfElement(element) {\n    /**\n     * Returns child element containing krMain class.\n     * @param {Object} element\n     * @returns {Object} The body element\n     *\n     */\n\n    return getPartsOfElement(element, \"main\")?.[0] || null;\n}\n\nfunction getFooterOfElement(element) {\n    /**\n     * Returns the footer portion of an element\n     * @param {Object} element\n     * @returns {Object} The footer\n     */\n\n    return getPartsOfElement(element, \"footer\")?.[0] || null;\n}\n\nfunction getNavOfElement(element) {\n    /**\n     * Returns the footer portion of an element\n     * @param {Object} element\n     * @returns {Object} The footer\n     */\n\n    return getPartsOfElement(element, \"nav\")?.[0] || null;\n}\n\nfunction getAsideOfElement(element) {\n    /**\n     * Returns the footer portion of an element\n     * @param {Object} element\n     * @returns {Object} The footer\n     */\n\n    return getPartsOfElement(element, \"aside\")?.[0] || null;\n}\n\nfunction getTemplateOfElement(element) {\n    /**\n     * Returns the footer portion of an element\n     * @param {Object} element\n     * @returns {Object} The footer\n     */\n\n    return (\n        traverse.children.elements.get(element, \"krTemplate\", \"krValue\")?.[0] ||\n        null\n    );\n}\n\nfunction getSectionsOfElement(element) {\n    /**\n     * Returns the footer portion of an element\n     * @param {Object} element\n     * @returns {Object} The footer\n     */\n\n    return getPartsOfElement(element, \"section\");\n}\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\n\n\n\nexport const krakenElementThingObserverHelpers = {\n  set: setObserver\n}\n\n\n\nfunction setObserver(element, callbackFn){\n\n\n    const config = { attributes: true, childList: true, subtree: true , characterData: true};\n\n    \n    // Callback function to execute when mutations are observed\n    const callback = (mutationList, observer) => {\n      for (const mutation of mutationList) {\n\n        let event = {\n            \"@type\": \"Action\",\n            \"@id\": h.uuid.new(),\n            \"name\": \"Element mutation\",\n            \"object\": mutation.target,\n       \n        }\n        if (mutation.type === \"childList\") {\n          //console.log(\"A child node has been added or removed.\");\n        } else if (mutation.type === \"attributes\") {\n          //console.log(`The ${mutation.attributeName} attribute was modified.`);\n        } else if (mutation.type === 'characterData'){\n          //console.log('mutation.type', mutation)\n\n          let action = {\n            \"@type\": \"ReplaceAction\",\n            \"@id\": h.uuid.new(),\n            replacee: mutation.oldValue,\n            replacer: mutation.target.textContent,\n          }\n          callbackFn(action)\n\n          \n        }\n      }\n    };\n\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(element, config);\n\n    // Later, you can stop observing\n    //observer.disconnect();\n\n    \n}\n\nfunction broadcast(element, event){\n\n    \n    \n}","import { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nimport { krakenElementThingTraverseHelpers as traverse } from \"./krakenElementThingTraverseHelpers.js\"\n\n\nexport const krakenElementThingRecordHelpers = {\n    \n    record: {\n         get: getRecordFromElement,\n        set: setRecordToElement,\n        delete: deleteRecordFromElement,\n    },\n    value: {\n        get: getValueFromElement\n    }\n   \n};\n\nfunction getRecordFromElement(element) {\n    /**\n     * Retrieves record from elements attributes and values\n     * @param {Object} element\n     * @returns {Object} The record\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    // Get record\n    let record = {};\n    let thingElement = traverse.current.thing.get(element);\n\n    if (h.isNull(thingElement)) {\n        return null;\n    }\n\n    record[\"@type\"] = thingElement.getAttribute(\"data-record-type\");\n    record[\"@id\"] = thingElement.getAttribute(\"data-record-id\");\n\n    if (h.isNull(record?.[\"@type\"])) {\n        return null;\n    }\n\n    // Get properties\n    let propertyElements = traverse.children.properties.get(thingElement);\n\n    for (let p of propertyElements) {\n        let propertyID = p.getAttribute(\"data-propertyID\");\n        record[propertyID] = [];\n\n        // Get values\n        let valueElements = traverse.children.values.get(p);\n        for (let v of valueElements) {\n            let value = getValueFromElement(v);\n            if (h.isNotNull(value)) {\n                record[propertyID].push(value);\n            }\n        }\n    }\n    record = h.json.simplify(record);\n    return record;\n}\n\nfunction getValueFromElement(element) {\n    /**\n     * Returns the value contained in an element\n     * @param {Object} element\n     * @returns {Object} The value\n     *\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    // If input\n    if (h.isNotNull(element?.value)) {\n        return element.value;\n    }\n\n    // If value is contained in value attribute\n    let v = element.getAttribute(\"value\");\n    if (h.isNotNull(v)) {\n        return v;\n    }\n\n    // If thing\n    let childrenThingElements = traverse.children.things.get(element);\n    if (childrenThingElements.length > 0) {\n        return childrenThingElements[0];\n    }\n\n    // html content\n    if (h.isNotNull(element.innerHTML)) {\n        let content = element.textContent;\n        content = h.string.clean(content);\n        \n        return content;\n    }\n\n    return null;\n}\n\nfunction setRecordToElement(element, record_type, record_id) {\n    /**\n     * Sets record to element\n     * @param {Object} element\n     * @param {Object} record_type\n     * @param {Object} record_id\n     *\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    //\n    record_id = record_type?.record_id || record_type?.[\"@id\"] || record_id;\n    record_type =\n        record_type?.record_type || record_type?.[\"@type\"] || record_type;\n\n    if (h.isNull(record_type)) {\n        return;\n    }\n    if (h.isNull(record_id)) {\n        return;\n    }\n    if (h.isNull(element)) {\n        return;\n    }\n\n    // Set type and id\n\n    let elements = [];\n\n    // Retrieve thing\n    let currentThing = traverse.current.thing.get(element);\n    if (h.isNull(currentThing)) {\n        return null;\n    }\n    elements.push(currentThing);\n\n    // Retrieve properties\n    let propertyElements = traverse.children.things.get(currentThing);\n    elements = elements.concat(propertyElements);\n\n    // Retrieve values\n    for (let p of propertyElements) {\n        let valueElements = traverse.children.values.get(p);\n        elements = elements.concat(valueElements);\n    }\n\n    // Assign type and id for all elements\n    for (let i of elements) {\n        i.setAttribute(\"data-record-type\", record_type);\n        i.setAttribute(\"data-record-id\", record_id);\n    }\n    return;\n}\n\nfunction deleteRecordFromElement(element) {\n    /**\n     * Deletes record from element\n     * @param {Object} element\n     * @returns {Object} The element\n     */\n\n    // Error handling\n    if (h.isNull(element)) {\n        return null;\n    }\n\n    //\n    let elements = [];\n\n    // Retrieve thing\n    let currentThing = traverse.current.thing.get(element);\n    if (h.isNull(currentThing)) {\n        return null;\n    }\n    elements.push(currentThing);\n\n    // Retrieve properties\n    let propertyElements = traverse.children.properties.get(currentThing);\n    elements = elements.concat(propertyElements);\n\n    // Retrieve values\n    for (let p of propertyElements) {\n        let valueElements = traverse.children.values.get(p);\n        elements = elements.concat(valueElements);\n    }\n\n    // Assign type and id for all elements\n    for (let i of elements) {\n        i.setAttribute(\"data-record-type\", \"\");\n        i.setAttribute(\"data-record-id\", \"\");\n    }\n    return;\n}\n","import { krakenBaseHelpers as h } from \"../base/krakenBaseHelpers.js\";\n\nimport { krakenElementHelpers as eh } from \"./krakenElementHelpers.js\";\n\nimport { krakenElementThingInitHelpers as init } from \"./krakenElementThingInitHelpers.js\";\n\nimport { krakenElementThingTraverseHelpers as traverse } from \"./krakenElementThingTraverseHelpers.js\";\n\nimport { krakenElementThingPartHelpers as part } from \"./krakenElementThingPartHelpers.js\";\nimport { krakenElementThingPropertyHelpers as property } from \"./krakenElementThingPropertyHelpers.js\";\n\n\nimport { templateDB } from './krakenElementThingTemplateDatabase.js'\n\n\n\nexport const krakenElementThingRenderHelpers = {\n    render: renderElements,\n    renderProperty: _renderPropertyElement,\n    newValue: _newValueElement\n};\n\nfunction renderElements(element, record, conditions, TEMPLATEDB) {\n    /**\n     * Updates all elements with same type and id\n     * @param {Object} record\n     * @param {Object} conditions\n     * @returns {Object} The elements updated\n     *\n     */\n\n    let action = new h.classes.Action(\n        `Render elements ${record?.[\"@type\"]} ${record?.[\"@id\"]}`,\n    );\n\n    if (h.isNull(record)) {\n        action.setFailed(\"No record provided\");\n        return action;\n    }\n\n    element = element || document.body;\n\n    let thingElements = traverse.things.get(\n        element,\n        record[\"@type\"],\n        record[\"@id\"],\n    );\n\n    // Add given element if also meets conditions\n    if (\n        property.type.get(element) == \"thing\" &&\n        property.record_type.get(element) == record[\"@type\"] &&\n        property.record_id.get(element) == record[\"@id\"]\n    ) {\n        thingElements.push(element);\n    }\n\n    //\n    thingElements = eh.filter(thingElements, conditions);\n\n    //\n\n    if(thingElements.length == 0){\n        action.setFailed(\"No elements found\");\n        return action;\n    }\n\n    //\n    for (let t of thingElements) {\n        action.instrument = _renderThingElement(t, record, TEMPLATEDB);\n    }\n\n    // Render sub things\n    for (let k of Object.keys(record)) {\n        for (let v of h.toArray(record[k])) {\n            if (h.isNotNull(v?.[\"@type\"]) || h.isNotNull(v?.record_type)) {\n                action.instrument = renderElements(\n                    element,\n                    v,\n                    conditions,\n                    TEMPLATEDB,\n                );\n            }\n        }\n    }\n\n    //\n\n    action.setCompleted();\n\n    // Return\n    return action;\n}\n\nfunction _renderThingElement(element, value, TEMPLATEDB) {\n    /**\n     * Updates the element with the value\n     * @param {Object} element\n     * @param {Object} value\n     * @returns {Object} The element updated\n     */\n\n    let action = new h.classes.Action(\n        `Render elements ${value?.[\"@type\"]} ${value?.[\"@id\"]}`,\n    );\n\n    // Get current thing element\n    let thingElement = traverse.current.thing.get(element);\n\n    if (h.isNull(thingElement)) {\n        action.setFailed(\"No thing element found\");\n        return action;\n    }\n\n    // Create main element if missing\n    let propertyMainElement = part.main.get(thingElement);\n    if (h.isNull(propertyMainElement)) {\n        propertyMainElement = part.add(thingElement, \"main\", \"\");\n    }\n\n    // Set type and id\n    thingElement.setAttribute(\n        \"data-record-type\",\n        value?.[\"@type\"] || value?.record_type,\n    );\n    thingElement.setAttribute(\n        \"data-record-id\",\n        value?.[\"@id\"] || value?.record_id,\n    );\n\n    // Retrieve property elements\n    let propertyElements = traverse.children.properties.get(thingElement);\n\n    \n    // Render thing from template if not already on the document\n    let templateID = element.getAttribute(\"data-templateID\");\n    if (propertyElements.length == 0 && h.isNotNull(templateID)) {\n        let mainPart = part.main.get(thingElement);\n        let content = templateDB.get(templateID) //TEMPLATEDB?.[templateID] || \"\";\n        \n        content = h.template.get(content, value);\n        mainPart.innerHTML = content;\n        \n        init.init(mainPart, TEMPLATEDB);\n        propertyElements = traverse.children.properties.get(mainPart);\n    }\n\n    // Render individual properties\n    for (let p of propertyElements) {\n        action.instrument = _renderPropertyElement(p, value, null, TEMPLATEDB);\n    }\n\n    action.close()\n    return action;\n}\n\nfunction _renderPropertyElement(element, record, template, TEMPLATEDB) {\n    /**\n     * Updates a property element with new value\n     * @param {Object} element\n     * @param {Object} value\n     * @param {Object} template\n     * @returns {Object} The element updated\n     */\n\n\n    let action = new h.classes.Action(\n        `Render property element ${element.getAttribute(\"data-propertyID\")} ${record?.[\"@type\"]} ${record?.[\"@id\"]}`,\n    )\n    action.object = element\n    \n    // Error handling\n    if (h.isNull(element)) {\n        action.setFailed(\"No element provided\");\n        return action;\n    }\n    if (h.isNull(record)) {\n        action.setFailed(\"No record provided\");\n        return action\n    }\n\n    // Get value\n    let propertyID = element.getAttribute(\"data-propertyID\");\n    let value = h.dot.get(propertyID, record);\n    value = h.toArray(value)\n\n    // Get template\n    let templateID = element.getAttribute(\"data-templateID\");\n    template = templateDB.get(templateID) || ''//TEMPLATEDB?.[templateID] || template;\n    template = template.trim()\n    \n    // Create main element if missing\n    let propertyMainElement = part.main.get(element);\n    if (h.isNull(propertyMainElement)) {\n        propertyMainElement = part.add(element, \"main\", \"\");\n    }\n\n    // Clear existing values\n    propertyMainElement.innerHTML = \"\";\n\n    //\n    if (h.isNull(value)) {\n        action.close();\n        return action\n    }\n\n    // Generate value elements\n    \n    let item = null;\n\n    for (let v of value) {\n        let ve;\n\n        let newRecord = JSON.parse(JSON.stringify(record));\n        newRecord = h.dot.set(newRecord, propertyID, v);\n        \n        // Prepopulate template with values (in case there are {{ }} )\n        let content = h.template.get(template, newRecord);\n\n        // Generate new value element\n        ve = _newValueElement(newRecord, content, propertyID, TEMPLATEDB);\n        \n        // Render sub properties if any\n        traverse.children.properties\n            .get(ve)\n            .map((x) => _renderPropertyElement(x, newRecord, null, TEMPLATEDB));\n\n        // Add to element\n        if (h.isNotNull(item)) {\n            item.after(ve);\n        } else {\n            propertyMainElement.appendChild(ve);\n        }\n\n        //\n        item = ve;\n    }\n\n\n    action.close()\n    return action\n}\n\nfunction _newValueElement(record, template, propertyID, TEMPLATEDB) {\n    /**\n     * Creates a new value element\n     * @param {Object} value\n     * @param {Object} template\n     * @param {String} propertyID\n     * @returns {Object} The new value element\n     */\n\n    let value = h.dot.get(propertyID, record);\n    \n    let newValueElement = document.createElement(\"span\");\n    property.type.setAsValue(newValueElement);    \n    property.propertyID.set(newValueElement, propertyID)\n    property.valueHash.set(newValueElement, value)\n   \n\n \n    if (h.isNull(template)) {\n        newValueElement.textContent = value;\n    } else {\n        newValueElement.innerHTML = template;\n        let main = part.main.get(newValueElement);\n        if(main){\n            main.innerHTML = value;\n        }\n    }\n\n    init.init(newValueElement, TEMPLATEDB);\n\n    for (let t of traverse.children.things.get(newValueElement)) {\n        t.setAttribute(\"data-record-type\", value?.[\"@type\"]);\n        t.setAttribute(\"data-record-id\", value?.[\"@id\"]);\n    }\n\n    return newValueElement;\n}\n","\n\nlet DB = {}\n\nexport const templateDB = {\n    get: get,\n    set: set\n}\n\n\nfunction get(value){\n    return DB?.[value] || null\n}\n\nfunction set(value, template){\n    DB[value] = template\n}","import { krakenBaseHelpers  } from \"../base/krakenBaseHelpers.js\";\n\nimport { krakenElementHelpers  } from \"./krakenElementHelpers.js\";\n\nimport { krakenElementThingInitHelpers } from \"./krakenElementThingInitHelpers.js\";\n\nimport { krakenElementThingTraverseHelpers } from \"./krakenElementThingTraverseHelpers.js\";\n\nimport { krakenElementThingPartHelpers } from \"./krakenElementThingPartHelpers.js\";\nimport { krakenElementThingPropertyHelpers } from \"./krakenElementThingPropertyHelpers.js\";\nimport { krakenThingHelpers } from \"../thing/krakenThingHelpers.js\";\n\n\nimport { krakenElementThingRenderHelpers as renderSimple} from './krakenElementThingRenderHelpers.js'\n\nimport {  templateDB } from './krakenElementThingTemplateDatabase.js'\n\n\nconst h = {\n    base: krakenBaseHelpers,\n    thing: krakenThingHelpers,\n    dom: {\n        element: krakenElementHelpers,\n        thing: {\n            init: krakenElementThingInitHelpers,\n            part: krakenElementThingPartHelpers,\n            property: krakenElementThingPropertyHelpers,\n            traverse: krakenElementThingTraverseHelpers,\n            templateDB: templateDB\n        }\n    },\n    isNull: krakenBaseHelpers.isNull, \n    isNotNull: krakenBaseHelpers.isNotNull, \n    isArray: krakenBaseHelpers.isArray,\n    toArray: krakenBaseHelpers.toArray,\n    isObject: krakenBaseHelpers.isObject,\n    thing: krakenThingHelpers\n\n} \n\n\n\n/**\n *\n * Same as render but made to work with system records\n */\n\n\n\nexport const krakenElementThingRenderSystemHelpers = {\n    render: renderElements,\n};\n\nfunction renderElements(element, record, conditions, TEMPLATEDB) {\n    /**\n     * Updates all elements with same type and id\n     * @param {Object} record\n     * @param {Object} conditions\n     * @returns {Object} The elements updated\n     *\n     */\n\n    let action = new h.base.classes.Action(\n        `Render elements ${record?.[\"@type\"]} ${record?.[\"@id\"]}`,\n    );\n\n    if (h.isNull(record)) {\n        action.setFailed(\"No record provided\");\n        return action;\n    }\n\n    element = element || document.body;\n\n    let thingElements = h.dom.thing.traverse.things.get(\n        element,\n        record[\"@type\"],\n        record[\"@id\"],\n    );\n\n    // Add given element if also meets conditions\n    if (\n        h.dom.thing.property.type.get(element) == \"thing\" &&\n        h.dom.thing.property.record_type.get(element) == record[\"@type\"] &&\n        h.dom.thing.property.record_id.get(element) == record[\"@id\"]\n    ) {\n        thingElements.push(element);\n    }\n\n    //\n    thingElements = h.dom.element.filter(thingElements, conditions);\n\n    //\n    if(thingElements.length == 0){\n        action.setFailed(\"No elements found\");\n        return action;\n    }\n\n    //\n    for (let t of thingElements) {\n        action.instrument = _renderThingElement(t, record, TEMPLATEDB);\n    }\n\n    // Render sub things\n    for (let k of Object.keys(record)) {\n        for (let v of h.toArray(record[k])) {\n            if (h.isNotNull(v?.[\"@type\"]) || h.isNotNull(v?.record_type)) {\n                action.instrument = renderElements(\n                    element,\n                    v,\n                    conditions,\n                    TEMPLATEDB,\n                );\n            }\n        }\n    }\n\n    //\n    action.setCompleted();\n\n    // Return\n    return action;\n}\n\nfunction _renderThingElement(element, record, TEMPLATEDB) {\n    /**\n     * Updates the element with the value\n     * @param {Object} element\n     * @param {Object} value\n     * @returns {Object} The element updated\n     */\n\n    let action = new h.base.classes.Action(\n        `Render elements ${record?.[\"@type\"]} ${record?.[\"@id\"]}`,\n    );\n\n    // Get current thing element\n    let thingElement = h.dom.thing.traverse.current.thing.get(element);\n\n    if (h.isNull(thingElement)) {\n        action.setFailed(\"No thing element found\");\n        return action;\n    }\n\n    // Use custom element render mechanism if classList contains 'krElement'\n    if (element.classList.contains(\"krElement\")){\n        element.render()\n        action.setCompleted();\n        return action\n    }\n\n    \n    \n    // Set type and id\n    thingElement.setAttribute(\n        \"data-record-type\",\n        record?.[\"@type\"] || record?.record_type,\n    );\n    thingElement.setAttribute(\n        \"data-record-id\",\n        record?.[\"@id\"] || record?.record_id,\n    );\n\n    // Retrieve property elements\n    let propertyElements = h.dom.thing.traverse.children.properties.get(thingElement);\n\n    \n    // Render thing from stcratch if no propertyelements identified\n    let templateID = element.getAttribute(\"data-templateID\");\n    let template = TEMPLATEDB?.[templateID] || ''\n    if(propertyElements.length == 0 || (template && template.includes('{{'))){\n        _renderNonExistantThingElement(element, record, TEMPLATEDB)\n        propertyElements = h.dom.thing.traverse.children.properties.get(element);\n    } \n\n\n    // Render individual property elements\n    for (let p of propertyElements) {\n        h.dom.thing.property.record_type.set(p, record?.['@type'] || record.record_type)\n        h.dom.thing.property.record_id.set(p, record?.['@id'] || record.record_id)\n        action.instrument = _renderPropertyElement(p, record, null, TEMPLATEDB);\n    }\n\n    action.close()\n    return action;\n}\n\nfunction _renderNonExistantThingElement(element, record, TEMPLATEDB){\n    /**\n     * Render a thing element if not already on the document\n     */\n\n    \n    let templateID = element.getAttribute(\"data-templateID\");\n    let template = TEMPLATEDB?.[templateID] || ''\n    \n\n    // Get headings from record\n    let headingRecord = h.thing.record.get(record)\n    headingRecord = h.base.heading.addHeadings(headingRecord)\n    headingRecord = h.base.json.simplify(headingRecord)\n\n    \n    // Render template and set as content\n    let htmlContent = h.base.template.get(template, headingRecord);\n    element.innerHTML = htmlContent;\n\n\n    let mainPart = h.dom.thing.part.main.get(element)\n    if(h.isNull(mainPart)){ return }\n\n    let mainPartTemplateID = mainPart.getAttribute(\"data-templateID\");\n    let mainPartTemplate = TEMPLATEDB?.[mainPartTemplateID] || ''\n    \n\n    // Render template and set as content\n    mainPart.innerHTML = h.base.template.get(mainPartTemplate, headingRecord);\n    \n\n\n    \n    return\n}\n\n\n\n\nfunction _renderPropertyElement(element, record, template, TEMPLATEDB) {\n    /**\n     * Updates a property element with new value\n     * @param {Object} element\n     * @param {Object} value\n     * @param {Object} template\n     * @returns {Object} The element updated\n     */\n\n\n    let action = new h.base.classes.Action(\n        `Render property element ${element.getAttribute(\"data-propertyID\")} ${record?.[\"@type\"]} ${record?.[\"@id\"]}`,\n    )\n    action.object = element\n    \n    // Error handling\n    if (h.isNull(element)) {\n        action.setFailed(\"No element provided\");\n        return action;\n    }\n    if (h.isNull(record)) {\n        action.setFailed(\"No record provided\");\n        return action\n    }\n\n    // Use custom element render mechanism if classList contains 'krElement'\n    if (element.classList.contains(\"krElement\")){\n        element.render()\n        action.setCompleted();\n        return action\n    }\n\n\n    \n    // Get propertyValues (pvs)\n    let propertyID = element.getAttribute(\"data-propertyID\");\n\n    let pvs = h.thing.propertyValues.get(record, propertyID)\n    pvs = h.toArray(pvs)\n\n    // Get template \n    let templateID = element.getAttribute(\"data-templateID\");\n    template = TEMPLATEDB?.[templateID] \n\n    // Set template if not set\n    let values = h.dom.thing.traverse.children.values.get(element)\n    if(h.isNull(values)){\n        element.innerHTML = template\n    }\n\n    // Get value template\n    \n    let mainPart = h.dom.thing.part.main.get(element)\n    let mainPartTemplateID = mainPart.getAttribute(\"data-templateID\");\n    let valueTemplate = TEMPLATEDB?.[mainPartTemplateID] \n\n    // Render value template\n    \n    // Create main element if missing\n    let propertyMainElement = h.dom.thing.part.main.get(element);\n    if (h.isNull(propertyMainElement)) {\n        propertyMainElement = h.dom.thing.part.add(element, \"main\", \"\");\n    }\n\n    // Remove value elements no longer needed\n    let newPVSId = pvs.map(x => x[\"@id\"])\n    let currentPVSElements = h.dom.thing.traverse.children.values.get(element)\n    for(let e of currentPVSElements){\n\n        if(!newPVSId.includes(h.dom.element.getId(e))){\n            e.remove()\n        }\n    }\n\n    \n    // Return if no no elements to add\n    if (h.isNull(pvs)) {\n        action.close();\n        return action\n    }\n\n    // Generate value elements\n    \n    let item = null;\n\n    for (let pv of pvs) {\n\n        let ve = null\n        \n        // Find if element already exist and if so move it to current position\n        let pvElements = h.dom.thing.traverse.children.values.get(element, {'data-valueID': pv[\"@id\"]});\n        if(pvElements.length > 0){\n            ve = pvElements[0]\n        }\n\n        // Create new element if missing\n        if(h.isNull(ve)){\n                        \n            // Generate new value element\n            ve = _newValueElement(pv, record,  valueTemplate, propertyID, TEMPLATEDB);\n            \n            \n            // Render sub things if any\n            h.dom.thing.traverse.children.things\n                .get(ve)\n                .map((x) => _renderThingElement(x, pv?.object?.value, TEMPLATEDB));\n\n           \n        }\n\n        \n        // Add to element\n        if (h.isNotNull(item)) {\n            item.after(ve);\n        } else {\n            propertyMainElement.appendChild(ve);\n        }\n\n        //\n        item = ve;\n    }\n\n\n    action.close()\n    return action\n}\n\n\n\n\nfunction _newValueElement(pv, record, template, propertyID, TEMPLATEDB) {\n    /**\n     * Creates a new value element\n     * @param {Object} value\n     * @param {Object} template\n     * @param {String} propertyID\n     * @returns {Object} The new value element\n     */\n\n    let value = pv\n    if(h.isNotNull(pv?.object?.value)){\n        value = pv?.object?.value\n    }\n\n    if(h.isNotNull(value?._system)){\n        value = value?._system\n    }\n    \n    \n    let temp = document.createElement(\"span\");\n    temp.innerHTML = h.base.template.render(template, record)\n\n    // Get valueElement from template\n    let newValueElement = h.dom.thing.traverse.children.values.get(temp)?.[0] || temp\n\n    \n    \n    h.dom.thing.property.type.setAsValue(newValueElement);    \n    h.dom.thing.property.record_type.set(newValueElement, record?.['@type'] || record.record_type)\n    h.dom.thing.property.record_id.set(newValueElement, record?.['@id'] || record.record_id)\n\n    h.dom.thing.property.propertyID.set(newValueElement, propertyID)\n    h.dom.thing.property.valueID.set(newValueElement, pv?.['@id'])\n    h.dom.thing.property.valueHash.set(newValueElement, h.base.hash.get(value))\n\n\n    // If value not an object, assign to main\n    if (!h.thing.isThing(value)) {\n\n        let mainPart = h.dom.thing.part.main.get(newValueElement) || newValueElement;\n        mainPart.textContent = value\n        return newValueElement\n    }\n\n\n    // Render template and set as content\n    //newValueElement.innerHTML = h.base.template.get(template, record)\n\n    // Get value\n    let main = h.dom.thing.part.main.get(newValueElement) || newValueElement;\n\n    // if children, assign value\n    let c = h.dom.thing.traverse.children.things.get(main)\n\n    if(h.isNotNull(c)){\n        for(let t of c){\n            h.dom.thing.property.ref.set(t, value)\n        }\n    } else {\n        main.innerHTML = value;\n    }\n    \n    \n    return newValueElement;\n}\n","\n\nimport { krakenThingSystemHelpers  } from \"./src/krakenThingSystemHelpers.js\";\n\nimport { krakenThingPropertyValueHelpers  } from \"./src/krakenThingPropertyValueHelpers.js\";\n\nimport {krakenThingListHelpers} from './src/krakenThingListHelpers.js'\n\nimport { krakenThingActionExecutionHelpers } from './src/krakenThingActionExecutionHelpers.js'\n\nexport const krakenThingHelpers = {\n\n\n    pvh: krakenThingPropertyValueHelpers,\n    \n    list: krakenThingListHelpers,\n    pv: krakenThingPropertyValueHelpers,\n\n    // Base\n    isValid: krakenThingSystemHelpers.isValid,\n    isThing: krakenThingSystemHelpers.isThing,\n    toThing: krakenThingSystemHelpers.toThing,\n    toString: krakenThingSystemHelpers.toString,\n    toStringDetailed: krakenThingSystemHelpers.toStringDetailed,\n    toJSON: krakenThingSystemHelpers.toJSON,\n    isEmpty: krakenThingSystemHelpers.isEmpty,\n    keys: krakenThingSystemHelpers.keys,\n    clone: krakenThingSystemHelpers.clone,\n    copy: krakenThingSystemHelpers.copy,\n    hash: krakenThingSystemHelpers.hash,\n\n    // Constructor\n    new: krakenThingSystemHelpers.new,\n\n    // Properties\n    record_type: {\n        get: krakenThingSystemHelpers.record_type.get,\n        set: krakenThingSystemHelpers.record_type.set,\n    },\n    record_id: {\n        get: krakenThingSystemHelpers.record_id.get,\n        set: krakenThingSystemHelpers.record_id.set,\n    },\n    ref: {\n        get: krakenThingSystemHelpers.ref.get,\n        set: krakenThingSystemHelpers.ref.set,\n    },\n    value: {\n        get: krakenThingSystemHelpers.value.get,\n        set: krakenThingSystemHelpers.value.set,\n        add: krakenThingSystemHelpers.value.add,\n        replace: krakenThingSystemHelpers.value.replace,\n        delete: krakenThingSystemHelpers.value.delete,\n    },\n    values: {\n        get: krakenThingSystemHelpers.values.get,\n        set: krakenThingSystemHelpers.values.set,\n        add: krakenThingSystemHelpers.values.add,\n        replace: krakenThingSystemHelpers.values.replace,\n        delete: krakenThingSystemHelpers.values.delete,\n    },\n    property: {\n        get: krakenThingSystemHelpers.property.get,\n        set: krakenThingSystemHelpers.property.set,\n        add: krakenThingSystemHelpers.property.add,\n        replace: krakenThingSystemHelpers.property.replace,\n        delete: krakenThingSystemHelpers.property.delete,\n    },\n    propertyValue: {\n        get: krakenThingSystemHelpers.propertyValue.get,\n        set: krakenThingSystemHelpers.propertyValue.set,\n        add: krakenThingSystemHelpers.propertyValue.add,\n        replace: krakenThingSystemHelpers.propertyValue.replace,\n        delete: krakenThingSystemHelpers.propertyValue.delete,\n    },\n    propertyValues: {\n        get: krakenThingSystemHelpers.propertyValues.get,\n        set: krakenThingSystemHelpers.propertyValues.set,\n        add: krakenThingSystemHelpers.propertyValues.add,\n        replace: krakenThingSystemHelpers.propertyValues.replace,\n        delete: krakenThingSystemHelpers.propertyValues.delete,\n    },\n    record: {\n        get: krakenThingSystemHelpers.record.get,\n        set: krakenThingSystemHelpers.record.set,\n    },\n    htmlRecord: {\n        get:  krakenThingSystemHelpers.htmlRecord.get,\n    },\n    system: {\n        get: krakenThingSystemHelpers.system.get,\n        set: krakenThingSystemHelpers.system.set,\n    },\n\n    children: krakenThingSystemHelpers.children,\n    flatten: krakenThingSystemHelpers.flatten,\n\n    // Comparisons\n    isSame: krakenThingSystemHelpers.isSame,\n    isNotSame: krakenThingSystemHelpers.isNotSame,\n    eq: krakenThingSystemHelpers.eq,\n    ne: krakenThingSystemHelpers.ne,\n    lt: krakenThingSystemHelpers.lt,\n    gt: krakenThingSystemHelpers.gt,\n    validate: krakenThingSystemHelpers.validate,\n\n    // Operations\n    replace: krakenThingSystemHelpers.replace,\n    merge: krakenThingSystemHelpers.merge,\n    compile: krakenThingSystemHelpers.compile,\n    replaceChildren: krakenThingSystemHelpers.replaceChildren,\n\n    // Lists\n    length: krakenThingSystemHelpers.length,\n    get: krakenThingSystemHelpers.get,\n    push: krakenThingSystemHelpers.push,\n    delete: krakenThingSystemHelpers.delete,\n    dedupe: krakenThingSystemHelpers.dedupe,\n    sort: krakenThingSystemHelpers.sort,\n    filter: krakenThingSystemHelpers.filter,\n    mergeLists: krakenThingSystemHelpers.mergeLists,\n\n\n    // Execution\n    execute: krakenThingActionExecutionHelpers.execute,\n    \n};\n","import { krakenBaseHelpers as h } from \"../../base/krakenBaseHelpers.js\";\nimport { krakenThingPropertyValueSpecificationHelpers as pvs } from \"./krakenThingPropertyValueSpecificationHelpers.js\";\n\nimport { krakenThingPropertyValueHelpers as pvh } from \"./krakenThingPropertyValueHelpers.js\";\n\n\nimport { krakenHeadingsHelpers } from \"../../localization/krakenHeadingsHelpers.js\";\nimport { itemlist } from \"../../html/src/itemlist.js\";\n\n\n// todo: add fn to delete pv based on conditions\n\n// todo: add conditions to fn to filter only desired pv\n\n\n\nexport const krakenThingSystemHelpers = {\n    /**@constant\n     * @type {Object}\n     * @property {function} isValid - True if type, id and _propertyValues\n     * @property {function} isThing - True if type and id\n     * @property {function} toString - String representation\n     * @property {function} isEmpty - True if no properties (except type and id)\n     *\n     *\n     */\n\n    // Base\n    isValid: isValid,\n    isThing: isThing,\n    toThing: toThing,\n    toString: toString,\n    toStringDetailed: toStringDetailed,\n    toJSON: toJSON,\n    isEmpty: isEmpty,\n    keys: keys,\n    clone: clone,\n    copy: copy,\n    hash: hash,\n\n    // Constructor\n    new: getNew,\n\n    // Properties\n    record_type: {\n        get: getRecordType,\n        set: setRecordType,\n    },\n    record_id: {\n        get: getRecordId,\n        set: setRecordId,\n    },\n    ref: {\n        get: getRef,\n        set: setRef,\n    },\n    value: {\n        get: getValue,\n        set: setValue,\n        add: addValue,\n        replace: replace,\n        delete: deletePropertyValue,\n    },\n    values: {\n        get: getValues,\n        set: setValues,\n        add: addValues,\n        replace: replace,\n        delete: deletePropertyValue,\n    },\n    property: {\n        get: getValue,\n        set: addValue,\n        add: addValue,\n        replace: replaceValue,\n        delete: deletePropertyValue,\n    },\n    propertyValue: {\n        get: getPropertyValue,\n        set: setValues,\n        add: addPropertyValue,\n        replace: replacePropertyValue,\n        delete: deletePropertyValue,\n    },\n    propertyValues: {\n        get: getPropertyValues,\n        set: replacePropertyValue,\n        add: addPropertyValue,\n        replace: replacePropertyValue,\n        delete: deletePropertyValue,\n    },\n    record: {\n        get: getRecord,\n        set: setRecord,\n    },\n    htmlRecord: {\n        get: getHtmlRecord,\n    },\n    system: {\n        get: getSystem,\n        set: setSystem,\n    },\n\n    children: {\n        length: countChildren,\n        get: getChildren,\n        replaceWithRef: replaceChildrenWithRefRecord,\n        replaceWithRecord: replaceChildrenRefsWithRecord\n    },\n    flatten: flatten,\n\n    // Comparisons\n    isSame: isSame,\n    isNotSame: isNotSame,\n    eq: isEqual,\n    ne: isNotEqual,\n    lt: lt,\n    gt: gt,\n    validate: meetCondition,\n\n    // Operations\n    replace: replace,\n    merge: merge,\n    compile: compileRecord,\n\n    // Lists\n    length: length,\n    get: find,\n    push: push,\n    delete: pop,\n    dedupe: dedupe,\n    sort: sort,\n    filter: filter,\n    mergeLists: mergeLists,\n};\n\n\n\n// -----------------------------------------------------\n//  Setup \n// -----------------------------------------------------\n\n// Counter to avoid duplicate values\nlet POSITION = 0\n\n\n\n\n// -----------------------------------------------------\n//  Base\n// -----------------------------------------------------\n\nfunction isThing(value) {\n    /**\n     * Check if value is a thing (has type and id)\n     * @param {any} value\n     * @returns {boolean}\n     */\n\n    \n   \n    if (h.object.isValid(value) == false) {\n        return false;\n    }\n\n    if (h.isNull(getRecordType(value))) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isThingClass(value){\n    /**\n     * Check if value is a thing (has type and id)\n     * @param {any} value\n     * @returns {boolean}\n     * \n     */\n    return h.isNotNull(value?.instanceof) ? true : false\n    \n}\n\n\nfunction isValid(value) {\n    /**\n     * Check if value is valid system thing (type, and _propertyValues)\n     * @param {*} value\n     * @returns {boolean}\n     */\n    \n\n    try{\n        if (h.isNull(value)) {\n            return false;\n        }\n    \n        if (h.object.isValid(value) == false) {\n            return false;\n        }\n    \n        if (h.isNull(getRecordType(value))) {\n            return false;\n        }\n    \n        if (h.isNull(value?._version)) {\n            return false;\n        }\n    \n        return true;\n    } catch {\n        return false \n    }\n    \n}\n\nfunction isEmpty(thing) {\n    /**\n     * Returns true if thing is empty (except for type and id)\n     * @param {Object} thing\n     * @returns {Boolean}\n     */\n\n    for (let pv of h.toArray(thing?._propertyValues)) {\n        if (pv?.object?.propertyID.startsWith(\"@\")) {\n            continue;\n        }\n        if (h.isNotNull(pv?.object?.value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction toString(value) {\n    /**\n     * Returns a string representation of the thing(s)\n     * @param {Object} value\n     * @returns {String}\n     */\n    if (h.array.isArray(value)) {\n        return h.textTable(value, [ \"@type\",   \"@id\"]);\n    }\n\n    return `${value?.['@type'] || \"\"} ${value?.['@id'] || \"\"}` ;\n}\n\nfunction toStringDetailed(value) {\n    /**\n     * Returns a string representation of the thing(s)\n     * @param {Object} value\n     * @returns {String}\n     */\n\n    let content = toString(value) + \"\\n\" + pvh.toString(value?._propertyValues);\n\n    return content;\n}\n\nfunction toJSON(value) {\n    /**\n     * Returns a JSON representation of the thing(s)\n     * @param {Object} value\n     * @returns {String}\n     */\n\n    // replace previousItem and nextitem with ref\n    \n    \n    let record = JSON.parse(JSON.stringify(value));\n\n    record = h.json.simplify(record);\n\n    return record;\n}\n\nfunction toThing(record_or_record_type, record_id, metadata, db) {\n    /**\n     * Convert to thing if valid record\n     * @param {Object} record_or_record_type\n     * @param {String} record_id\n     * @param {Object} metadata\n     * @param {Object} db - db containing things to be used as value references\n     * @returns {Object}\n     *\n     */\n\n\n    // Skip if thing class object\n    if(isThingClass(record_or_record_type)){\n        return record_or_record_type\n    }\n\n    \n    // Populate with record if provided\n    if (isValid(record_or_record_type)) {\n       \n        // Change values to things if required \n        for(let pv of h.toArray(record_or_record_type?._propertyValues)){\n            \n            if(isThing(pv?.object?.value)){\n                pv.object.value = toThing(pv?.object?.value, null, metadata)\n                \n            }\n        }\n        \n        return record_or_record_type;\n        \n    } else if (isThing(record_or_record_type)) {\n       \n        let thing = getNew(record_or_record_type, record_id, metadata);\n        thing = setRecord(thing, record_or_record_type, metadata);\n        return thing;\n        \n    } else if (typeof record_or_record_type === \"string\"){\n        let thing = getNew(record_or_record_type, record_id, metadata, db)\n        return thing\n    }\n\n    throw new Error('Value provided is not thing');\n\n    \n}\n\nfunction hash(record){\n    /**\n     * Returns a hash of the record\n     * @param {Object} record\n     * @returns {String}\n     * \n     */\n\n\n    if(h.isNull(record)){\n        return null\n    }\n\n\n    // Clone pvs\n    let pvs = h.toArray(record?._propertyValues).map(x => pvh.clone(x))\n\n    // Convert values to ref if required\n    for(let pv of pvs){\n        if(isThing(pv.object.value)){\n            pv.object.value = getRef(pv.object.value)\n        }\n    }\n\n    // Calculate hash\n    let hash = h.hash.get(pvs)\n    \n    return hash\n    \n}\n\nfunction copy(value) {\n    /**\n     * copy a record\n     * @param {Object} record\n     * @returns {Object} The cloned record\n     */\n\n\n    // Error handling\n    if(h.isNull(value)){\n        return null\n    }\n\n\n    if(!isValid(value)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    //\n    let clone = getNew(value)\n\n\n\n    // Copy values\n    for(let i of h.toArray(value?._propertyValues) || []){\n        \n        clone._propertyValues.push(pvh.clone(i))\n        \n    }\n\n    clone = compileRecord(clone)\n\n    // Return\n    return clone;\n}\n\nfunction clone(value) {\n    /**\n     * Clones a record\n     * @param {Object} record\n     * @returns {Object} The cloned record\n     */\n\n\n    // Error handling\n    if(h.isNull(value)){\n        return null\n    }\n\n    \n    if(!isValid(value)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    //\n    let clone = getNew(value)\n\n    \n\n    // Copy values\n    for(let i of h.toArray(value?._propertyValues) || []){\n        if(i?.object?.propertyID != \"@id\"){\n            clone._propertyValues.push(pvh.clone(i))\n        }\n    }\n\n    clone = setRecordId(clone, h.uuid.new())\n    clone = compileRecord(clone)\n    \n    // Return\n    return clone;\n}\n\n// -----------------------------------------------------\n//  Constructor\n// -----------------------------------------------------\n\nfunction getNew(record_or_record_type, record_id, metadata, db) {\n    /**\n     * Creates a new thing thing\n     * @param {object|string} record_or_record_type - Either a thing or a thing type\n     * @param {string} record_id - The thing id\n     * @param {object} metadata - The metadata\n     * @returns {object} The new thing\n     */\n\n\n    // Error handling\n    if (h.isNull(record_or_record_type)) {\n        record_or_record_type = \"thing\";\n    }\n    if (h.isNull(record_id)) {\n        record_id = h.uuid.new()\n    }\n    \n\n    // Define new thing\n    let thing = {\n        \"@type\": getRecordType(record_or_record_type, record_id),\n        \"@id\": getRecordId(record_or_record_type, record_id),\n        _id: h.uuid.new(),\n        _version: \"2.0\",\n        _dbCollection: null,\n        _dbId: null,\n        _record_type: getRecordType(record_or_record_type, record_id),\n        _record_id: getRecordId(record_or_record_type, record_id),\n        _headings: [],\n        _refs: [],\n        _propertyValues: [\n        ],\n    };\n\n    // Add pv for type and id\n    thing = addValue(thing, '@type', thing?.['@type'])\n    thing = addValue(thing, '@id', thing?.['@id'])\n    \n    // Ensure @id is populated\n    thing[\"@id\"] = thing?.[\"@id\"] || h.uuid.new()\n    thing[\"_record_id\"] = thing[\"@id\"];\n\n    // Return\n    return thing;\n}\n\n// -----------------------------------------------------\n//  Properties\n// -----------------------------------------------------\n\nfunction getRecordType(record_or_record_type, record_id) {\n    /**\n     * Returns the record type of a thing\n     * @param {object|string} record_or_record_type - Either a thing or a thing type\n     * @param {string} record_id - The thing id\n     * @returns {string} The record type\n     */\n\n    \n    let value =\n        record_or_record_type?.[\"@type\"] ||\n        record_or_record_type?.record_type ||\n        record_or_record_type;\n\n    if (typeof value != \"string\") {\n        return null\n        \n    }\n\n    return value;\n}\n\nfunction setRecordType(thing, value, metadata) {\n    /**\n     * Sets the record type of a thing\n     * @param {object} thing - The thing\n     * @param {string} record_type - The record type\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    \n    thing[\"@type\"] = value;\n    thing = replacePropertyValue(thing, \"@type\", value, metadata);\n\n    return thing;\n}\n\nfunction getRecordId(record_or_record_type, record_id) {\n    /**\n     * Returns the thing id\n     * @param {object|string} record_or_record_type - Either a thing or a thing type\n     * @param {string} record_id - The thing id\n     * @returns {string} The thing id\n     */\n\n    let value =\n        record_or_record_type?.[\"@id\"] ||\n        record_or_record_type?.record_id ||\n        record_id;\n\n    if (typeof value != \"string\") {\n       return null\n        \n    }\n\n    return value;\n}\n\nfunction setRecordId(thing, value, metadata) {\n    /**\n     * Sets the record id of a thing\n     * @param {object} thing - The thing\n     * @param {string} record_type - The record type\n     * @param {object} metadata - The metadata\n     */\n\n    thing[\"@id\"] = value;\n    thing = replacePropertyValue(thing, \"@id\", value, metadata);\n    return thing;\n}\n\nfunction getRef(record_or_record_type, record_id) {\n    /**\n     * Returns the ref for a thing\n     * @param {object|string} record_or_record_type - Either a thing or a thing type\n     * @param {string} record_id - The thing id\n     * @returns {string} The ref\n     */\n\n    // Error handling\n    if(h.isNull(record_or_record_type)){\n        return null\n    }\n    \n    let ref = {\n        \"@type\": getRecordType(record_or_record_type, record_id),\n        \"@id\": getRecordId(record_or_record_type, record_id),\n    };\n\n    if (h.isNotNull(ref?.[\"@type\"]) && h.isNotNull(ref?.[\"@id\"])) {\n        return ref;\n    }\n\n    return null;\n}\n\nfunction setRef(thing, record_or_record_type, record_id) {\n    /**\n     * Setds the ref for a thing\n     * @param {object|string} record_or_record_type - Either a thing or a thing type\n     * @param {string} record_id - The thing id\n     * @returns {string} The ref\n     */\n\n    if(h.isNull(thing)){\n        thing = getNew(record_or_record_type, record_id)\n    }\n    \n    thing = setRecordType(thing, record_or_record_type, record_id);\n    thing = setRecordId(thing, record_or_record_type, record_id);\n\n    return thing;\n}\n\n\nfunction countChildren(thing, deep = true){\n    /**\n     * Counts the number of children\n     * @param {object} thing - The thing\n     * @param {boolean} deep - Whether to count children of children\n     * @returns {number} The number of children\n     * \n     */\n\n    return getChildren(thing, deep).length || 0\n    \n}\n\n\nfunction getChildren(thing, deep = true, parentThings=[]) {\n    /**\n     * Returns all child things in thing (as values)\n     * @param {object} thing\n     * @param {boolean} deep - If true, returns all children recursively\n     * @returns {object[]}\n     *\n     */\n\n\n    // Error handling\n    if(h.isNull(thing)){\n        return []\n    }\n    \n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    // Handle circular references\n    if(isThingClass(thing) && h.isNotNull(find(parentThings, thing))){\n        return []\n    }\n    parentThings.push(thing)\n    \n    //\n    let results = [];\n\n    for (let pv of h.toArray(thing?._propertyValues)) {\n        if (\n            (isThing(pv?.object?.value)) && \n            (pv?.object?.propertyID != 'previousItem') && \n            (pv?.object?.propertyID != \"nextItem\")\n        ) {\n            \n            results.push(pv?.object?.value);\n            if (deep == true) {\n                results = results.concat(getChildren(pv?.object?.value, deep, parentThings));\n            }\n        }\n    }\n\n    // \n    results = results.filter(x => h.isNotNull(x))\n\n    \n    \n    // Dedupe\n    results = dedupe(results);\n\n    return results;\n}\n\nfunction keys(thing) {\n    /**\n     * Returns all propertyIDs in thing\n     * @param {object} thing\n     * @returns {string[]}\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        return []\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n    \n    let propertyIDs = h\n        .toArray(thing?._propertyValues || [])\n        .map((pv) => pv?.object?.propertyID);\n\n    propertyIDs = [...new Set(propertyIDs)];\n\n    propertyIDs = propertyIDs.filter((x) => !x.startsWith(\"@\"));\n\n    propertyIDs = propertyIDs.sort();\n\n    return propertyIDs;\n}\n\n// -----------------------------------------------------\n//  Properties\n// -----------------------------------------------------\n\nfunction getValue(thing, propertyID, db) {\n    /**\n     * Returns the best value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} db - The database of things\n     * @returns {object|string|any} The value\n     */\n\n    \n    let values = getValues(thing, propertyID, db)\n\n    if(h.isNull(values) || values.length == 0){\n        return null\n    }\n    \n    let value = values[0]\n   \n    return value\n}\n\nfunction setValue(thing, propertyID, value, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return replacePropertyValue(thing, propertyID, value, metadata, null);\n}\n\nfunction addValue(thing, propertyID, value, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return addPropertyValue(thing, propertyID, value, metadata);\n}\n\n\nfunction replaceValue(thing, propertyID, value, metadata, replacee) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return replacePropertyValue(thing, propertyID, value, metadata, replacee);\n}\n\nfunction deleteValue(thing, propertyID, value, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return deletePropertyValue(thing, propertyID, value, metadata);\n}\n\nfunction getValues(thing, propertyID, db) {\n    /**\n     * Returns the best value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} db - The database of things\n     * @returns {object|string|any} The value\n     */\n\n    // If not system, return normal value \n    if(isThing(thing) && !isValid(thing)){\n        return h.dot.get(propertyID, thing)\n    }\n\n    \n    let pvs = getPropertyValues(thing, propertyID);\n\n    let values = pvs.map(x => x?.object?.value)\n\n    values = values.map((x) => (isThing(x) && isValid(x) && !isThingClass(x) ? getRecord(x) : x));\n\n   \n    return values;\n}\n\nfunction setValues(thing, propertyID, values, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return replacePropertyValue(thing, propertyID, values, metadata);\n}\n\nfunction addValues(thing, propertyID, values, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return addPropertyValue(thing, propertyID, values, metadata);\n}\n\nfunction replaceValues(thing, propertyID, values, metadata, replacee) {\n    /**\n     * Replace the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return replacePropertyValue(thing, propertyID, values, metadata, replacee);\n}\n\nfunction deleteValues(thing, propertyID, values, metadata) {\n    /**\n     * Sets the value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} value - The value\n     * @param {object} metadata - The metadata\n     * @returns {object} The thing\n     */\n\n    return deletePropertyValue(thing, propertyID, values, metadata);\n}\n\n// -----------------------------------------------------\n//  Property values\n// -----------------------------------------------------\n\nfunction getMaxPosition(thing, metadata) {\n    /**\n     * Returns the max position of a thing in its parent\n     * @param {object} thing - The thing\n     * @returns {number} The maxposition\n     */\n\n    let pvs = h.toArray(thing._propertyValues);\n\n    if (pvs.length == 0) {\n        return 0;\n    }\n\n    let maxItem = pvs.reduce((maxItem, item) =>\n        maxItem.metadata.position > item.metadata.position ? maxItem : item,\n    );\n\n    let position = maxItem.metadata.position + 1;\n\n    position = position > POSITION ? position : POSITION\n\n    POSITION = position + 1\n    \n    return position;\n}\n\nfunction getPropertyValue(thing, propertyID, db) {\n    /**\n     * Return the best property value of a property\n     * @param {object} thing - The thing\n     * @param {string} propertyID - The property id\n     * @param {object} db - The database of things\n     * @returns {object|string|any} The value\n     */\n\n    let values = getPropertyValues(thing, propertyID, db);\n\n    return values?.[0] || [];\n}\n\nfunction getPropertyValues(thing, propertyID, db) {\n    /**\n     * Returns all values for a propertyID\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {Object} db - array containing thing references\n     * @param {Array} db - The array of things\n     * @returns {Array} Array of propertyValues (in system format)\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        return []\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n    // Initialize value\n    let result;\n    let propertyPath = propertyID;\n    let pvs\n    \n    // Iterate through property path (element1[0].element2[1]...)\n    while (h.isNotNull(propertyPath)) {\n        // If value is array, assume first element\n        if (h.array.isArray(thing)) {\n            thing = thing[0] || [];\n        }\n\n        // If no values, return null\n        if (h.isNull(thing)) {\n            return [];\n        }\n\n        // Get latest thing from db (if db provided)\n        if (h.isNotNull(db) && isThing(thing)) {\n            thing = find(db, thing) || thing;\n        }\n\n        // Get first element of property path\n        let propertyIDElement = h.dot.propertyPath.getCurrentKey(propertyPath);\n        let position = h.dot.propertyPath.getCurrentPosition(propertyPath);\n        propertyPath = h.dot.propertyPath.getNextItems(propertyPath);\n\n        // Get pvs for propertyID\n        pvs = h.toArray(thing._propertyValues || []);\n\n        pvs = pvs.filter(pv => pv.object.propertyID == propertyIDElement)\n        \n        pvs = pvh.compile(pvs);\n\n        if(propertyIDElement == 'itemListElement'){\n            pvs.sort((a,b) => {\n                if((getValue(a?.object?.value, 'position') || 0 ) < (getValue(b?.object?.value, 'position')|| 0)){\n                    return -1\n                } else if ((getValue(a?.object?.value, 'position') || 0 ) < (getValue(b?.object?.value, 'position') || 0)){\n                    return 1\n    \n                } else {\n                    return 0\n                }\n            })\n        }\n        \n       \n\n        // Get values from pvs\n        result = pvs.map((pv) => pv?.object?.value);\n\n        \n        // Get position if one\n        if (h.isNotNull(position)) {\n            pvs=pvs?.[position] || null\n            result = result?.[position] || null;\n        }\n\n        // Set thing to result for next iteration\n        thing = result;\n    }\n\n    // To array\n    pvs = h.toArray(pvs);\n    \n    // Return\n    return pvs;\n}\n\nfunction replacePropertyValue(thing, propertyID, value, metadata, replacee, recompileFlag=true) {\n    /**\n     * Sets a value for a propertyID\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {string|Array|Object} value\n     * @returns {Object} The thing\n     *\n     */\n\n\n\n    // Handle dot notation\n\n    if(propertyID.includes('.') || propertyID.includes('[')){\n \n        let propertyPath = propertyID.split('.')\n        let newPropertyID = propertyPath[propertyPath.length -1]\n        let childThingPropertyPath = propertyPath.slice(0, -1).join('.')     \n        let pv = getPropertyValue(thing, childThingPropertyPath, null)\n\n        let newValue = replacePropertyValue(pv?.object?.value, newPropertyID, value, metadata, replacee, recompileFlag)\n\n        pv.object.value = newValue\n\n        if(recompileFlag==true){\n            thing = compileRecord(thing, newPropertyID)\n        }\n        \n        return thing\n    }\n    \n    \n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    // Initialize values\n    let values = h.toArray(value);\n    \n    metadata = metadata || {};\n    let position = getMaxPosition(thing, metadata) \n\n    // Convert values to thing if required\n    values = values.map((x) => (isThing(x) ? toThing(x, null, metadata) : x));\n\n    \n    // Convert value to ref if previousItem or nextItem\n    \n    if (propertyID == \"previousItem\" || propertyID == \"nextItem\") {\n        //values = values.map((x) => (isThing(x) ? getRef(x) : x));\n    }\n\n    // First element replaces previous (replace)\n    position += 1;\n    metadata = JSON.parse(JSON.stringify(metadata));\n    metadata.position = position;\n   \n    thing._propertyValues.push(\n        pvh.new.replace(propertyID, values[values.length - 1], metadata, replacee),\n    );\n\n    // Next elements are added (add)\n    let nextValues = values.slice(0, values.length - 1)\n    if(h.isNotNull(nextValues)){\n        thing = addPropertyValue(\n            thing,\n            propertyID,\n            nextValues,\n            metadata,\n        );\n    }\n   \n    // Recalculate normal record value\n    if(recompileFlag==true){\n        thing = compileRecord(thing, propertyID)\n    }\n    \n    // Return\n    return thing;\n}\n\nfunction addPropertyValue(thing, propertyID, value, metadata, recompileFlag=true) {\n    /**\n     * Adds a value for a propertyID\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {string|Array|Object} value\n     * @returns {Object} The thing\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    // Handle dot notation\n\n   \n    if(propertyID.includes('.') || propertyID.includes('[')){\n       \n        let propertyPath = propertyID.split('.')\n        let newPropertyID = propertyPath[propertyPath.length -1]\n        \n        let childThingPropertyPath = propertyPath.slice(0, -1).join('.')     \n        let pv = getPropertyValue(thing, childThingPropertyPath, null)\n\n        pv.object.value = addPropertyValue(pv?.object?.value, newPropertyID, value, metadata, recompileFlag)\n\n        if(recompileFlag==true){\n            thing = compileRecord(thing, newPropertyID)\n        }\n        \n        return thing\n\n    }\n\n    \n    \n    // Initialize values\n    let values = h.toArray(value);\n    metadata = metadata || {};\n\n    let position = getMaxPosition(thing, metadata) \n   \n    \n    thing._propertyValues = h.toArray(thing?._propertyValues)\n\n    // Convert values to thing if required\n    values = values.map((x) => (isThing(x) ? toThing(x, null, metadata) : x));\n\n    // Convert value to ref if previousItem or nextItem\n    if (propertyID == \"previousItem\" || propertyID == \"nextItem\") {\n        //values = values.map((x) => (isThing(x) ? getRef(x) : x));\n    }\n\n    // add values\n    for (let i = values.length - 1; i >= 0; i--) {\n        let v = values[i];\n        position += 1;\n        metadata = JSON.parse(JSON.stringify(metadata));\n        metadata.position = position;\n        let pv = pvh.new.add(propertyID, v, metadata)\n        thing._propertyValues.push(pv);\n    }\n\n    // Recalculate normal record value\n    if(recompileFlag==true){\n       thing = compileRecord(thing, propertyID)\n    }\n\n    return thing;\n}\n\nfunction deletePropertyValue(thing, propertyID, value, metadata, recompileFlag=true) {\n    /**\n     * Adds a value for a propertyID\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {string|Array|Object} value\n     * @returns {Object} The thing\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    // Handle dot notation\n\n    if(propertyID.includes('.') || propertyID.includes('[')){\n\n        let propertyPath = propertyID.split('.')\n        let newPropertyID = propertyPath[propertyPath.length -1]\n        let childThingPropertyPath = propertyPath.slice(0, -1).join('.')     \n        let pv = getPropertyValue(thing, childThingPropertyPath, null)\n        pv.object.value = deletePropertyValue(pv?.object?.value, newPropertyID, value, metadata, recompileFlag)\n\n        if(recompileFlag==true){\n            thing = compileRecord(thing, newPropertyID)\n        }\n        \n        return thing\n        \n    }\n    \n    // Initialize values\n    let values = h.toArray(value);\n    metadata = metadata || {};\n    let position = getMaxPosition(thing, metadata) \n    \n    thing._propertyValues = thing?._propertyValues || [];\n\n    // Convert values to thing if required\n    values = values.map((x) => (isThing(x) ? toThing(x, null, metadata) : x));\n\n    // Convert value to ref if previousItem or nextItem\n    if (propertyID == \"previousItem\" || propertyID == \"nextItem\") {\n       // values = values.map((x) => (isThing(x) ? getRef(x) : x));\n    }\n\n    // Handle case where no value provided (delete everything)\n    if(h.isNull(values)){\n        position += 1;\n        metadata = JSON.parse(JSON.stringify(metadata));\n        metadata.position = position;\n        thing._propertyValues.push(pvh.new.delete(propertyID, null, metadata));\n    }\n\n    \n    // add values\n    for (let v of values) {\n        position += 1;\n        metadata = JSON.parse(JSON.stringify(metadata));\n        metadata.position = position;\n        thing._propertyValues.push(pvh.new.delete(propertyID, v, metadata));\n    }\n\n    // Recalculate normal record value\n    if(recompileFlag==true){\n        thing = compileRecord(thing, propertyID)\n    }\n\n    return thing;\n}\n\n// -----------------------------------------------------\n//  Comment\n// -----------------------------------------------------\n\nfunction flatten(thing) {\n    /**\n     * Returns a flattened thing\n     * @param {Object} thing\n     * @returns {Array} Array of values in system format\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        return []\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    // Get record of thing class object\n    thing = thing?._systemRecord || thing\n    \n    let results = [thing];\n\n    // Get children\n    results = results.concat(getChildren(thing));\n\n  \n    // Replace children with refs\n    results = results.map((x) => replaceChildrenWithRefRecord(x));\n\n    // Sort\n    results = sort(results, '@id', 'asc')\n    results = sort(results, '@type', 'asc')\n\n    // Dedupe\n    results = dedupe(results);\n    // Return\n    return results;\n}\n\n// -----------------------------------------------------\n//  Comparisons\n// -----------------------------------------------------\n\nfunction isSame(thing1, thing2) {\n    /**\n     * Returns true if two things are the same type and id\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     */\n\n    // Error handling\n    if(h.isNull(thing1)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isThing(thing1)){\n        \n        return false\n    }\n\n    if(!isThing(thing2)){\n       \n        return false\n    }\n    \n    if (h.isNull(getRecordType(thing1))) {\n        return false;\n    }\n    if (h.isNull(getRecordId(thing1))) {\n        return false;\n    }\n\n    if (getRecordType(thing1) != getRecordType(thing2)) {\n        return false;\n    }\n    if (getRecordId(thing1) != getRecordId(thing2)) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isNotSame(thing1, thing2) {\n    /**\n     * Returns true if two things are not the same type and id\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     */\n\n    return !isSame(thing1, thing2);\n}\n\nfunction isEqual(thing1, thing2) {\n    /**\n     * Returns true if two things are exactly the same\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     */\n\n    if (h.isNull(thing1) && h.isNull(thing2)) {\n        return true;\n    }\n    if (h.isNull(thing1) && h.isNotNull(thing2)) {\n        return false;\n    }\n    if (h.isNotNull(thing1) && h.isNull(thing2)) {\n        return false;\n    }\n\n    // Ensure hash is populated\n    if(h.isNull(thing1?._hash)){\n        thing1._hash = hash(thing1)\n    }\n    if(h.isNull(thing2?._hash)){\n        thing2._hash = hash(thing2)\n    }\n\n\n    // Test equality \n    if(thing1._hash == thing2._hash){\n        return true\n    }\n\n    return false\n   \n}\n\nfunction isNotEqual(thing1, thing2) {\n    /**\n     * Returns true if two things are not exactly the same\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     */\n\n    return !isEqual(thing1, thing2);\n}\n\nfunction lt(thing1, thing2) {\n    /**\n     * Returns true if thing1 is less than thing2\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     */\n\n    // Error handling\n    if(h.isNull(thing1)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing1)){\n        throw new Error('Value provided is not thing');\n    }\n    \n    // Start with position if exist\n    if (h.isNotNull(thing1?.position) && h.isNull(thing2?.position)) {\n        return true;\n    }\n    if (h.isNull(thing1?.position) && h.isNotNull(thing2?.position)) {\n        return false;\n    }\n\n    if (h.isNotNull(thing1?.position) && h.isNotNull(thing2?.position)) {\n        if (thing1?.position < thing2?.position) {\n            return true;\n        }\n        if (thing1?.position > thing2?.position) {\n            return false;\n        }\n    }\n\n    // record type\n    if (getRecordType(thing1) < getRecordType(thing2)) {\n        return true;\n    }\n    if (getRecordType(thing1) > getRecordType(thing2)) {\n        return false;\n    }\n\n    // Record id\n    if (getRecordId(thing1) < getRecordId(thing2)) {\n        return true;\n    }\n    if (getRecordId(thing1) > getRecordId(thing2)) {\n        return false;\n    }\n\n    return false;\n}\n\nfunction gt(thing1, thing2) {\n    /**\n     * Returns true if thing1 is greater than thing2\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {boolean}\n     *\n     */\n    \n    // Error handling\n    if(h.isNull(thing1)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing1)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n    // Start with position if exist\n    if (h.isNotNull(thing1?.position) && h.isNull(thing2?.position)) {\n        return false;\n    }\n    if (h.isNull(thing1?.position) && h.isNotNull(thing2?.position)) {\n        return true;\n    }\n\n    if (h.isNotNull(thing1?.position) && h.isNotNull(thing2?.position)) {\n        if (thing1?.position < thing2?.position) {\n            return false;\n        }\n        if (thing1?.position > thing2?.position) {\n            return true;\n        }\n    }\n\n    // Record type\n    if (thing1.thing_type > thing2.thing_type) {\n        return true;\n    }\n    if (thing1.thing_type < thing2.thing_type) {\n        return false;\n    }\n\n    // Record id\n    if (thing1.record_id > thing2.record_id) {\n        return true;\n    }\n    if (thing1.record_id < thing2.record_id) {\n        return false;\n    }\n    return false;\n}\n\nfunction meetCondition(thing, conditions) {\n    /**\n     * Returns true if thing meets conditions\n     * @param {Object} thing\n     * @param {Object} conditions\n     * @returns {boolean}\n     *\n     */\n    //todo: error when condition is weird\n    return pvs.test(thing, conditions) || false;\n}\n\n// -----------------------------------------------------\n//  Record import export\n// -----------------------------------------------------\n\nfunction getHtmlRecord(thing){\n    /**\n     * Returns the record with headings\n     * @param {Object} thing\n     * @returns {Object}\n     * \n     */\n\n    let record = getRecord(thing)\n    let headings = getHeadings(thing)\n    record = { ...headings, ...record}\n\n    return record\n}\n\n\nfunction getRecord(thing, parentThings=[]) {\n    /**\n     * Returns a record from a thing without propertyValues\n     * @param {Object} thing\n     * @param {Array} parentThings list of parent things to avoid circular references\n     * @returns {Object}\n     *\n     */\n\n   \n    \n    // Handle arrays\n    if (h.isArray(thing)) {\n        return thing.map((x) => getRecord(x, parentThings));\n    }\n\n    // Error handling\n\n    if(h.isNull(thing)){\n        return {}\n    }\n\n\n    if(!isValid(thing) && isThing(thing)){\n        return thing\n    }\n\n    \n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n    if (h.isNull(thing?._propertyValues)) {\n        return null;\n    }\n\n    \n\n    // Check if thing in parentthing, if so return ref\n    if(h.isNotNull(find(parentThings,thing))){\n        return getRef(thing)\n    }\n    \n    // Add it self to list of parentThings\n    parentThings.push(thing);\n    \n    //\n    let record = {\n        \"@type\": getRecordType(thing),\n        \"@id\": getRecordId(thing),\n    };\n\n    // Get propertyIDs\n    let pIDs = keys(thing);\n\n    // Get values\n    for (let p of pIDs) {\n        let values = getValues(thing, p);\n\n        // Convert values to record if needed\n        let newValues = []\n        for(let v of values){\n            \n            if(isValid(v)){\n                v = getRecord(v, parentThings)\n            }\n            newValues.push(v)\n        }\n\n        \n        record[p] = newValues;\n    }\n    // Remove thing class objects\n    record = JSON.parse(JSON.stringify(record));\n    // Simplify thing\n    record = h.json.simplify(record);\n    \n    // Return\n\n    return record;\n}\n\nfunction setRecord(thing, record, metadata, db) {\n    /**\n     * Import a record\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {string|Array|Object} value\n     * @returns {Object} The thing\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    // Error handling\n    db = db || [];\n\n    if (h.isNull(record)) {\n        return thing;\n    }\n\n    if (isValid(record)) {\n        return setSystem(thing, record);\n    }\n\n    // Delete existing propertyValues\n    thing._propertyValues = []\n    \n    // Set values, recompile flag to off for performance\n    metadata = metadata || {}\n    metadata.position = metadata?.position || POSITION\n    POSITION += 1\n    for (let k of Object.keys(record)) {\n        if(!(k.startsWith('_'))){\n          \n            thing = replacePropertyValue(thing, k, record[k], metadata, null, false);\n            \n        }\n       \n    }\n\n\n    // Recompile\n    thing = compileRecord(thing, null)\n\n\n    return thing;\n}\n\nfunction getSystem(thing) {\n    /**\n     * Returns a system record from a thing\n     * @param {Object} thing\n     * @returns {Object}\n     */\n\n\n    // Error handling\n    if(h.isNull(thing)){\n        return null\n    }\n    if(!h.isValid(thing)){\n        throw new Error('Value provided is not thing')\n    }\n    \n    // Get record of thing class object\n    if(isThingClass(thing)){\n\n        return thing.system\n       \n    } \n    \n    \n    return thing;\n}\n\nfunction setSystem(thing, record) {\n    /**\n     * Import a system record, replacing existing values\n     * @param {Object} thing\n     * @param {String} propertyID\n     * @param {string|Array|Object} value\n     * @returns {Object} The thing\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    // Error handling\n    if(h.isNull(record?._propertyValues)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(record)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n    // Handle arrays\n    if (h.isArray(thing)) {\n        return thing.map((x) => getRecord(x));\n    }\n\n    // Error handling\n    if (!isValid(record)) {\n        return setRecord(thing, record);\n    }\n\n    // handle thing class object\n    if(isThingClass(thing)){\n        thing.system = record\n        return thing\n    }\n    \n    // Overwrite values\n    for (let k of Object.keys(record)) {\n        if (k.startsWith(\"_\")) {\n            thing[k] = record[k];\n        }\n    }\n    thing._propertyValues = thing?._propertyValues || [];\n\n    // Update values to things\n    for (let p of h.toArray(thing?._propertyValues)) {\n        if (isThing(p?.object?.value)) {\n            p.object.value = toThing(p?.object?.value);\n        }\n    }\n\n    // Recompile record\n    thing = compileRecord(thing);\n\n    return thing;\n}\n\n// -----------------------------------------------------\n//  Operations\n// -----------------------------------------------------\n\nfunction compileRecord(thing, propertyID, includeHeadings=false) {\n    /**\n     * Recompiles the values based on propertyValues\n     * @param {Object} thing\n     * @returns {Object}\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    let record = thing?._system || thing\n\n    record._propertyValues = record?._propertyValues || [];\n    // Define keys, if no key provided, uses all keys\n    let propertyIDs =[propertyID]\n    if (h.isNull(propertyIDs)) {\n        propertyIDs = keys(record)\n    }\n\n    \n    // Assign values\n    for(let p of propertyIDs){\n\n        let values = getValues(record, p)\n        let newValues = []\n        for(let v of values){\n\n            if(isValid(v)){\n                v = getRecord(v)\n            }\n            newValues.push(v)\n        }\n        record[p] = h.json.simplify(newValues);\n    \n    }\n    \n    //for (let propertyID of propertyIDs) {\n    //    let values = getValues(record, propertyID)\n    //    record[propertyID] = h.json.simplify(values)\n    //}\n\n    // Assign type and id\n    let pvs = record?._propertyValues || [];\n\n    let oldestPv\n\n    if(h.isNotNull(pvs)){\n        oldestPv = pvs.reduce((maxItem, item) => maxItem?.metadata?.createdDate > item?.metadata?.createdDate ? maxItem : item);\n    }\n\n    \n    record['@type'] = h.toArray(record?.[\"@type\"])?.[0] || null\n    record['@id'] = h.toArray(record?.[\"@id\"])?.[0] || null\n    record['_record_type'] = record?.[\"@type\"]\n    record['_record_id'] = record?.[\"@id\"]\n    record['_createdDate'] = oldestPv?.metadata?.createdDate\n    //record['_hash'] = hash(record)\n\n\n    \n    if(includeHeadings == true){\n        let headings = getHeadings(record)\n    \n        for(let k of Object.keys(headings)){\n            if(k.startsWith('_')){\n                    record[k] = headings[k]\n            }\n        }\n    }\n\n    \n\n    if(isThingClass(thing)){\n        thing.system = record\n    } else {\n        thing = record\n    }\n\n   \n    return thing\n    \n\n}\n\n\nfunction getHeadings(thing){\n    /**\n     * Returns the headings from a thing\n     * @param {Object} thing\n     * @returns {Object}\n     * \n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is null');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n\n    return h.heading.record.get(thing)\n   \n}\n\nfunction replaceChildrenWithRefRecord(thing) {\n    /**\n     * Replaces all children with ref records\n     * @param {Object} thing\n     * @returns {Object} The thing\n     */\n\n\n    \n    // Error handling\n    \n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n   //\n\n    for (let pv of h.toArray(thing?._propertyValues)) {\n        if (isValid(pv?.object?.value)) {\n            pv.object.value = getRef(pv?.object?.value);\n        }\n    }\n\n    thing = compileRecord(thing);\n    return thing;\n}\n\nfunction replaceChildrenRefsWithRecord(thing, records) {\n    /**\n     * Replaces all children refs with records from list\n     * @param {Object} thing\n     * @returns {Object} The thing\n     */\n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n    \n    //\n    for (let pv of h.toArray(thing?._propertyValues)) {\n        if (isThing(pv?.object?.value)) {\n            let dd =  find(records, pv?.object?.value) || pv.object.value\n            pv.object.value = dd\n\n            \n            if(pv.object.propertyID != 'previousItem' && pv.object.propertyID != 'nextItem'){\n                //let dd =  find(records, pv?.object?.value) || pv.object.value\n                //pv.object.value = dd\n            }\n        }\n    }\n\n    thing = compileRecord(thing);\n    return thing;\n}\n\n\n\nfunction replace(thing, oldValue, newValue) {\n    /**\n     * Replaces a value by another in a system thing\n     * @param {Object} thing\n     * @param {Object} oldValue\n     * @param {Object} newValue\n     * @returns {Object} The thing with modified values\n     */\n    \n\n    // Error handling\n    if(h.isNull(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    if(!isValid(thing)){\n        throw new Error('Value provided is not thing');\n    }\n\n    \n    \n    //\n    for (let pv of thing?._propertyValues || []) {\n        let value = pv?.object?.value;\n\n      \n        // Replace value if same \n        if(isThing(oldValue)){\n            if (isSame(oldValue, pv.object.value)) {\n                pv.object.value = newValue;\n            } \n        } else {\n            if (value === oldValue) {\n                pv.object.value = newValue;\n            }\n        }\n    }\n    \n\n    // Recurse on children\n    for (let t of getChildren(thing)) {\n        replace(t, oldValue, newValue);\n    }\n\n    return thing;\n}\n\nfunction merge(thing1, thing2) {\n    /**\n     * Merges two things, return new combined thing\n     * @param {Object} thing1\n     * @param {Object} thing2\n     * @returns {Object} The combined thing\n     */\n\n    // Error handling\n\n    if(!isValid(thing1) && isThing(thing1)){\n        thing1 = toThing(thing1)\n    }\n\n    if(!isValid(thing2) && isThing(thing2)){\n        thing2 = toThing(thing2)\n    }\n                \n    \n    if (!isValid(thing1)) {\n        throw new Error('thing1 is not a thing');\n    }\n    if (!isValid(thing2)) {\n        throw new Error('thing2 is not a thing');\n    }\n\n    if (!isSame(thing1, thing2)) {\n        return thing1;\n    }\n    \n    if (h.isNotNull(thing1?.id) && thing1.id == thing2.id) {\n        return thing1;\n    }\n\n    // Merge and dedupe\n    let pvs = pvh.concat(thing1?._propertyValues, thing2?._propertyValues);\n\n\n    // Reassign to new thing\n    thing1._propertyValues = pvs;\n\n    // Recompile\n    thing1 = compileRecord(thing1);\n\n    // Return\n    return thing1;\n}\n\n// -----------------------------------------------------\n//  Array\n// -----------------------------------------------------\n\nfunction length(things) {\n    // Error handling\n    if (h.isNull(things)) {\n        return 0;\n    }\n    things = h.toArray(things);\n\n    return things.length;\n}\n\nfunction find(things, record_or_record_type, record_id) {\n    /**\n     * Returns the first thing that matches type and id\n     * @param {Array} things to search from\n     * @param {Object|String} record_or_record_type\n     * @param {String} record_id\n     * @returns {Object} The thing\n     */\n\n    things = h.toArray(things)\n    let ref = getRef(record_or_record_type, record_id)\n\n    \n    let filteredRecords = things.filter(x => isSame(x, ref))\n   \n    let result = filteredRecords?.[0] || null;\n\n    return result;\n}\n\nfunction push(things, thing) {\n    /**\n     * Add a thing to array. If exists, merge the things\n     * @param {Array} things\n     * @param {Object} thing to add\n     * @returns {Array} The array with the thing added\n     */\n\n    \n    // Error handling\n    if (h.isNull(thing)) {\n        return things;\n    }\n    things = h.toArray(things);\n\n    // List handling\n    if (h.array.isArray(thing)) {\n        for(let x of thing){\n            things = push(things, x)\n        }\n        return things;\n    }\n\n    // Error\n    if (!isValid(thing)) {\n        throw new Error('thing is not a thing');\n    }\n    \n\n    // Retrieve same things already in array    \n    let currentRecords = things.filter(x => isSame(x, thing) )\n    \n    // Remove same things from array\n    for (let r of currentRecords) {\n        things = pop(things, r);\n    }\n\n    // Merge same things\n    for (let r of currentRecords) {\n        thing = merge(thing, r);\n    }\n\n    // Add  thing to array\n    things.push(thing);\n\n    // Return\n    return things;\n}\n\nfunction pop(things, thing_or_record_type, record_id) {\n    /**\n     * Remove a Thing from an array\n     * @param {Array} things\n     * @param {Object|String} thing_or_record_type\n     * @param {String} record_id\n     * @returns {Array} The array with the thing removed\n     */\n\n    let toDeleteRef = getRef(thing_or_record_type, record_id);\n\n    for (let i = 0; i < things.length; i++) {\n        if (isSame(things[i], toDeleteRef)) {\n            things = things.toSpliced(i, 1);\n        }\n    }\n    return things;\n}\n\nfunction dedupe(things) {\n    /**\n     * Removes duplicates from array\n     * @param {Array} things\n     * @returns {Array} The array without duplicates\n     */\n\n    \n    things = things.filter(x => h.isNotNull(x))\n    \n    // Ensure it is array\n    things = h.toArray(things);\n\n    // Error handling\n    if (h.isNull(things)) {\n        return [];\n    }\n\n    // Generate create list to not change original one\n    things = things.map((x) => x);\n\n    let results = [];\n    for (let r of things) {\n        results = push(results, r);\n    }\n    \n    return results;\n}\n\nfunction sort(things, sortBy, sortOrder) {\n    /**\n     * Sorts an array of things\n     * @param {Array} things\n     * @param {String} sortBy\n     * @param {String} sortOrder\n     * @returns {Array} The sorted array\n     */\n\n    // Ensure it is array\n    things = h.toArray(things);\n\n    // Error handling\n    if (h.isNull(things)) {\n        return null;\n    }\n\n    // Generate create list to not change original one\n    things = things.map((x) => x);\n\n    // Default sortBy and sortOrder\n    sortBy = sortBy || \"_createdDate\";\n    sortOrder = sortOrder || \"desc\";\n\n    // Sort function\n    function sortFunction(a, b) {\n        let aValue = getValue(a, sortBy);\n        let bValue = getValue(b, sortBy);\n\n        if (aValue == bValue) {\n            return 0;\n        }\n\n        if (sortOrder == \"asc\") {\n            return aValue < bValue ? -1 : 1;\n        }\n\n        if (sortOrder == \"desc\") {\n            return aValue > bValue ? -1 : 1;\n        }\n    }\n\n    things = things.sort(sortFunction);\n\n    return things;\n}\n\nfunction filter(things, conditions) {\n    /**\n     * Filters an array of things\n     * @param {Array} things\n     * @param {Object} conditions\n     * @returns {Array} The filtered array\n     * @example\n     */\n    // Ensure it is array\n    things = h.toArray(things);\n\n    // Error handling\n    if (h.isNull(things)) {\n        return [];\n    }\n\n    // Generate create list to not change original one\n    things = things.map((x) => x);\n\n    // Error handling\n    if (h.isNull(conditions)) {\n        return things;\n    }\n\n    // Filter list\n    let results = [];\n    for (let r of things) {\n        \n        if (meetCondition(r, conditions)) {\n\n            results.push(r);\n        }\n    }\n\n    return results;\n}\n\nfunction mergeLists(things1, things2){\n    /**\n     * Merges two lists of things\n     * @param {Array} things1\n     * @param {Array} things2\n     * @returns {Array} The merged list\n     */\n\n    things1 = h.toArray(things1);\n    things2 = h.toArray(things2);\n\n    things2.map((x) => push(things1, x));\n    \n    return things1;\n}","import { krakenBaseHelpers as h } from \"../../base/krakenBaseHelpers.js\";\n\n\nexport const krakenThingPropertyValueSpecificationHelpers = {\n    test: test,\n    testSimple: testRecord,\n    testDetailed: testDetailed,\n    tests: {\n        valueRequired: _testConditionValueRequired,\n        multipleValue: _testConditionMultipleValues,\n        valueMinLength: _testConditionValueMinLength,\n        valueMaxLength: _testConditionValueMaxLength,\n        valuePattern: _testConditionValuePattern,\n        minValue: _testConditionMinValue,\n        maxValue: _testConditionMaxValue,\n        stepValue: _testConditionStepValue,\n    },\n    new: {\n        eq: newEqCondition,\n        ne: newNeCondition,\n        lt: newLtCondition,\n        gt: newGtCondition,\n        minLength: newMinLengthCondition,\n        maxLength: newMaxLengthCondition,\n        required: newRequiredCondition,\n        contains: newContainsCondition,\n        notContains: newNotContainsCondition,\n    },\n    extract: {\n        fromThing: extractPvsFromThingRecord,\n        fromFilter: extractPvsFromFilterRecord,\n    },\n    export: {\n        toRecord: exportPvsToRecord,\n    },\n    record: getSampleRecord,\n};\n\n// -----------------------------------------------------\n//  Test - All\n// -----------------------------------------------------\nfunction test(record, pvs_or_filter_record, detailed = false) {\n    /**\n     * Test if a record meets the conditions\n     * @param {Object} record\n     * @param {Object} pvs_or_filter_record\n     * @param {boolean} returns detailed result if true\n     * @returns {boolean|Object} true/false if detailed=false, otherwise action object\n     *\n     */\n\n    let result = testDetailed(record, pvs_or_filter_record);\n\n    if (detailed == false) {\n        return result.isSuccess() || false;\n    } else {\n        return result;\n    }\n}\n\nfunction testDetailed(record, pvs_or_filter_record) {\n    /**\n     * Test if a record meets the conditions\n     * @param {Object} record\n     * @param {Object} pvs_or_filter_record\n     * @returns {Object} action object\n     */\n\n    // -----------------------------------------------------\n    //  Format and combine pvss\n    // -----------------------------------------------------\n\n    let pvs = extractPvsFromFilterRecord(pvs_or_filter_record);\n\n    // Add pvs from record itself (xxx-input)\n    pvs = pvs.concat(extractPvsFromThingRecord(record)); // Get pvs from record itself\n    // run tests\n    return testRecord(record, pvs);\n}\n\nfunction testRecord(record, pvs) {\n    // Takes in record and check if meet pvs\n\n    let name = `Test pvs conditions for record ${record?.[\"@type\"] || record?.record_type || \"\"} ${record?.[\"@id\"] || record?.record_id || \"\"}`;\n    let action = new h.classes.Action(name);\n    action.object = record;\n    action.instrument = [];\n    action.result = [];\n\n    // -----------------------------------------------------\n    //  Test pvs\n    // -----------------------------------------------------\n\n    for (let pv of h.toArray(pvs)) {\n        let propertyID = pv?.valueName || null;\n        if (h.isNotNull(propertyID)) {\n            let a = testPropertyValue(record, propertyID, pv);\n            action.instrument.push(a);\n        }\n    }\n\n    // Evaluate if tests are successful\n    let failedTests = action.instrument.filter((x) => x.isSuccess() == false);\n\n    if (failedTests.length == 0) {\n        action.setCompleted();\n    }\n\n    if (failedTests.length == 1) {\n        action.setFailed(failedTests[0].error);\n    }\n\n    if (failedTests.length > 1) {\n        action.setFailed(`${failedTests.length} tests failed`);\n    }\n\n    return action;\n}\n\nfunction testPropertyValue(record, propertyID, pvs) {\n    /**\n     * Test if record meet pvs condition\n     *\n     * properties followed by | treat next part as command\n     */\n\n    let name = `Test pvs conditions for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = record;\n    action.instrument = [];\n    action.result = [];\n\n    // Clean_up propertyID\n    propertyID = propertyID.replace(\"-input\", \"\");\n\n    // Retrieve values. If propertyCommandString exists\n    let values = h.stringOperation.execute(record, propertyID);\n\n    // Begin tests\n    let result;\n\n    // Test if multiple values allowed\n    result = _testConditionMultipleValues(pvs, propertyID, values);\n    action.instrument.push(result);\n\n    if (result.isSuccess() == false) {\n        action.setFailed();\n        return action;\n    }\n\n    // Test for null\n    \n    if (h.isNull(values)) {    \n        result = _testConditionValueNull(pvs, propertyID, values);\n        action.instrument.push(result);\n\n        if (result.isSuccess() == false) {\n            action.setFailed(result.error);\n            return action;\n        }\n    }\n\n    // Perform for each values\n    for (let value of h.toArray(values)) {\n        // Test if value is required - skip to next value if value null and not required\n        result = _testConditionValueRequired(pvs, propertyID, value);\n        action.instrument.push(result);\n        if (result.isSuccess() == true && h.isNull(value)) {\n            continue;\n        }\n\n        // test min max\n        result = _testConditionMinValue(pvs, propertyID, value);\n\n        action.instrument.push(_testConditionMinValue(pvs, propertyID, value));\n        action.instrument.push(_testConditionMaxValue(pvs, propertyID, value));\n        action.instrument.push(_testConditionStepValue(pvs, propertyID, value));\n\n        action.instrument.push(\n            _testConditionValueMinLength(pvs, propertyID, value),\n        );\n        action.instrument.push(\n            _testConditionValueMaxLength(pvs, propertyID, value),\n        );\n\n        action.instrument.push(\n            _testConditionValuePattern(pvs, propertyID, value),\n        );\n    }\n\n    // Evaluate if tests are successful\n    let failedTests = action.instrument.filter((x) => x.isSuccess() == false);\n\n    if (failedTests.length == 0) {\n        action.setCompleted();\n    }\n\n    if (failedTests.length == 1) {\n        action.setFailed(failedTests[0].error);\n    }\n\n    if (failedTests.length > 1) {\n        action.setFailed(`${failedTests.length} tests failed`);\n    }\n\n    return action;\n}\n\n// -----------------------------------------------------\n//  Test - Value required\n// -----------------------------------------------------\n\nfunction _testConditionValueRequired(pvs, propertyID, value) {\n    // Test valueRequired\n\n    let propertyConditionID = \"valueRequired\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if property condition not set\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return true if property condition not mandatory\n        if (propertyConditionValue == false) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if property condition is mandatory and no value\n        if (propertyConditionValue == true && h.isNull(value)) {\n            action.setFailed(\"Value required, but no value found\");\n            return action;\n        }\n\n        // Return true if property condition is mandatory and  value\n        if (propertyConditionValue == true && h.isNotNull(value)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\nfunction _testConditionMultipleValues(pvs, propertyID, values) {\n    // Test valueRequired\n\n    let propertyConditionID = \"multipleValues\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: values,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Set values to array\n        values = h.toArray(values);\n\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if no value\n        if (h.isNull(values)) {\n            action.setCompleted()\n            return action;\n        }\n\n        // Return false if property condition not set and multiple values (default false)\n        if (h.isNull(propertyConditionValue) && values.length > 1) {\n            action.setFailed(\n                \"Multiple values not permitted, found ${values.length}\",\n            );\n            return action;\n        }\n\n        // Return false if property condition false and multiple values (default false)\n        if (propertyConditionValue == false && values.length > 1) {\n            action.setFailed(\n                \"Multiple values not permitted, found ${values.length}\",\n            );\n            return action;\n        }\n\n        // Return true\n        action.setCompleted();\n        return action;\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\n// -----------------------------------------------------\n//  Test - Value min max step\n// -----------------------------------------------------\n\nfunction _testConditionMinValue(pvs, propertyID, value) {\n    let propertyConditionID = \"minValue\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if property condition not set\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if propertyCondition not a number\n        if (\n            h.number.isValid(propertyConditionValue) == false &&\n            h.date.isDate(propertyConditionValue) == false\n        ) {\n            action.setFailed(\"Value is not a number or date\");\n            return action;\n        }\n\n        // Return false if no value\n        if (h.isNull(value)) {\n            action.setFailed(\"No value\");\n            return action;\n        }\n\n        // Return false if value not a number\n        if (h.number.isValid(value) == false && h.date.isDate(value) == false) {\n            action.setFailed(\"Value is not a number\");\n            return action;\n        }\n\n        // Return true if value meet condition\n        if (value >= propertyConditionValue) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value (${value}) is less than minimum ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\nfunction _testConditionMaxValue(pvs, propertyID, value) {\n    let propertyConditionID = \"maxValue\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if property condition not set\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if property condition not a number\n\n        if (\n            h.number.isValid(propertyConditionValue) == false &&\n            h.date.isDate(propertyConditionValue) == false\n        ) {\n            action.setFailed(\"Constraint is not a date or number\");\n            return action;\n        }\n\n        // Return false if no value\n        if (h.isNull(value)) {\n            action.setFailed(\"No value\");\n            return action;\n        }\n\n        // Return false if value not a number\n        if (h.number.isValid(value) == false && h.date.isDate(value) == false) {\n            action.setFailed(\"Value is not a number\");\n\n            return action;\n        }\n\n        // Return true if value meet condition\n        if (value <= propertyConditionValue) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value (${value}) is greater than maximum ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\nfunction _testConditionStepValue(pvs, propertyID, value) {\n    let propertyConditionID = \"stepValue\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if property condition not set\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if property condition not a number\n        if (h.number.isValid(propertyConditionValue) == false) {\n            action.setFailed(\"Constraint is not a number\");\n            return action;\n        }\n\n        // Return true if property conditionis 0\n        if (propertyConditionValue == 0) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if no value\n        if (h.isNull(value)) {\n            action.setFailed(\"No value\");\n            return action;\n        }\n\n        // Return false if value not a number\n        if (h.number.isValid(value) == false) {\n            action.setFailed(\"Value is not a number\");\n            return action;\n        }\n\n        // Return true if value meet condition\n        if (value % propertyConditionValue == 0) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value length (${value}) is not in steps of ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\n// -----------------------------------------------------\n//  Test - value length\n// -----------------------------------------------------\n\nfunction _testConditionValueMinLength(pvs, propertyID, value) {\n    let propertyConditionID = \"valueMinLength\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if no property condition\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if not a number\n        if (h.number.isValid(propertyConditionValue) == false) {\n            action.setFailed(\"Constraint is not a number\");\n            return action;\n        }\n\n        // Return false if no value\n        if (h.isNull(value)) {\n            action.setFailed(\"No value\");\n            return action;\n        }\n\n        // Return true if value meet condition\n        if (value.length >= propertyConditionValue) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value length (${value}) is less than minimum ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\nfunction _testConditionValueMaxLength(pvs, propertyID, value) {\n    let propertyConditionID = \"valueMaxLength\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n        // Return true if property condition not set\n        if (h.isNull(propertyConditionValue)) {\n            action.setCompleted();\n            return action;\n        }\n\n        // Return false if property condition not a number\n        if (h.number.isValid(propertyConditionValue) == false) {\n            action.setFailed(\"Constraint is not a number\");\n            return action;\n        }\n\n        // Return false if no value\n        if (h.isNull(value)) {\n            action.setFailed(\"No value\");\n            return action;\n        }\n\n        // Return true if value meet condition\n        if (value.length <= propertyConditionValue) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value length (${value}) is greater than maximum ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\n// -----------------------------------------------------\n//  Test - Value pattern\n// -----------------------------------------------------\n\nfunction _testConditionValueNull(pvs, propertyID, value) {\n    /**\n     *\n     */\n    let propertyConditionID = \"valuePattern\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n\n    \n    \n    // Get propertyConditionValue\n    let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n\n    if(propertyConditionValue == 'null'){\n        propertyConditionValue = null\n    }\n\n        \n    // Return true if property condition null\n    if (h.isNull(propertyConditionValue) && h.isNull(value)) {\n        action.setCompleted();\n        return action;\n    }\n\n    if (h.isNull(propertyConditionValue) && h.isNotNull(value)) {\n        action.setFailed(\"Value is not null\");\n        return action;\n    }\n\n    action.setCompleted();\n    return action;\n}\n\nfunction _testConditionValuePattern(pvs, propertyID, value) {\n    let propertyConditionID = \"valuePattern\";\n    let name = `PropertyValue Condition Test ${propertyConditionID} for ${propertyID}`;\n    let action = new h.classes.Action(name);\n    action.object = {\n        \"@type\": \"PropertyValue\",\n        propertyID: propertyID,\n        value: value,\n    };\n    action.instrument = pvs;\n\n    try {\n        // Get propertyConditionValue\n        let propertyConditionValue = h.dot.get(propertyConditionID, pvs);\n       \n\n        // Return true if property condition not set\n        if(h.isNull(propertyConditionValue)){\n            action.setCompleted()\n            return action\n        }\n\n        // Redirect to null test if propertyCondition == 'null'\n        if (propertyConditionValue == 'null') {\n            return _testConditionValueNull(pvs, propertyID, value);\n        }\n\n\n        // Convert both to string\n        value = String(value)\n        propertyConditionValue = String(propertyConditionValue)\n        \n        // Run pattern test\n\n        // Return true if value meet condition\n        value = String(value);\n        const result = h.regex.test(value, propertyConditionValue);\n\n        // Return true if value meet condition\n        if (result == true) {\n            action.setCompleted();\n            return action;\n        } else {\n            action.setFailed(\n                `Value (${value}) does not meet pattern ${propertyConditionValue}`,\n            );\n            return action;\n        }\n\n        // Catch all\n        action.setFailed(\"Unknown property condition\");\n    } catch (error) {\n        action.setFailed(\"Error - \" + String(error));\n        return action;\n    }\n}\n\n// -----------------------------------------------------\n//  Extract\n// -----------------------------------------------------\n\nfunction extractPvsFromThingRecord(records) {\n    /**\n     * Retriev all pvs (xxx-input) from records\n     */\n    // Error handling\n    if (h.isNull(records)) {\n        return [];\n    }\n\n    // run on xxx-input\n    let pvs = [];\n\n    for (let record of h.toArray(records)) {\n        // If already pvsSpecification\n        if (record?.[\"@type\"] == \"PropertyValueSpecification\") {\n            pvs.push(record);\n            continue;\n        }\n\n        // If not, retrieve from record\n        for (let key of Object.keys(record)) {\n            if (key.includes(\"-input\")) {\n                let propertyID = key.replace(\"-input\", \"\");\n                let values = record?.[key];\n\n                for (let value of h.toArray(values)) {\n                    if (value?.[\"@type\"] != \"PropertyValueSpecification\") {\n                        value = getSpecificationsFromString(propertyID, value);\n                    }\n                    value.valueName =\n                        value.valueName || propertyID.replace(\"-input\", \"\");\n                    pvs.push(value);\n                }\n            }\n        }\n    }\n\n    // return pvs\n    return pvs;\n}\n\nfunction extractPvsFromFilterRecord(record) {\n    /**\n     * Transform normal json record representing conditions to PVS\n     * @param {Object} record\n     * @returns {Array}\n     *\n     */\n\n    // Error handling\n    if (h.isNull(record)) {\n        return [];\n    }\n    if (record?.[\"@type\"] == \"PropertyValueSpecification\") {\n        return record;\n    }\n\n    // Convert record to dot notation\n    let dotRecord = h.json.objectToDotNotation(record)\n\n    // Iterate through key values and get specifications\n    let pvs = [];\n    for (let k of Object.keys(dotRecord)) {\n        let content = dotRecord[k];\n\n        if (content == null) {\n            pvs.push(newNullCondition(k, \"\"));\n        }\n\n        let newPvs = h\n            .toArray(content)\n            .map((x) => getSpecificationsFromString(k, x));\n        pvs = pvs.concat(newPvs);\n    }\n\n    // Return PVS\n    return pvs;\n}\n\n// -----------------------------------------------------\n//  Comment\n// -----------------------------------------------------\n\nfunction getSpecificationsFromString(propertyID, inputContent) {\n    /**\n     * Get specifications from a string\n     * eq, ne, gt, lt, minLength, maxLength, required, contains, notContains\n     * @param {String} propertyID\n     * @param {String} inputContent\n     * @returns {Array}\n     */\n\n    // Error handling\n    //if(h.isNull(inputContent)){ return null }\n\n    // Get specifications\n    let specifications = [];\n\n    // Pre format\n    let content = String(inputContent).trim();\n\n    let condition;\n\n\n    \n    \n    // null\n    if (h.isNull(content)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newNullCondition(propertyID, value));\n    }\n\n    // eq\n    condition = \"eq \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newMinLengthCondition(propertyID, value));\n    }\n\n    // ne\n    condition = \"ne \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newNeCondition(propertyID, value));\n    }\n\n    // lt\n    condition = \"lt \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newLtCondition(propertyID, value));\n    }\n\n    // gt\n    condition = \"gt \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newGtCondition(propertyID, value));\n    }\n\n    // minLength\n    condition = \"minLength \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newMinLengthCondition(propertyID, value));\n    }\n\n    // maxLength\n    condition = \"maxLength \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newMaxLengthCondition(propertyID, value));\n    }\n\n    // required\n    condition = \"required \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newRequiredCondition(propertyID, value));\n    }\n\n    // contains\n    condition = \"contains \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newContainsCondition(propertyID, value));\n    }\n\n    // notContains\n    condition = \"notContains \";\n    if (content.startsWith(condition)) {\n        let value = content.split(condition)[1];\n        value = value.trim();\n        specifications.push(newNotContainsCondition(propertyID, value));\n    }\n\n    // Exception - if nothing found, treat as eq\n    if (specifications.length == 0 && h.isNotNull(content)) {\n        let value = content.trim();\n        specifications.push(newEqCondition(propertyID, value));\n    }\n\n    // Combine into one record\n    let record = {};\n    record[\"@type\"] = \"PropertyValueSpecification\";\n    record[\"@id\"] = String(crypto.randomUUID());\n\n    for (let r of specifications) {\n        for (let key of Object.keys(r)) {\n            if (h.isNotNull(r?.[key])) {\n                record[key] = r?.[key];\n            }\n        }\n    }\n\n    return record;\n}\n\n// -----------------------------------------------------\n//  Get new conditions\n// -----------------------------------------------------\n\nfunction newEqCondition(propertyID, value) {\n    /**\n     * Get new eq condition\n     * @param {String} propertyID\n     * @param {String} value\n     * @returns {Object}\n     */\n\n    value = h.number.toNumber(value) || value;\n\n    if (h.number.isValid(value) == true) {\n        let pv = {\n            \"@type\": \"PropertyValueSpecification\",\n            minValue: value,\n            maxValue: value,\n            valueName: propertyID,\n        };\n        return pv;\n    } else {\n        let pv = {\n            \"@type\": \"PropertyValueSpecification\",\n            valuePattern: `/^${value}$/`,\n            valueName: propertyID,\n        };\n        return pv;\n    }\n}\n\nfunction newNeCondition(propertyID, value) {\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valuePattern: `/^(?!${value}$).+/`,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newLtCondition(propertyID, value) {\n    // Convert value to number\n    try {\n        value = Number(value);\n    } catch {\n        return null;\n    }\n\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        maxValue: value,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newGtCondition(propertyID, value) {\n    // Convert value to number\n    try {\n        value = Number(value);\n    } catch {\n        return null;\n    }\n\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        minValue: value,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newMinLengthCondition(propertyID, value) {\n    // Convert value to number\n    try {\n        value = Number(value);\n    } catch {\n        return null;\n    }\n\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valueMinLength: value,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newMaxLengthCondition(propertyID, value) {\n    // Convert value to number\n    try {\n        value = Number(value);\n    } catch {\n        return null;\n    }\n\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valueMaxLength: value,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newRequiredCondition(propertyID, value) {\n    // Convert value to number\n    try {\n        value = Bool(value);\n    } catch {\n        return null;\n    }\n\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valueRequired: true,\n    };\n    return pv;\n}\n\nfunction newContainsCondition(propertyID, value) {\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valuePattern: `/${value}/`,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newNotContainsCondition(propertyID, value) {\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valuePattern: `/^(?!.*${value}).*$/`,\n        valueName: propertyID,\n    };\n    return pv;\n}\n\nfunction newNullCondition(propertyID, value) {\n    let pv = {\n        \"@type\": \"PropertyValueSpecification\",\n        valuePattern: \"null\",\n        valueName: propertyID,\n    };\n    return pv;\n}\n\n// -----------------------------------------------------\n//  Export\n// -----------------------------------------------------\n\nfunction exportPvsToRecord(pvs, record) {\n    /**\n     * Export pvs to record, or adds to record if provided\n     */\n    // Concatenate in one record\n    record = record || {};\n    for (let s of pvs) {\n        let k = s?.valueName;\n        if (h.isNotNull(k)) {\n            record[k] = record[k] || [];\n            record[k].push(s);\n        }\n    }\n\n    // Return pv\n    return record;\n}\n\n// -----------------------------------------------------\n//  Comment\n// -----------------------------------------------------\n\nfunction getSampleRecord() {\n    let record = {\n        \"@type\": \"PropertyValueSpecification\",\n        valueRequired: true,\n        multipleValues: false,\n        minValue: 0,\n        maxValue: 100,\n        valueMinLength: 0,\n        valueMaxLength: 100,\n        valuePattern: \"sss\",\n        stepValue: 0,\n        valueName: \"q\",\n    };\n\n    return record;\n}\n","\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\n\n\nimport { krakenThingPropertyValueSpecificationHelpers as pvs } from './krakenThingPropertyValueSpecificationHelpers.js'\n\n\n/**\n * Property Value schema:\n * {\n            \"@type\": \"replaceAction\",\n            \"@id\": \"6e89c8fc-fba7-4b36-a004-638dcdaa8714\",\n            \"actionStatus\": \"completedActionStatus\",\n            \"valid\": true,\n            \"object\": {\n                \"@type\": \"propertyValue\",\n                \"propertyID\": \"@context\",\n                \"value\": \"https://schema.org/\"\n            },\n            \"metadata\": {\n                \"createdDate\": \"2024-10-06T17:23:05.018Z\",\n                \"position\": 1\n            }\n        },\n */\n\n\nexport const krakenThingPropertyValueHelpers = {\n\n    isValid: isValid,\n    toString: toString,\n    hash: hash,\n\n    // Comparison\n    isSame: isSame,\n    isNotSame: isNotSame,\n    eq: eq,\n    ne: ne,\n    lt: lt,\n    gt: gt,\n\n    // Methods\n    clone: clone,\n    override: override,\n    compile: compile,\n    system: {\n        get: getSystemRecord\n    },\n\n    \n    // PVs\n    new: {\n        add: getAddPV,\n        delete: getDeletePV,\n        update: getUpdatePV,\n        replace: getReplacePV,\n    },\n    \n    sort: sort,\n    filter: filter,\n    dedupe: dedupe,\n    concat: concat\n\n}\n\nfunction isValid(record){\n\n\n    try {\n        if(h.isNull(getRecordType(record))) { return false}\n        if(h.isNull(getRecordId(record))) { return false }\n        if(h.isNull(record?.metadata)) { return false }\n        if(h.isNull(record?.object)) { return false }\n        if(h.isNull(record?.object?.propertyID)) { return false }\n        return true\n    } catch {\n        return false\n    }\n    \n}\n\n\nfunction toString(record){\n\n    if(h.array.isArray(record)){\n\n\n        let records = JSON.parse(JSON.stringify(record))\n\n        let validRecord = compile(records)\n\n\n        let newRecords = []\n        for(let r of records){\n            if(r.object.propertyID.startsWith('@')){\n                \n            } else \n            if(validRecord.includes(r)){\n                r.active = 'true'\n                newRecords.push(r)\n            } else {\n                r.active = 'false'\n                newRecords.push(r)\n            }\n        }\n        records = newRecords\n\n        records = sort(records, 'position')\n\n        \n        let keys = ['@type', 'object.propertyID', 'object.value', 'active', 'metadata.credibility', 'metadata.observationDate', 'metadata.createdDate', 'metadata.position']\n        let headings = ['@type', 'propertyID', 'value', 'active', 'credibility', 'observationDate', 'createdDate', 'position']\n        return h.textTable(records, keys, headings)\n    }\n\n    \n    return `${record?.[\"@type\"] || ''} ${record?.object?.propertyID || ''} ${record?.object?.value?.['@type'] || record?.object?.value || ''} ${record?.object?.value?.['@id'] || ''}`\n\n}\n\n\nfunction clone(value){\n    /**\n     * Clones a record\n     * @param {Object} record The record\n     * @returns {Object} The cloned record\n     * \n     */\n\n    let clone = {}\n\n    for(let k of Object.keys(value)){\n        clone[k] = value[k]\n    }\n    \n    \n    clone['@id'] = h.uuid.new()\n\n    clone.object =  {\n        \"@type\": \"PropertyValue\",\n        propertyID: value?.object?.propertyID,\n        value: value?.object?.value\n    }\n    clone.metadata =  JSON.parse(JSON.stringify(value.metadata))\n\n    \n    return clone \n    \n}\n\n\nfunction getRecordType(record_or_record_type, record_id){\n\n    let value = record_or_record_type?.['@type'] || record_or_record_type?.record_type || record_or_record_type\n    return value\n\n}\n\nfunction getRecordId(record_or_record_type, record_id){\n\n    let value = record_or_record_type?.['@id'] || record_or_record_type?.record_id || record_id\n    return value\n\n}\n\n\n\nfunction hash(pv){\n    /**\n     * Hash to compare if two PV are equivalent. For same, user @id\n     * @param {PropertyValueSpecification} pv\n     * @returns {string}\n     * Creates a has with everything but createdDate and position\n     * \n     *\n     *\n     */\n\n\n    \n    // Error handling\n    if(h.isNull(pv)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv)){\n        throw new Error('Value provided is not pv');\n    }\n\n    // Make copy of pv\n    let newPV = clone(pv)\n    \n\n    if(h.isNotNull(getRecordType(newPV.object.value))){\n        newPV.object.value = h.thing.ref.get(newPV.object.value)\n    }\n    \n    //let value = JSON.parse(JSON.stringify(pv))\n    let value = newPV\n    \n    // Remove createdDate and position\n    if(h.isNotNull(value?.metadata)){\n        delete value['@id']\n        delete value.metadata.createdDate\n        delete value.metadata.position\n    }\n\n    // Convert to string\n    let hashValue = h.hash.get(value)\n\n    // Return hash\n    return hashValue\n   \n}\n\nfunction isSame(pv1, pv2){\n    /**\n     * Compare two PV for same\n     * @param {PropertyValueSpecification} pv1\n     * @param {PropertyValueSpecification} pv2\n     * @returns {boolean}\n     */\n\n    if(h.isNull(pv1)){\n        return false\n    }\n\n    if(h.isNull(pv2)){\n        return false\n    }\n    \n    return hash(pv1) == hash(pv2)    \n}\n\nfunction isNotSame(pv1, pv2){\n    /**\n     * Compare two PV for not same\n     * @param {PropertyValueSpecification} pv1\n     * @param {PropertyValueSpecification} pv2\n     * @returns {boolean}\n     */\n    return hash(pv1) != hash(pv2)    \n}\n\n\nfunction eq(pv1, pv2){\n    /**\n     * Compare two PV for equal\n     * @param {PropertyValueSpecification} pv1\n     * @param {PropertyValueSpecification} pv2\n     * @returns {boolean}\n     */\n\n    // Error handling\n    if(h.isNull(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    // Error handling\n    if(h.isNull(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n\n    \n\n    // Error handling\n    if(h.isNull(pv1) && h.isNull(pv2)){ return true }\n    if(h.isNull(pv1) || h.isNull(pv2)){ return false }\n    \n    if(getRecordType(pv1) != getRecordType(pv2)) { return false }\n    if(getRecordId(pv1) != getRecordId(pv2)) { return false }\n\n    return true\n    \n}\n\n\n\nfunction ne(pv1, pv2){\n\n\n    // Error handling\n    if(h.isNull(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    // Error handling\n    if(h.isNull(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    \n    \n    // Error handling\n    if(h.isNull(pv1) && h.isNull(pv2)){ return false }\n    if(h.isNull(pv1) || h.isNull(pv2)){ return true }\n\n    if(getRecordType(pv1) != getRecordType(pv2)) { return true }\n\n    if(getRecordId(pv1) != getRecordId(pv2)) { return true }\n\n    return false\n\n}\n\n\nfunction gt(pv1, pv2){\n    /**\n     * Compare two PV for greater than\n     * @param {PropertyValueSpecification} pv1\n     * @param {PropertyValueSpecification} pv2\n     * @returns {boolean}\n     */\n\n    // Error handling\n    if(h.isNull(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n    if(h.isNull(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n\n    let propertyIDs = ['credibility', 'observationDate', 'createdDate', 'position']\n\n    let result \n    \n    for(let propertyID of propertyIDs){\n\n        \n        let value1 = pv1?.metadata?.[propertyID]\n        let value2 = pv2?.metadata?.[propertyID]\n\n\n        if(h.isNull(value1) && h.isNull(value2)) { continue }\n        if(h.isNull(value1) && h.isNotNull(value2)) { return false }\n        if(h.isNotNull(value1) && h.isNull(value2)) { return true }\n\n        if(propertyID.includes('Date')){\n\n\n            if(h.date.isValid(value1) && !h.date.isValid(value2)){\n                return true\n            }\n            if(!h.date.isValid(value1) && h.date.isValid(value2)){\n                return false\n            }\n            if(!h.date.isValid(value1) && !h.date.isValid(value2)){\n                continue\n            }\n            \n            if(h.date.gt(value1, value2) == true){ return true }\n            if(h.date.eq(value1, value2) == true){ continue }\n            if(h.date.lt(value1, value2) == false){ return false }\n            \n\n        } else {\n            result = value1 > value2 \n            if(value1 > value2){ return true }\n            if(value1 == value2){ continue }\n            if(value1 < value2){ return false }\n            \n        }\n       \n       \n    }\n    return false\n\n}\n\nfunction lt(pv1, pv2){\n    /**\n     * Compare two PV for less than\n     * @param {PropertyValueSpecification} pv1\n     * @param {PropertyValueSpecification} pv2\n     * @returns {boolean}\n     */\n\n    // Error handling\n    if(h.isNull(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n    // Error handling\n    if(h.isNull(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n\n\n\n    let propertyIDs = ['credibility', 'observationDate', 'createdDate', 'position']\n\n    let result\n\n    for(let propertyID of propertyIDs){\n\n        let value1 = pv1?.metadata?.[propertyID]\n        let value2 = pv2?.metadata?.[propertyID]\n\n        if(h.isNull(value1) && h.isNull(value2)) { continue }\n        if(h.isNull(value1) && h.isNotNull(value2)) { return true }\n        if(h.isNotNull(value1) && h.isNull(value2)) { return false }\n\n        if(propertyID.includes('Date')){\n\n\n            if(h.date.isValid(value1) && !h.date.isValid(value2)){\n                return false\n            }\n            if(!h.date.isValid(value1) && h.date.isValid(value2)){\n                return true\n            }\n            if(!h.date.isValid(value1) && !h.date.isValid(value2)){\n                continue\n            }\n            if(h.date.lt(value1, value2) == true) { return true }\n            if(h.date.eq(value1, value2) == true){ continue }\n            if(h.date.gt(value1, value2) == false){ return false }\n            \n            \n        } else {\n            if(value1 < value2){ return true }\n            if(value1 == value2){ continue }\n            if(value1 > value2){ return false }\n        }\n\n    }\n    return false\n\n}\n\n\nfunction create(actionType, propertyID, value, metadata, replacee){\n\n    /**\n     * Action types:\n     * - AddAction\n     * - ReplaceAction\n     * - DeleteAction\n     * - \n     */\n\n    \n    let record = {\n            \"@type\": actionType,\n            \"@id\": String(crypto.randomUUID()),\n            \"actionStatus\": \"CompletedActionStatus\",\n            \"valid\": true,\n            \"replacee\": replacee, \n            \"object\": {\n                \"@type\": \"PropertyValue\",\n                \"propertyID\": propertyID,\n                \"value\": value\n            },\n            \"metadata\": {\n                \"createdDate\": h.date.toDate(metadata?.createdDate || new Date()),\n                \"position\": h.number.toNumber(metadata?.position)  || null,\n                \"credibility\": h.number.toNumber(metadata?.credibility)  || null,\n                \"observationDate\": h.date.toDate(metadata?.observationDate)  || null,\n                \"validFrom\": h.date.toDate(metadata?.validFrom)  || null,\n                \"validThrough\": h.date.toDate(metadata?.validThrough)  || null,\n                \"object\": metadata?.object  || null,\n                \"instrument\": metadata?.instrument  || null,\n                \"agent\": metadata?.agent  || null\n            }\n        }\n\n    \n    // Clean up record\n    record = h.json.simplify(record)\n\n\n    \n    //throw new Error('Parameter is not a number!');\n    // Return record\n    return record\n    \n}\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\nfunction getSystemRecord(pv){\n\n    // Error handling\n    if(h.isNull(pv)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv)){\n        throw new Error('Value provided is not pv');\n    }\n\n    \n\n    // Handle class propertyValue\n    if(h.isNotNull(pv?._record)){\n\n        pv = pv._record\n        pv.metadata = pv.metadata?._record \n        \n    }\n\n    return pv\n    \n}\n\n\n\n// -----------------------------------------------------\n//  Compile value \n// -----------------------------------------------------\n\nfunction override(pv1, pv2){\n    /**\n     * Returns true if pv1 override pv2\n     */\n\n    // Error handling\n    if(pv1?.['@id'] == pv2?.['@id']){ \n        return false \n    }\n    \n    if(pv1?.object.propertyID != pv2?.object.propertyID){\n        return false\n    }\n\n    // Error handling\n    if(h.isNull(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv1)){\n        throw new Error('Value provided is not pv');\n    }\n\n    // Error handling\n    if(h.isNull(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n    if(!isValid(pv2)){\n        throw new Error('Value provided is not pv');\n    }\n\n\n\n    // Error handling\n    if(h.isNull(pv1) || h.isNull(pv2)){ return false }\n\n    // Get record type\n    let recordType1 = getRecordType(pv1).toLowerCase()\n    let recordType2 = getRecordType(pv2).toLowerCase()\n\n    \n    // Get record id\n    if(recordType1 == 'replaceaction'){\n        \n        let c1 = gt(pv1, pv2)\n        \n        let c2 = h.isNull(pv1?.replacee || null)\n        let c3 = pv1?.replacee == pv2?.object?.value         \n        let c4 = h.isNotNull(pv1?.object?.value?.['@type'] )\n        let c5 = h.isNotNull(pv1?.object?.value?.['@id'] )\n        let c6 =  pv1?.object?.value?.['@type'] == pv2?.object?.value?.['@type']\n        let c7 =  pv1?.object?.value?.['@id'] == pv2?.object?.value?.['@id']\n\n       \n        return c1 && (c2 || c3 || (c4 && c5 && c6 && c7))\n    }\n\n    if(recordType1 == 'deleteaction'){\n        \n        let c1 = gt(pv1, pv2)\n        let c2 = h.isNull(pv1?.object?.value)\n        let c3 = pv1?.object?.value == pv2?.object?.value\n        let c4 = h.isNotNull(pv1?.object?.value?.['@type'] )\n        let c5 = h.isNotNull(pv1?.object?.value?.['@id'] )\n        let c6 =  pv1?.object?.value?.['@type'] == pv2?.object?.value?.['@type']\n        let c7 =  pv1?.object?.value?.['@id'] == pv2?.object?.value?.['@id']\n\n        let result =  c1 && (c2 || c3 || (c4 && c5 && c6 && c7))\n        \n        return result\n    }\n    return false\n}\n\n\nfunction compile(pvs){\n    /**\n     * Returns the propertyValues that are valid\n     */\n\n    \n    // Sort by order \n    pvs = sort(pvs)\n\n    let results = pvs;\n\n    // Remove pvs canceled by this pv\n    for(let pv of pvs){\n        \n        results = results.filter(x => (override(pv, x) == false))\n        \n    }\n\n    // Remove delete pvs\n    results = results.filter(x => (getRecordType(x).toLowerCase() != 'deleteaction'))\n    \n    // Return results\n    return results\n\n}\n\n\nfunction getUpdatePV(propertyID, value, metadata){\n    return create('UpdateAction', propertyID, value, metadata)\n}\n\n\n\nfunction getAddPV(propertyID, value, metadata){\n    return create('AddAction', propertyID, value, metadata)\n}\n\n\n\nfunction getDeletePV(propertyID, value, metadata){\n    return create('DeleteAction', propertyID, value, metadata)\n}\n\n\n\nfunction getReplacePV(propertyID, value, metadata, replacee){\n    return create('ReplaceAction', propertyID, value, metadata, replacee)\n}\n\n\n\n\n// -----------------------------------------------------\n//  Array \n// -----------------------------------------------------\n\n\nfunction length(pvs){\n\n    pvs = h.toArray(pvs)\n    return pvs.length\n    \n}\n\nfunction pop(pvs, pv){\n\n    // Error handling\n    if(h.isNull(pvs)){ return [] }\n    if(h.isNull(pv)){ return pvs }\n\n    // copy list to avoid changing original\n    pvs = [...pvs]\n\n    \n    // Remove all pvs same as pvs\n    let i = 0\n    while(i < pvs.length -1){\n        if(isSame(pv, pvs[i])){\n            pvs.splice(i, 1)\n        }\n        i += 1\n    }\n    return pvs\n}\n  \nfunction search(pvs, pv){\n\n    // Error handling\n    if(h.isNull(pvs)){ return [] }\n    if(h.isNull(pv)){ return [] }\n    pvs = h.toArray(pvs)\n\n    // Return all pvs same as pv\n    let results = pvs.filter(x => (isSame(x, pv))) \n\n    // Return results\n    return results\n\n}\n\nfunction min(pvs){\n\n    // Error handling\n    pvs = h.toArray(pvs)\n    if(h.isNull(pvs)){ return null }\n\n    let pv = pvs.reduce((maxItem, item) => lt(maxItem, item) ? maxItem : item);\n\n    return pv\n\n    \n}\n\nfunction max(pvs){\n\n    // Error handling\n    pvs = h.toArray(pvs)\n    if(h.isNull(pvs)){ return null }\n\n    let pv = pvs.reduce((maxItem, item) => gt(maxItem, item) ? maxItem : item);\n\n    return pv\n}\n\n\nfunction sort(pvs){\n    /**\n     * Sort property values \n     */\n\n    // Ensure it is array\n    pvs = h.toArray(pvs)\n\n    // Error handling\n    if (h.isNull(pvs)) { return [] }\n\n    // Generate create list to not change original one\n     pvs = pvs.map(x => x)\n\n    // Sort function\n    function sortFn(v1, v2){\n        if(gt(v1, v2)){\n            return -1\n        } else if (lt(v1, v2)){\n            return 1\n        } else {\n            return 0\n        }\n\n    }\n\n    // Sort\n    let result = pvs.sort(sortFn)\n\n    // Return result    \n    return result\n}\n\nfunction meetCondition(pv, conditions){\n\n    return pvs.test(pv, conditions) || false\n    \n}\n\nfunction filter(pvs, condition){\n    /**\n     * Sort property values \n     */\n\n    // Ensure it is array\n    pvs = h.toArray(pvs)\n\n    // Error handling\n    if (h.isNull(pvs)) { return [] }\n\n    // Generate create list to not change original one\n    pvs = pvs.filter(x => meetCondition(x, condition))\n\n    // Sort\n    let result = sort(pvs)\n\n    // Return result    \n    return result\n}\n\n\nfunction concat(pvs1, pvs2){\n    /**\n     * Concatenates two property values\n     * @param {PropertyValueSpecification[]} pvs1\n     * @param {PropertyValueSpecification[]} pvs2\n     * @returns {PropertyValueSpecification[]}\n     */\n\n\n    pvs1 = h.toArray(pvs1)\n    pvs2 = h.toArray(pvs2)    \n\n    let pvs = pvs1.concat(pvs2)\n\n    return dedupe(pvs)\n    \n}\nfunction dedupe(pvs){\n    /**\n     * Dedupe property values if same and next to one another\n     */\n\n    // Ensure it is array\n    pvs = h.toArray(pvs)\n\n    // Error handling\n    if (h.isNull(pvs)) { return [] }\n\n    // Generate create list to not change original one\n     pvs = pvs.map(x => x)\n\n    // Dedupe on id\n    //pvs = [...new Set(pvs.map((x) => x?.['@id'] || x?.id ))];\n\n    \n    // Sort \n    pvs = sort(pvs)\n\n    \n    // Dedupe on isSame\n    let i = 0\n    while( i < pvs.length -2){\n        while(isSame(pvs?.[i], pvs?.[i+1])){\n            pvs = pvs.toSpliced(i+1, 1)\n        }        \n        i += 1\n    }\n\n\n    return pvs\n\n}\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nexport const krakenHeadingsHelpers = {\n    record: {\n        get: getHeadingRecord,\n    },\n    heading1: _getHeading1,\n    heading2: _getHeading2,\n    headingDescription: _getHeadingDescription,\n    headingDate: _getHeadingDate,\n    headingDateSince: _getHeadingDateSince,\n    headingDuration: _getHeadingDuration,\n    headingStatus: _getHeadingStatus,\n    headingImage: _getHeadingImage,\n    headingStars: _getHeadingStars,\n    headingTotal: _getHeadingTotal\n};\n\n\nfunction getHeadingRecord(record, locale){\n    /**\n     * Returns the heading record\n     * @param {Object} record\n     * @returns {Object} The heading record\n     */\n\n    // Array\n    if(h.isArray(record)){\n        return record.map(x => getHeadingRecord(x, locale))\n    }\n\n    // Handle non object\n    if(!h.isObject(record)){\n        return record\n    }\n\n    // return non thing\n    if(h.isNull(record?.['@type'])){\n        return record\n    }\n    \n    // Copy record\n    record = JSON.parse(JSON.stringify(record))\n    \n    record._heading1 =  _getHeading1(record)\n    record._heading2 =  _getHeading2(record)\n    record._headingDescription =  _getHeadingDescription(record)\n    record._headingDate =  _getHeadingDate(record)\n    record._headingDateSince =  _getHeadingDateSince(record)\n    record._headingStatus =  _getHeadingStatus(record)\n    record._headingImage = _getHeadingImage(record)\n    record._headingDuration = _getHeadingDuration(record)\n    record._headingStars = _getHeadingStars(record)\n\n    // Recurse for sub records\n    for(let k of Object.keys(record)){\n        record[k] = getHeadingRecord(record[k], locale)\n    }\n    \n    // Return\n    return record\n}\n\n\nfunction _getHeading1(record) {\n   \n    let heading = \"heading1\";\n    return _getHeadingX(record, heading);\n   \n}\n\n\nfunction _getHeading2(record) {\n    let heading = \"heading2\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDescription(record) {\n    let heading = \"headingDescription\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDate(record) {\n    let heading = \"headingDate\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingStatus(record) {\n    let heading = \"headingStatus\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingImage(record) {\n\n    if(h.isNotNull(record?.contentUrl)){\n        return record?.contentUrl\n    }\n    if(h.isNotNull(record?.image?.contentUrl)){\n        return record?.image?.contentUrl\n    }\n    return null\n\n}\n\nfunction _getHeadingDuration(record){\n\n    let date = _getHeadingDate(record) \n    let duration = h.date.human.duration(date)\n    return duration\n}\n\nfunction _getHeadingDateSince(record){\n\n    let date = _getHeadingDate(record) \n    let duration = h.date.human.duration(date)\n    return duration\n\n}\n\n\nfunction _getHeadingStars(record){\n\n    let score = record?.ratingValue\n\n    if(h.isNull(score)){ return null }\n    \n    let runningScore = 0\n\n    let content = ''\n    while(runningScore < score){\n        content += fullStar()\n        runningScore += 1\n    }\n\n\n    if(score > runningScore && score < runningScore +1){\n        content += halfStar()\n    }\n\n    while(runningScore < (score?.bestRating || 5) ){\n        content += emptyStar()\n        runningScore +=1\n    }\n\n    return content\n    \n}\n\n\nfunction _getHeadingTotal(record){\n\n    \n}\n\nfunction _getHeadingX(record, heading) {\n    /**\n     * Returns the heading for a given record\n     * @param {Object} record\n     * @param {String} heading\n     * @returns {String} The heading\n     */\n\n    let headingValue = ''\n    try {\n        \n        let record_type = record[\"@type\"];\n    \n        let config = getConfig();\n    \n        let headingPossibilities = config?.[record_type]?.[heading];\n\n        // Revert to thing if null\n        if (h.isNull(headingPossibilities) ) {\n            headingPossibilities = config?.[\"Thing\"]?.[heading];\n        }\n    \n        headingValue = null;\n\n\n        // if heading2, ensures that it is not equal to heading1\n        let comparaison = null\n        if(heading === \"heading2\"){\n            comparaison = _getHeadingX(record, \"heading1\")\n        }\n        \n        // Iterate through possibilities until a non null value is found\n        for (let hp of h.toArray(headingPossibilities)) {\n            headingValue = _getValue(record, heading, hp);\n    \n            if (h.isNotNull(headingValue)) {\n\n                if(heading == \"heading2\"){\n                    if (comparaison != headingValue){\n                        break\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n    } catch {\n        headingValue = record?.[\"@id\"]\n    }\n        \n    return headingValue;\n}\n\nfunction _getValue(record, heading, keys) {\n    keys = h.toArray(keys);\n\n    let values = [];\n    for (let k of keys) {\n        let value = record[k];\n\n        if (Array.isArray(value)) {\n            value = value[0];\n        }\n\n        // Handle object as values (when listItem references item for example )\n        if (value?.[\"@type\"]) {\n            value = _getHeadingX(value, \"heading1\");\n        }\n\n        if (value && value != null) {\n            values.push(value);\n        }\n    }\n\n    if (values.length == 0) {\n        return null;\n    }\n\n    // Assemble values\n    let headingValue = values.join(\" \");\n\n    return headingValue;\n}\n\nfunction getConfig() {\n    let record = {\n        Thing: {\n            heading1: [\"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"description\"],\n            headingDate: [\"\"],\n        },\n        Article: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        Action: {\n            heading1: [\"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        Person: {\n            heading1: [[\"givenName\", \"familyName\"], \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"title\", \"email\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        ListItem: {\n            heading1: [\"item\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"item\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        CreativeWork: {\n            heading1: [\"headline\", \"name\", \"url\", [\"@type\", \"@id\"]],\n            heading2: [\"author\", \"url\", [\"@type\", \"@id\"]],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        PostalAddress: {\n            heading1: [\"streetAddress\", \"name\", [\"@type\", \"@id\"]],\n            heading2: [\n                [\n                    \"addressLocality\",\n                    \"addressRegion\",\n                    \"postalCode\",\n                    \"addressCountry\",\n                ],\n            ],\n            headingDescription: [\"text\", \"name\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        QuantitativeValue: {\n            heading1: [[\"value\", \"unitText\"], [\"value\", \"unitCode\"], \"@id\"],\n        },\n        Order: {\n            \n        }\n    };\n\n    return record;\n}\n\n\n\nfunction fullStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n    </svg>`\n}\n\nfunction halfStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-half\" viewBox=\"0 0 16 16\">\n          <path d=\"M5.354 5.119 7.538.792A.52.52 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.54.54 0 0 1 16 6.32a.55.55 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.5.5 0 0 1-.146.05c-.342.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.172-.403.6.6 0 0 1 .085-.302.51.51 0 0 1 .37-.245zM8 12.027a.5.5 0 0 1 .232.056l3.686 1.894-.694-3.957a.56.56 0 0 1 .162-.505l2.907-2.77-4.052-.576a.53.53 0 0 1-.393-.288L8.001 2.223 8 2.226z\"/>\n        </svg>`\n}\n\n\n\nfunction emptyStar(){\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n  <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z\"/>\n</svg>`\n}\n\n\n","\nimport { actionMenu } from './actionMenu.js';\n\nimport { listitem } from './listitem.js';\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\nexport function itemlist(classlist, classlistListItem, content, prefixes=[]){\n\n\n    // Handle classes\n    let classes = h.toArray(classlist).join(' ')\n\n\n    //\n    prefixes = prefixes || [];\n\n    prefixes = prefixes.filter(x => x !== undefined && x !== null)\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n\n\n\n    let id = 'checkbox_' + String(crypto.randomUUID())\n    \n    let result = `\n\n        <div class=\"container checkboxParent ${classes || ''}\">\n\n            <div class=\"row border-top border-bottom align-items-center\" >\n\n\n                <div class=\"col col-auto \">\n                    <div class=\"form-check justify-content-center text-center\">\n                        <input \n                        id=\"${id}\"\n                        class=\"form-check-input\" \n                        type=\"checkbox\" \n                        value=\"\" \n                        onClick=\"console.log('click'); for(let i of this.closest('.checkboxParent').parentElement.querySelectorAll('.checkboxes')){i.checked = this.checked};\"\n                        >\n                    </div>\n\n                </div>\n                \n                <div class=\"col col-auto \">\n                    {{${prefix}name}}\n                </div>\n\n                <div class=\"col col-auto ms-auto\">\n                    ${actionMenu(prefixes)}\n                </div>\n\n            </div>\n\n        \n            {{ #itemListElement }}\n\n                \n                   ${ listitem(classlistListItem, content, prefixes.concat(['itemListElement'])) }\n              \n               \n            {{ /itemListElement }}\n\n                \n            <div class=\"row mt-2 mb-2 border-bottom align-items-center\">\n\n            </div>\n\n        </div>\n\n    \n    `\n\n\n\n    return result\n\n    \n    \n}","export function actionMenu(prefixes) {\n\n    prefixes = prefixes || [];\n\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n    \n        return `\n\n        \n        <!-- Potential action menu -->\n        <div class=\"dropdown\">\n        \n            <a \n            class=\"btn\" \n            href=\"#\" \n            role=\"button\" \n            data-bs-toggle=\"dropdown\" \n            aria-expanded=\"false\"\n            >\n            \n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\n                \n                    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0\"/>\n\n                </svg>\n                \n            </a>\n            \n            <ul class=\"dropdown-menu\">\n        \n                <form method=\"post\">\n\n                    <input type=\"hidden\" id=\"@type\" name=\"@type\" value=\"{{${prefix}@type}}\">\n                    <input type=\"hidden\" id=\"@id\" name=\"@id\" value=\"{{${prefix}@id}}\">\n                    \n                    {{#${prefix}potentialAction}}\n\n                        <li>\n    \n                            <button \n                            type=\"submit\" \n                            class=\"dropdown-item\" \n                            formaction=\"{{${prefix}potentialAction.url}}\">\n                            \n                                {{${prefix}potentialAction.name}}\n                            \n                            </button>\n                        \n                        </li>\n    \n                    {{/${prefix}potentialAction}}\n            \n\n                </form>\n\n\n                <li>\n                    <hr class=\"dropdown-divider\">\n                </li>\n\n\n                <form method=\"post\">\n\n                    <input type=\"hidden\" id=\"@type\" name=\"item.@type\" value=\"{{${prefix}item.@type}}\">\n                    <input type=\"hidden\" id=\"@id\" name=\"@id\" value=\"{{${prefix}item.@id}}\">\n                    \n                    {{#${prefix}item.potentialAction}}\n\n                        <li>\n    \n                            <button \n                            type=\"submit\" \n                            class=\"dropdown-item\" \n                            formaction=\"{{${prefix}item.potentialAction.url}}\">\n                            \n                                {{${prefix}item.potentialAction.name}}\n                            \n                            </button>\n                        \n                        </li>\n    \n                    {{/${prefix}item.potentialAction}}\n            \n                </form>\n                \n            </ul>\n                \n        </div>\n        \n        \n        `;\n}\n\n","\nimport { actionMenu } from './actionMenu.js';\nimport {line } from './line.js'\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\nexport function listitem(classlist, itemContent, prefixes){\n\n\n    // Handle classes\n    let classes = h.toArray(classlist).join(' ')\n    \n\n    // Handle prefixes\n    prefixes = prefixes || [];\n\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n    \n    itemContent = itemContent || line(prefixes.concat(['item']))\n    \n\n    return `\n\n        <div class=\" mt-1 mb-1 ${classes || ''}\">\n            <nav>\n                <div class=\"row d-flex align-items-center\">\n    \n                    <div class=\"col col-auto order-1 krSelected justify-content-center text-center\" >\n                        <div class=\"form-check justify-content-center text-center\">\n                            <input \n                            class=\"form-check-input checkboxes\"\n                            type=\"checkbox\" \n                            value=\"\" \n                            id=\"checked_{{${prefix}item.@type}}_{{${prefix}item.@id}}\" \n                            name=\"checked_{{${prefix}item.@type}}_{{${prefix}item.@id}}\" \n                            >\n                        </div>\n                    </div>\n    \n                        \n                    <div class=\"col col-auto order-2 order-sm-3 text-center\">\n                        <span class=\"krProperty\" data-propertyID=\"position\">\n                        {{ ${prefix}position }}\n                        </span>\n                    </div>\n                    \n    \n                     <div class=\"col col-12 col-sm-1 flex-sm-grow-1 order-5 order-sm-3\" >\n                        \n                        <span class=\"krProperty\" data-propertyID=\"item\">\n                        <main>\n                            ${itemContent}\n                        </main>\n                        </span>\n                    </div>\n                \n                    \n                    <div class=\"col col-auto order-3 order-sm-4 ms-auto text-end\">\n                        \n                        ${actionMenu(prefixes)}\n                    </div>\n        \n                </div> \n        \n                <div class=\"row\">\n        \n                    <div class=\"col col-sm-3\">\n                    </div>\n        \n                    <div class=\"col col-sm-3\">\n                    </div>\n        \n                    <div class=\"col col-sm-3\">\n                    </div>\n        \n                </div> \n            </nav>\n        </div>\n    \n    \n    `\n\n    \n}","import { actionMenu } from './actionMenu.js';\n\n\n\nexport function line( prefixes=[]) {\n\n    prefixes = prefixes || [];\n\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n\n    \n    return ` <div class=\"row align-items-center mt-2 mb-2\" >\n\n                <div class=\"col col-12 col-sm-6 col-md-2\">\n                   \n                    <img \n                    src=\"{{${prefix}_headingImage}}\" \n                    class=\"img-fluid\" \n                    alt{{${prefix}_headingDescription}} \n                         \n                    onerror=\"this.style.display='none'\"\n                    >\n                   \n                </div>\n                \n                <div class=\"col col-12 col-sm-6 col-md-10\">\n                    <div class=\"row d-flex\">\n                        <div class=\"col col-md-auto\">\n                            {{ ${prefix}_heading1 }}\n                        </div>\n            \n                        <div class=\"col col-12 col-md-auto text-truncate \">\n                            {{ ${prefix}_heading2 }}\n                        </div>\n            \n                        <div class=\"col col-12 col-md-auto \">\n                            {{ ${prefix}_headingStatus }}\n                        </div>\n            \n                        <div class=\"col col-12 col-md-auto text-truncate\">\n                            <a href=\"{{ ${prefix}url }}\">Link</a>\n                        </div>\n                    </div>\n                </div>\n            \n             </div>\n    `;\n}\n","import { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n//import { itemlist } from '../../html/src/itemlist.js';\n\nimport { krakenThingSystemHelpers as th } from \"./krakenThingSystemHelpers.js\";\n\nimport { krakenThingListItemHelpers as lih } from \"./krakenThingListItemHelpers.js\";\n\nexport const krakenThingListHelpers = {\n\n    isValid: isValid,\n    toString: toString,\n    toStringDetailed: toStringDetailed,\n    new: newItemList,\n    clone: clone,\n    isSame: isSame,\n    isEmpty, isEmpty, \n    toItemList: toItemList,\n    length: getLength,\n    insert: insert,\n    clear: clear,\n    delete: deleteItem,\n    filter: filter,\n    search: search,\n    last: getLastListItem,\n    listItems: {\n        get: getListItems,\n        set: setListItems,\n    },\n    items: {\n        get: getItems,\n        set: setItems,\n    },\n    \n}\n\n\nfunction isValid(things){\n    /**\n     * Checks if the thing is valid\n     * @param {Object} thing The thing\n     * @returns {Boolean} True if the thing is valid\n     */\n\n\n    \n\n    if(things?.['@type'] == 'ItemList'){\n        return true\n    }\n    \n\n    return false\n    \n}\n\nfunction toString(value){\n    /**\n     * Converts the thing to a string\n     * @param {Object} thing The thing\n     * @returns {String} The string\n     */\n\n    return `${value?.name} (${getLength(value)})`\n    \n}\n\nfunction toStringDetailed(value){\n    /**\n     * Converts the thing to a string\n     * @param {Object} thing The thing\n     * @returns {String} The string\n     */\n\n\n\n    let content = toString(value)\n    content += '\\n'\n    content += '-----------------------------------------------------'\n    content += '\\n'\n    for(let li of getListItems(value)){\n        content += lih.toString(li)\n        content += '\\n'\n    }\n    content += '-----------------------------------------------------'\n    return content\n\n}\n\nfunction isSame(thing1, thing2){\n    /**\n     * Checks if the two things are the same\n     * @param {Object} thing1 The first thing\n     * @param {Object} thing2 The second thing\n     * @returns {Boolean} True if the two things are the same\n     */\n\n    return \n    \n}\n\n// todo: add test to see if list is valid (no errands items)\n// todo: add fn to fix invalid lists (reorder items)\n// todo: add fn to resort list based on condittion\n\n\nfunction newItemList(){\n    /**\n     * Creates a new item list\n     * @returns {Object} The item list\n     *     \n     */\n\n    let itemList = {\n        '@type': \"ItemList\",\n        \"@id\": h.uuid.new(),\n        itemListElement: [],\n    }\n    return itemList\n    \n}\n\nfunction isEmpty(itemList){\n    /**\n     * Checks if the thing is null\n     * @param {Object} thing The thing\n     * @returns {Boolean} True if the thing is null\n     */\n\n    if(!isValid(itemList)){ return true }\n    if(getLength(itemList) == 0){ return true }\n    \n    \n    return false\n    \n}\n\nfunction clone(itemList){\n    /**\n     * Clones the thing\n     * @param {Object} thing The thing\n     * @returns {Object} The cloned thing\n     * \n     */\n\n    let listItems = getListItems(itemList)\n\n    \n    // Clone itemList\n    let clone = th.clone(itemList)\n\n    // Remove existing itemListelements\n    clone = th.value.delete(clone, 'itemListElement')\n\n    // Clone items\n    let newListItems = listItems.map(x => lih.clone(x))\n\n    // Insert back items\n    clone = insert(clone, newListItems)\n   \n    return clone\n}\n\nfunction toItemList(itemList){\n    /**\n     * Converts the thing to a list\n     * @param {Object} thing The thing\n     * @returns {Array} The list\n     */\n\n\n    if(isValid(itemList)){\n\n        \n        return itemList\n    }\n\n    let values = itemList\n    \n    let newItemList = newItemList()\n\n    newItemList = insert(newItemList, values)\n    \n    return newItemList\n    \n}\n\nfunction getLength(itemList){\n    /**\n     * Returns the length of the list\n     * @param {Object} itemList The list\n     * @returns {Number} The length of the list\n     * \n     */\n    if(!isValid(itemList)){ return 0 }\n\n    let length = getListItems(itemList).length || 0\n\n    \n    return length\n\n    \n}\n\nfunction getListItems(itemList){\n    /**\n     * Returns the items of the list\n     * @param {Object} itemList The list\n     * @returns {Array} The items of the list\n     */\n    \n    let listItems = th.propertyValues.get(itemList, 'itemListElement')\n\n    // Error handling\n    if(h.isNull(listItems)){ return [] }\n\n    // Retrieve value part of pv\n    listItems = h.toArray(listItems)\n\n    listItems = listItems.map(x => x?.object?.value)\n    \n    listItems = listItems.filter(x => !h.isNull(x))\n\n    listItems = lih.sort(listItems)\n    \n    return listItems\n    \n}\n\nfunction setListItems(itemList, values){\n    /**\n     * Returns the items of the list\n     * @param {Object} itemList The list\n     * @returns {Array} The items of the list\n     */\n\n\n    values = lih.toItemList(values)\n\n    itemList = clear(itemList)\n    \n    let listItems = getListItems(itemList)\n\n    listItems = th.toArray(listItems)\n\n    listItems = listItems.filter(x => !h.isNull(x))\n\n    listItems = sort(listItems)\n\n    return listItems\n\n}\n\n\n\nfunction getItems(itemList){\n    /**\n     * Returns the items of the list\n     * @param {Object} itemList The list\n     * @returns {Array} The items of the list\n     */\n\n    let listItems = getListItems(itemList)\n\n    \n    let items = listItems.map(x => th.values.get(x, 'item'))\n    \n    items = items.filter(x => !h.isNull(x))\n\n    return items\n    \n}\n\n\n\nfunction setItems(itemList, items){\n    /**\n     * Returns the items of the list\n     * @param {Object} itemList The list\n     * @returns {Array} The items of the list\n     */\n\n    return setListItems(itemList, items)\n\n}\n//todo: whybis this fn not used\nfunction lastListItem(itemList){\n    /**\n     * Returns the last list item\n     * @param {Object} itemList The list\n     * @returns {Object} The last list item\n     */\n\n    let lastListItem = lih.last(getListItems(itemList))\n\n    return lastListItem\n    \n}\n\n// -----------------------------------------------------\n//  Array \n// -----------------------------------------------------\n\n//todo: harmonize between search and find\nfunction search(itemList, conditions){\n    /**\n     * Searches an array of things\n     * @param {Array} things The things\n     * @param {Object} conditions The conditions\n     * @returns {Object} Te first listItem encountered\n     */\n\n    // Ensure it is array\n    let listItems = getListItems(itemList)\n    \n    return lih.filter(listItems, conditions)?.[0] || null\n    \n}\n\nfunction filter(itemList, conditions){\n    /**\n     * Returns a new itemList with filtered records\n     * @param {Array} things The things\n     * @param {Object} conditions The conditions\n     * @returns {Array} The filtered array\n     */\n\n    // Get listItems and filter\n    let listItems = getListItems(itemList)\n    listItems = lih.filter(listItems, conditions)\n\n    \n    // Clone,  Empty and refill itemList\n    let newItemList = clone(itemList)\n    newItemList = clear(newItemList)\n    newItemList = insert(newItemList, listItems)\n\n    return newItemList\n  \n    \n}\n\nfunction clear(itemList){\n    /**\n     * Returns itemList without listItems\n     * @param {Object} itemList The itemList    \n     * @returns {Object} The itemList without listItems\n     * \n     */\n\n    // Delete values\n    itemList = th.values.delete(itemList, 'itemListElement')\n\n    itemList = th.values.set(itemList, 'numberOfItems', 0)\n    \n    return itemList\n    \n}\n\nfunction getLastListItem(itemList){\n    /**\n     * Returns the last item of the list\n     * @param {Object} itemList The itemList\n     * @returns {Object} The last item of the list\n     * \n     */\n\n    return lih.last(getListItems(itemList)) || null\n    \n}\n\nfunction insert(itemList, listItem, position, metadata){\n    /**\n     * Inserts a record into an array\n     * @param {Array} things The array\n     * @param {Object} record The record\n     * @param {Number} position The position\n     * @returns {Array} The array\n     */\n\n    let listItems = getListItems(itemList)\n\n    // Default position to last item\n    let lastItemFlag = false\n    if(h.isNull(position)){\n        lastItemFlag = true\n        let lastListItem = lih.last(listItems)\n        position = lih.position.get(lastListItem) + 1 || 0\n       \n       \n    }\n\n\n    // if array \n    if(h.isArray(listItem)){\n        for(let item of listItem){\n            itemList = insert(itemList, item, position, metadata)\n            position += 1\n        }\n        return itemList\n    }\n\n    // init \n    listItem = th.toThing(listItem)\n    listItem = lih.toListItem(listItem)\n\n    // Get previous and next items\n    let previousItem\n    let nextItem\n    for(let l of listItems){\n        if(lih.position.get(l) == position -1 ){\n            previousItem = l\n        }\n        if(lih.position.get(l) == position ){\n            nextItem = l\n        }\n    }\n   \n\n    // Set new neighbours and position\n    listItem = lih.previousItem.set(listItem, th.ref.get(previousItem))\n    listItem = lih.nextItem.set(listItem, th.ref.get(nextItem))\n\n    listItem = lih.position.set(listItem, position)\n    \n    // Set position\n    if(h.isNotNull(previousItem)){\n        previousItem = lih.nextItem.set(previousItem, th.ref.get(listItem))\n    }\n    if(h.isNotNull(nextItem)){\n        nextItem = lih.previousItem.set(nextItem, th.ref.get(listItem))\n    }\n\n    // Add record to itemListElement\n    itemList = th.value.add(itemList, 'itemListElement', listItem, metadata)\n    \n    // Recalculate positions (skip if last item)\n   \n    if(lastItemFlag == false){\n      \n        itemList = resetPositions(itemList, listItem, position, metadata)\n    }\n    \n\n    //\n    itemList = th.values.set(itemList, 'numberOfItems', listItems.length +1)\n\n    \n    // return\n    return itemList\n    \n    \n}\n\nfunction deleteItem(itemList, listItem, metadata){\n    /**\n     * Deletes a record from an array\n     * @param {Array} things The array\n     * @param {Object} record The record\n     * @returns {Array} The array\n     */\n\n\n    console.log('xxx')\n    let listItems = getListItems(itemList)\n    \n    listItem = lih.search(listItems, th.ref.get(listItem))\n\n    \n    // Retrieve previous item\n    let previousItemRef = lih.previousItem.get(listItem)\n    let previousItem = lih.search(listItems, th.ref.get(previousItemRef))\n\n    // Retrieve next item\n    let nextItemRef = lih.nextItem.get(listItem)\n    let nextItem = lih.search(listItems, th.ref.get(nextItemRef))\n\n    \n    // Reassign neighbours of previous and next item\n    if(h.isNotNull(previousItem)){\n        previousItem = lih.nextItem.set(previousItem, nextItemRef)\n    }\n    if(h.isNotNull(nextItem)){\n        nextItem = lih.previousItem.set(nextItem, previousItemRef)\n        \n    }\n\n    // Remove neighbors from listItem\n    listItem = lih.neighbors.clear(listItem)\n\n    // Remove item from itemListElement\n    itemList = th.values.delete(itemList, 'itemListElement', th.ref.get(listItem), metadata)\n\n\n    // Reset positions\n    itemList = resetPositions(itemList, null, null, metadata)\n\n    \n    itemList = th.values.set(itemList, 'numberOfItems', listItems.length - 1)\n    \n    return itemList\n    \n    \n}\n\n\nfunction resetPositions(itemList, startingItem, startingPosition, metadata){\n    /**\n     * Resets the positions of the list items\n     * @param {Object} itemList The item list\n     * @returns {Object} The item list\n     */\n\n\n    //\n    let listItems = getListItems(itemList)\n    let position = startingPosition || 0\n\n   \n    // Get first item\n    let firstItem = startingItem || lih.first(getListItems(itemList))\n\n\n    if(h.isNull(firstItem)){\n        \n        return itemList\n    }\n    \n    // Reset positions\n    let temp = firstItem\n    let p = position\n    while (h.isNotNull(temp)){\n\n        temp = listItems.filter(x => x['@id'] == temp?.['@id'])?.[0] || null\n        \n        if(h.isNotNull(temp)){\n\n            if(lih.position.get(temp) != p){\n                lih.position.set(temp, p)\n            }\n            temp = lih.nextItem.get(temp)\n            p += 1\n        }\n    }\n    \n    \n    return itemList\n}","import { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\nimport { krakenThingSystemHelpers as th } from \"./krakenThingSystemHelpers.js\";\n\n\nexport const krakenThingListItemHelpers = {\n\n    isValid: isValid,\n    toString: toString,\n    new: newListItem,\n    clone: clone,\n    toListItem: toListItem,\n    isSame: isSame,\n    isEmpty, isEmpty, \n    filter: filter,\n    search: search,\n    first: getFirstItem,\n    last: getLastItem,\n    sort: sortListItems,\n    position: {\n        get: getPosition,\n        set: setPosition,\n    },\n    item: {\n        get: getItem,\n        set: setItem,\n    },\n    previousItem: {\n        get: getPreviousItem,\n        set: setPreviousItem,\n    },\n    nextItem: {\n        get: getNextItem,\n        set: setNextItem,\n    },\n    neighbors: {\n        set: setNeighbors,\n        clear: clearNeighbors,\n    }\n    \n    \n    \n}\n\n\nfunction isValid(value){\n    /**\n     * Checks if the thing is valid listitem\n     * @param {Object} thing The thing\n     * @returns {Boolean} True if the thing is valid\n     */\n\n  \n\n    if((value?.['@type'] || value?.record_type) == 'ListItem'){\n        return true\n    }\n    \n    return false\n    \n}\n\nfunction toString(value){\n    /**\n     * Converts the thing to a string\n     * @param {Object} thing The thing\n     * @returns {String} The string\n     */\n\n    return `Item ${value?.position} - ${value?._heading1} p:${value.previousItem?.['@id'] || 'NA'} n:${value.nextItem?.['@id'] || 'NA'} `\n    \n}\n\nfunction newListItem(position, item, metadata){\n    /**\n     * Creates a new list item\n     * @returns {Object} The item list\n     *     \n     */\n\n    let listItem = {\n        '@type': \"ListItem\",\n        \"@id\": h.uuid.new(),\n        item: item || null,\n        position: position || null\n    }\n\n    listItem = th.toThing(listItem, null, metadata)\n    \n    return listItem\n    \n}\n\nfunction toListItem(value, metadata){\n    /**\n     * Converts the thing to a list\n     * @param {Object} thing The thing\n     * @returns {Array} The list\n     */\n\n\n    value = th.toThing(value, null, metadata)\n    \n    if(isValid(value)){\n        return value\n    }\n    \n\n    let newValue = newListItem()\n    newValue = th.value.add(newValue, 'item', value)\n\n    return newValue\n\n}\n\nfunction isEmpty(value){\n    /**\n     * Checks if the thing is null\n     * @param {Object} thing The thing\n     * @returns {Boolean} True if the thing is null\n     */\n\n    if(!isValid(value)){ return true }\n\n    if(h.isNull(getItem(value))){ return true }\n    \n    return false\n    \n}\n\n\nfunction clone(value){\n    /**\n     * Clones the thing\n     * @param {Object} thing The thing\n     * @returns {Object} The cloned thing\n     * \n     */\n\n\n    let clone = th.clone(value)\n    clone = setItem(clone, getItem(value))\n\n    clone = th.value.delete(clone, 'position')\n    clone = th.value.delete(clone, 'previousItem')\n    clone = th.value.delete(clone, 'nextItem')\n\n    return clone\n    \n}\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nfunction getPosition(value){\n    /**\n     * Gets the position of the thing\n     * @param {Object} thing The thing\n     * @returns {Number} The position\n     */\n\n    if(!isValid(value)){ return null}\n\n    let result = th.value.get(value, 'position') \n\n    if(h.isNull(result)){\n        return null\n    }\n    return result\n    \n}\n\nfunction setPosition(value, position){\n    /**\n     * Gets the position of the thing\n     * @param {Object} thing The thing\n     * @returns {Number} The position\n     */\n\n    if(!isValid(value)){ throw new Error('Invalid thing') }\n    return th.value.set(value, 'position', position) \n\n}\n\nfunction getItem(value){\n    /**\n     * Gets the item from the list item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n\n    if(!isValid(value)){ return null}\n    \n    return th.value.get(value, 'item') || null\n}\n\nfunction setItem(value, item){\n    /**\n     * Gets the item from the list item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n\n    if(!isValid(value)){ return null}\n\n    return th.value.set(value, 'item', item) || null\n}\n\n\nfunction getPreviousItem(value, previousItem){\n    /**\n     * return previous item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n    if(!isValid(value)){ return null}\n\n    return th.value.get(value, 'previousItem') || null\n}\nfunction setPreviousItem(value, item){\n    /**\n     * Gets the item from the list item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n\n    if(!isValid(value)){ return null }\n\n    return th.value.set(value, 'previousItem', item) \n}\n\nfunction getNextItem(value){\n    /**\n     * return previous item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n    if(!isValid(value)){ return null}\n\n    return th.value.get(value, 'nextItem') || null\n}\nfunction setNextItem(value, item){\n    /**\n     * Gets the item from the list item\n     * @param {Object} listItem The list item\n     * @returns {Object} The item\n     */\n\n    if(!isValid(value)){ return null}\n\n    return th.value.set(value, 'nextItem', item) \n}\n\n\nfunction clearNeighbors(value){\n    /**\n     * Clears the neighbors of the thing\n     * @param {Object} thing The thing\n     * @returns {Object} The thing\n     */\n\n    let previousItem = getPreviousItem(value)\n    if(h.isNotNull(previousItem)){\n        th.value.set(value, 'previousItem', null)\n    }\n    let nextItem = getNextItem(value)\n    if(h.isNotNull(nextItem)){\n        value = th.value.set(value, 'nextItem', null)\n    }\n\n    return value\n    \n}\n\n\n\nfunction lt(record1, record2){\n    /**\n     * Checks if the first record is less than the second\n     * @param {Object} record1 The first record\n     * @param {Object} record2 The second record\n     * @returns {Boolean} True if the first record is less than the second\n     */\n\n    // Consider position first\n    if(h.isNull(record1?.position) && h.isNotNull(record2?.position)){\n        return false\n    }\n    if(h.isNotNull(record1?.position) && h.isNull(record2?.position)){\n        return true\n    }\n    \n    if(record1.position < record2.position){ return true }\n\n    // Consider presence absence of next items \n    if(h.isNull(record1?.previousItem) && h.isNotNull(record2?.previousItem)){\n        return true\n    }\n    if(h.isNotNull(record1?.previousItem) && h.isNull(record2?.previousItem)){\n        return false\n    }\n    \n    return false\n    \n}\n\nfunction gt(record1, record2){\n    /**\n     * Checks if the first record is greater than the second\n     * @param {Object} record1 The first record\n     * @param {Object} record2 The second record\n     * @returns {Boolean} True if the first record is greater than the second\n     */\n\n    // Consider position first\n    if(h.isNull(record1?.position) && h.isNotNull(record2?.position)){\n        return true\n    }\n    if(h.isNotNull(record1?.position) && h.isNull(record2?.position)){\n        return false\n    }\n\n    if(record1?.position > record2.position){ return true }\n    \n    // Consider presence absence of next items \n    if(h.isNull(record1?.nextItem) && h.isNotNull(record2?.nextItem)){\n        return true\n    }\n    if(h.isNotNull(record1?.nextItem) && h.isNull(record2?.nextItem)){\n        return false\n    }\n\n    \n    return false\n}\n\n\n\nfunction isSame(record1, record2){\n    /**\n     * Checks if two list items are the same\n     * @param {Object} record1 The first record\n     * @param {Object} record2 The second record\n     * @returns {Boolean} True if the two records are the same\n     */\n    return th.isSame(record1, record2)\n}\n\nfunction setNeighbors(record, previousRecord, nextRecord){\n    /**\n     * Sets the neighbors of a list item\n     * @param {Object} record The record\n     * @param {Object} previousRecord The previous record\n     * @param {Object} nextRecord The next record\n     * @returns {Object} The record\n     */\n\n    record.previousItem = th.ref.get(previousRecord)\n    record.nextItem = th.ref.get(nextRecord)\n    if(h.isNotNull(previousRecord)){\n        previousRecord.nextItem = th.ref.get(record)\n    }\n    if(h.isNotNull(nextRecord)){\n        nextRecord.previousItem = th.ref.get(record)\n    }\n\n    return record\n    \n}\n\n\n\n// -----------------------------------------------------\n//  Array \n// -----------------------------------------------------\n\n\nfunction search(values, conditions){\n    /**\n     * Searches an array of things\n     * @param {Array} things The things\n     * @param {Object} conditions The conditions\n     * @returns {Object} Te first listItem encountered\n     */\n\n    // Ensure it is array\n\n    \n    \n    return filter(values, conditions)?.[0] || null\n    \n}\n\nfunction filter(values, conditions){\n    /**\n     * Filters an array of things\n     * @param {Array} things The things\n     * @param {Object} conditions The conditions\n     * @returns {Array} The filtered array\n     */\n\n    values = h.toArray(values)\n    let results = th.filter(values, conditions)\n\n    \n    return results\n    \n}\n\n\nfunction sortListItems(values){\n    /**\n     * Sorts an array of things\n     * @param {Array} things\n     * @param {String} sortBy\n     * @param {String} sortOrder\n     */\n\n  \n    values = h.toArray(values)\n    values = h.toArray(values).sort(function(a, b){\n        if(lt(a, b)){ return -1 }\n        if(gt(a, b)){ return 1 }\n        return 0\n    })\n    \n    return values\n    \n}\n\nfunction getFirstItem(values){\n    /**\n     * Gets the first item of a list\n     * @param {Object} itemList The list\n     * @returns {Object} The first item\n     */\n\n    values = h.toArray(values)\n    \n    return search(values, {'position': 0}) ||  search(values, {'previousItem': null}) || null\n    \n}\n\nfunction getLastItem(values){\n    /**\n     * Gets the last item of a list\n     * @param {Object} itemList The list\n     * @returns {Object} The first item\n     */\n\n    \n    values = h.toArray(values)\n\n   \n    let maxItem = null\n    for(let i of values){\n        if(!maxItem || getPosition(i) > getPosition(maxItem)){\n            maxItem = i\n        }\n    }\n    return maxItem || null\n    \n    let conditions = {'nextItem': null}\n    let results = search(values,conditions) || null\n    return results\n\n}\n","\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\nimport { krakenThingSystemHelpers as th } from \"./krakenThingSystemHelpers.js\";\n\nimport { krakenThingPropertyValueSpecificationHelpers as psh } from './krakenThingPropertyValueSpecificationHelpers.js'\n\nimport { krakenThingListHelpers as lh} from './krakenThingListHelpers.js'\n\nexport const krakenThingActionExecutionHelpers = {\n\n    valid: checkValidity,\n    execute: executePotentialAction\n    \n}\n\n\n\nfunction executePotentialAction(action){\n    /**\n     * Executes an action\n     * \n     */\n\n\n    // Check if action is system record\n    let isSystemRecordFlag = th.isValid(action)\n\n    action = th.toThing(action)\n\n    // Check if potential action is actionable (criteria is valid)\n    action = checkValidity(action)\n    if(action?.actionStatus == 'FailedActionStatus'){\n        return action\n    }\n\n    // Check if action is already executed\n    //if(checkIfExecuted(action) == true){\n        //return null\n    //}\n\n    // Execute action (-outputs)\n    action = executeAction(action)\n\n\n    // Execute action type (updateAction, deleteAction, ...)\n    action = executeActionType(action)\n\n    // Convert from system record if required\n    if(isSystemRecordFlag === false){\n        action = th.record.get(action)\n    }\n    \n    return action\n\n}\n\nfunction checkValidity(action){\n    /**\n     * Checks if action meet validity criteria\n     * Validity criteria are the -input properties\n     */\n\n    \n    // Convert record to dot record\n    let dotRecord = h.dot.toDot(th.record.get(action))\n\n    // Iterate through keys\n    let errors = []\n\n    \n\n    \n    for(let k in dotRecord){\n        \n         if(k.includes('-input')){\n\n             // Retrieve value\n             //let value = h.dot.get(k, action)\n             let value = th.value.get(action, k)\n             \n             // convert uri template to pvs\n             let pvs = h.uri.uriToPvs(value)\n\n\n             // If pvs has default value and nothing else, assume it is a regex valuePattern\n             if(Object.keys(pvs.length <=2)){\n                 pvs.valuePattern = pvs?.defaultValue\n             }\n             \n             // Check if meet pvs\n             let result = testPVS(action, k, pvs)\n\n             if(result == false){\n                errors.push(`${k} does not meet validity criteria ${value}`)\n                 action.actionStatus = 'FailedActionStatus'\n             }\n         }\n        \n    }\n\n    if(action.actionStatus != 'FailedActionStatus'){\n        action.actionStatus = 'PotentialActionStatus'\n    }\n        \n    if(errors.length > 0){\n        action.error = errors.join(', ')\n    }\n        \n    return action\n    \n}\n\n\nfunction executeAction(action){\n    /**\n     * Converts keys ending in '-output' by executing their value is if uri template \n     */\n\n    // Copy record\n    let newAction = action //JSON.parse(JSON.stringify(action));\n\n    // Convert to dot record\n    let dotRecord = h.dot.toDot(th.record.get(action))\n\n    // Iterate through all keys\n    for(let k of Object.keys(dotRecord)){\n\n        // Remove input\n        if(k.includes('-input')){\n\n             //h.dot.setValue(newAction, k, undefined)\n            newAction = th.value.delete(newAction, k)\n        }\n        \n        //\n        if(k.includes('-output')){\n\n          \n            // Retrieve value\n            //let value = h.dot.get(k, newAction)\n            let value = th.value.get(newAction, k)\n\n            // Convert value to pvs\n            let pvs = h.uri.uriToPvs(value)\n            \n            if(Object.keys(pvs).length <= 2){\n                pvs.defaultValue = value\n            }\n            \n            // Execute pvs template\n            value = h.template.get(pvs?.defaultValue, action)\n            \n\n            // Convert if json\n            try{\n                value = JSON.parse(value)\n\n            } catch(error){\n\n            }\n\n\n            // Set value \n            let newK = k.replace('-output', '')\n            newAction = th.value.set(newAction, newK, value)\n         \n            \n            // Remove old output key\n            newAction = th.value.delete(newAction, k)\n\n            \n        }\n\n    }\n\n    // Set action to completed\n    newAction = th.value.set(newAction, 'actionStatus', 'CompletedActionStatus')\n\n    return newAction\n\n\n}\n\n\nfunction testPVS(record, key, pvs){\n    /**\n     *  {\n    \"@type\": \"PropertyValueSpecification\",\n    \"@id\": \"8ca1b4ac-9a70-4761-ab77-8ec77512cef5\",\n    \"defaultValue\": null,\n    \"readonlyValue\": null,\n    \"valueRequired\": true,\n    \"multipleValues\": false,\n    \"minValue\": null,\n    \"maxValue\": null,\n    \"valueMinLength\": null,\n    \"valueMaxLength\": null,\n    \"valuePattern\": null,\n    \"stepValue\": null,\n    \"valueName\": null,\n}\n\n     */\n\n\n    let newKey = key.replace('-input', '')\n    let value = h.dot.get(newKey, record)\n\n    let errors = []\n\n    let result = true\n\n\n    // valueRequired\n    if(h.isNotNull(pvs.valueRequired)){\n        \n        try{\n            if(h.isNull(value)){\n                errors.push('valueRequired')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    // multipleValues\n    if(h.isNotNull(pvs.multipleValues)){\n\n        try{\n            if(value.length > 1){\n                errors.push('multipleValues')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    \n    // minValue\n    if(h.isNotNull(pvs.minValue)){\n\n        try{\n            if(value < Number(pvs.minValue)){\n                errors.push('minValue')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    // valueMaxLength\n    if(h.isNotNull(pvs.maxValue)){\n\n        try{\n            if(value > Number,Number(pvs.maxValue)){\n                errors.push('maxValue')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n    \n    // valueMinLength\n    if(h.isNotNull(pvs.valueMinLength)){\n\n        try{\n            if((value?.length || '') < pvs.valueMinLength){\n                errors.push('valueMinLength')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    // valueMaxLength\n    if(h.isNotNull(pvs.valueMaxLength)){\n\n        try{\n            if((value?.length || '') > pvs.valueMaxLength){\n                errors.push('valueMaxLength')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    // valueStep\n    if(h.isNotNull(pvs.stepValue)){\n\n        try{\n            if (value % pvs.stepValue != 0) {\n                errors.push('stepValue')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    // valuePattern\n    if(h.isNotNull(pvs.valuePattern)){\n\n        try{\n            value = String(value);\n            if(h.regex.test(value, pvs.valuePattern) ==false){\n                errors.push('valuePattern')\n                result = false\n            }\n        } catch (error){\n            errors.push(error)\n            result = false\n        }\n        \n    }\n\n    return result\n    \n}\n\n\n\nfunction executePotentialAction_OLD(action){\n    /**\n     * Executes an action\n     * \n     */\n\n    \n    // Check if potential action is actionable (criteria is valid)\n\n    //if(checkValidity(action) == false){\n        //return null\n   // }\n\n    // Check if action is already executed\n    //if(checkIfExecuted(action) == true){\n        //return null\n    //}\n\n    // Execute action\n    action = executeAction(action)\n\n    return action\n    \n}\n\n\n\n\nfunction checkValidity_OLD(record, action){\n    /**\n     * Checks if the action is valid\n     */\n    \n    return psh.test(record, action)\n    \n\n    \n}\n\n\nfunction checkIfExecuted(record, action){\n    /**\n     * Checks if the action is already executed\n     */\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\nfunction executeActionType(action){\n    /**\n     * Executes an action\n     */\n\n    let action_type = action?.record_type  || action?.[\"@type\"] \n\n    \n    let recordIsThingFlag = false\n    if(th.isValid(action)){\n        recordIsThingFlag = true\n    } else {\n\n        action = th.toThing(action)\n        \n    }\n\n    // Init action\n    action = th.value.set(action, 'startTime',  new Date())\n\n\n    // Switch\n\n    \n    switch(action_type) {\n\n\n        //\n        \n        case \"UpdateAction\":\n            action = executeUpdateAction(action)\n            break;\n        \n        // List actions\n        case \"InsertAction\":\n            action = executeInsertAction(action)\n            break;\n        case \"AddAction\":\n            action =  executeInsertAction(action)\n            break;\n        case \"DeleteAction\":\n            action =  executeDeleteAction(action)\n            break;\n        case \"ReplaceAction\":\n            action =  executeReplaceAction(action)\n            break;\n        case \"InsertAction\":\n            action =  executeInsertAction(action)\n            break;\n        case \"AppendAction\":\n            action =  executeAppendAction(action)\n            break;\n        case \"PrependAction\":\n            action =  executePrependAction(action)\n            break;\n        case \"DeleteAction\":\n            action =  executeDeleteAction(action)\n            break;\n        default:\n            break;\n            \n    }\n\n\n    // \n\n    action = th.value.set(action, 'endTime',  new Date())\n\n    \n    // Convert back to record \n    if(recordIsThingFlag == true){\n        action = th.record.get(action)\n    }\n\n    return action\n    \n}\n\n\n\n\n// -----------------------------------------------------\n//  Record \n// -----------------------------------------------------\n\nfunction executeUpdateAction(action){\n    /**\n     * Executes an update action\n     * \n     */\n\n\n\n    // Error handling\n    if(h.isNull(action.object)){\n        action = th.value.set(action, 'actionStatus', \"FailedActionStatus\")\n        action = th.value.set(action, 'actionStatus', \"Missing object\")\n        action = th.value.set(action, 'endTime', new Date())\n        return action\n    }\n\n    if(h.isNull(action.targetCollection)){\n        action = th.value.set(action, 'actionStatus', \"FailedActionStatus\")\n        action = th.value.set(action, 'actionStatus', \"Missing targetCollection\")\n        action = th.value.set(action, 'endTime', new Date())\n        return action\n        \n    }\n\n    // Execute action\n    let targetCollections = th.propertyValues.get(action, 'targetCollection')\n    targetCollections = targetCollections.map(x => x.object.value)\n\n    let objects = th.propertyValues.get(action, 'object')\n    objects = objects.map(x => x.object.value)\n    \n    \n    let results = []\n    for(let targetCollection of targetCollections){\n\n        let result = targetCollection\n        \n        for (let object of objects){\n            let propertyID = th.value.get(object, 'propertyID')\n            let value = th.value.get(object, 'value')\n            result = th.value.set(result, propertyID, value)\n        }\n        \n        results.push(result)\n        \n    }\n\n    // Execute action\n    action = th.value.set(action, 'result', results)\n\n    // Set action status\n    action = th.value.set(action, 'actionStatus', \"CompletedActionStatus\")\n\n    // Return\n    return action\n\n    \n}\n\n// -----------------------------------------------------\n//  Lists \n// -----------------------------------------------------\n\nfunction executeAddAction(action){\n    /**\n     * Execute an append action adding item to the end of the list\n     */\n\n    return executeInsertAction(action)\n\n}\n\nfunction executeAppendAction(action){\n    /**\n     * Execute an append action adding item to the end of the list\n     */\n\n    return executeInsertAction(action, null)\n    \n}\n\nfunction executePrependAction(action){\n    /**\n     * Execute an append action adding item to the end of the list\n     */\n\n    return executeInsertAction(action, 0)\n\n}\n\nfunction executeInsertAction(action, toLocation){\n    /**\n     * Executes an append action adding item to the end of the list\n     */\n    \n\n    // Get variables\n    toLocation = toLocation || th.value.get(action, 'toLocation')\n\n    let objects = th.propertyValues.get(action, 'object')\n    objects = objects.map(x => x.object.value)\n    \n    let targetCollections = th.propertyValues.get(action, 'targetCollection')\n    targetCollections = targetCollections.map(x => x.object.value)\n\n    // Error handling\n    if(h.isNull(objects)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing object'\n        return action\n    }\n\n    if(h.isNull(targetCollections)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing targetCollection'\n        return action\n    }\n\n    \n    // Execute action\n    let results = []\n    for(let targetCollection of targetCollections){\n\n        let result = targetCollection\n\n        let tempToLocation = toLocation \n        for(let object of objects){\n            result = lh.insert(result, object, tempToLocation)\n            tempToLocation = th.value.get(object, 'position') + 1\n        }\n        results.push(result)\n    }\n\n    // Execute action\n    action = th.value.set(action, 'result', results)\n    \n    // Set action status\n    action = th.value.set(action, 'actionStatus', \"CompletedActionStatus\")\n\n    // Return\n    return action\n    \n}\n\n\nfunction executeDeleteAction(action){\n    /**\n     * Delete an item from the list\n     */\n\n\n    // Error handling\n    if(h.isNull(action.object)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing object'\n        return action\n    }\n\n    if(h.isNull(action.targetCollection)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing targetCollection'\n        return action\n    }\n\n    // Get variables\n\n    let objects = th.propertyValues.get(action, 'object')\n    objects = objects.map(x => x.object.value)\n\n    let targetCollections = th.propertyValues.get(action, 'targetCollection')\n    targetCollections = targetCollections.map(x => x.object.value)\n\n    // Execute action\n    let results = []\n    for(let targetCollection of targetCollections){\n\n        let result = targetCollection\n        \n        for(let object of objects){\n            result = lh.delete(result, object)\n        }\n        results.push(result)\n    }\n    \n    action = th.value.set(action, 'result', results)\n\n    // Set action status\n    action = th.value.set(action, 'actionStatus', \"CompletedActionStatus\")\n\n    // Return\n    return action\n    \n}\n\nfunction executeReplaceAction(action){\n    /**\n     * Delete an item from the list\n     */\n\n\n\n    // Error handling\n    if(h.isNull(action?.object)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing object'\n        return action\n    }\n\n    if(h.isNull(action?.targetCollection)){\n        action.actionStatus = 'FailedActionStatus'\n        action.error = 'Missing targetCollection'\n        return action\n    }\n\n    // Get \n    let replacers = th.propertyValues.get(action, 'replacer')\n    replacers = replacers.map(x => x.object.value)\n\n    let replacees = th.propertyValues.get(action, 'replacee')\n    replacees = replacees.map(x => x.object.value)\n\n    let targetCollections = th.propertyValues.get(action, 'targetCollection')\n    targetCollections = targetCollections.map(x => x.object.value)\n\n    let toPosition = th.value.get(replacers?.[0], 'toPosition')\n\n    // Execute action\n    \n    let results = []\n    \n    for(let targetCollection of targetCollections){\n\n        let result = targetCollection\n        let tempToPosition = toPosition || 0\n        \n        for(let replacee of replacees){\n            result = lh.delete(result, replacee)\n        }\n\n        for(let replacer of replacers){\n            result = lh.insert(result, replacer, tempToPosition)    \n            tempToPosition += 1\n        }\n        results.push(result)\n        \n    }\n  \n    action = th.value.set(action, 'result', results)\n\n    \n    // Set action status\n    action = th.value.set(action, 'actionStatus', \"CompletedActionStatus\")\n    \n    // Return\n    return action\n\n}","import { krakenBaseHelpers as h } from \"../base/krakenBaseHelpers.js\";\n\n//import { krakenElementThingRecordHelpers as etrh } from \"./krakenElementThingRecordHelpers.js\";\n\nimport { krakenThingListHelpers as tlh } from \"../thing/src/krakenThingListHelpers.js\";\nimport { krakenElementEventHelpers } from \"./krakenElementEventHelpers.js\";\n\nimport { krakenElementThingRenderHelpers as render } from \"./krakenElementThingRenderHelpers.js\";\nimport { krakenElementThingPropertyHelpers as property } from \"./krakenElementThingPropertyHelpers.js\";\n\nimport { krakenElementHelpers as eh } from \"./krakenElementHelpers.js\";\n\n//import { krakenElementThingRecordHelpers as record } from \"./krakenElementThingRecordHelpers.js\";\n\nimport { krakenThingHelpers as th } from \"../thing/krakenThingHelpers.js\";\n\nlet DB = {};\n\nexport const krakenElementThingEventHelpers = {\n    register: registerEvents,\n};\n\nfunction registerEvents(element, db, TEMPLATEDB) {\n    /**\n     * Registers events on an element\n     * @param {Object} element\n     * @param {Object} db: the db containing things records\n     * @param {Object} TEMPLATEDB: the db containing the templates\n     * @returns {Object} The element\n     *\n     * classes:\n     *     - krDropzone:\n     *     - krDraggable:\n     *     - krClickable:    \n     *     - krSelectable: allows an item to be selected\n     */\n\n    return \n    let classList = {\n        //Drag and drop\n        krDrag: {\n            eventFn: krakenElementEventHelpers.dragDrop.setDraggable,\n            callbackFn: addToList,\n            params: { db: db, TEMPLATEDB: TEMPLATEDB },\n        },\n        krDrop: {\n            eventFn: krakenElementEventHelpers.dragDrop.setDropzone,\n            callbackFn: addToList,\n            params: { db: db, TEMPLATEDB: TEMPLATEDB },\n        },\n\n        // Generic dropzone\n        krDropzone: {\n            eventFn: krakenElementEventHelpers.generic.setDropzone,\n            callbackFn: addToList,\n            params: { db: db, TEMPLATEDB: TEMPLATEDB },\n        },\n\n        // Generic draggable\n        krDraggable: {\n            eventFn: krakenElementEventHelpers.generic.setDraggable,\n            callbackFn: null,  // addToList,\n            params: { db: db, TEMPLATEDB: TEMPLATEDB },\n        },\n\n        // Generic clickable\n        krClickable: {\n            eventFn: krakenElementEventHelpers.click.set,\n            callbackFn: addToList,\n            params: { db: db, TEMPLATEDB: TEMPLATEDB },\n        },\n    };\n\n    // Set id to element if doesn't already have one\n    eh.setId(element);\n\n    // Register\n    for (let k in classList) {\n        \n        if (h.isNull(DB?.[k])) {\n            console.log(k);\n            DB[k] = {};\n        }\n        let fn = classList?.[k]?.[\"eventFn\"];\n        let callbackFn = classList?.[k]?.[\"callbackFn\"];\n        let params = classList?.[k]?.[\"params\"];\n\n        let elements = element.querySelectorAll(`.${k}`);\n        for (let e of elements) {\n            if(h.isNull(e.id)){ e.id = h.uuid.new()}\n            \n            if (DB?.[k]?.[e?.id] != true) {\n\n                console.log('c')\n                fn(e, callbackFn, params);\n                DB[k][e.id] = true;\n            } else {\n                console.log('not null', DB?.[k]?.[e?.id])\n            }\n        }\n    }\n}\n\n// -----------------------------------------------------\n//  addToList\n// -----------------------------------------------------\n\nfunction addToList(action, params) {\n    /**\n     * Adds element to list\n     * @param {Object} element\n     * @param {Object} list\n     * @returns {Object} The element\n     */\n\n    // Retrieve database of records from params\n    let db = params?.db || [];\n    let TEMPLATEDB = params?.TEMPLATEDB || [];\n    \n\n    // Get element from element id in action object\n    let obj = action.object?.[0] || action.object;\n    let element = document.getElementById(obj?.[\"@id\"]) || null;\n\n    // Get itemlist record from db\n    let itemList_record_type = property.record_type.get(element);\n    let itemList_record_id = property.record_id.get(element);\n    let itemList_record = db.get(itemList_record_type, itemList_record_id);\n    \n\n    \n\n    // Add items to itemList_record\n    let items = action.result;\n\n    \n    for (let item of h.toArray(items)) {\n        console.log('item', item.record || item)\n        itemList_record.insert(item.record);\n    }\n\n    \n  \n    let r1 = itemList_record.record\n    console.log(JSON.stringify(r1, null, 4))\n\n    console.log(\"rendering\");\n    console.log(TEMPLATEDB)\n    let r = render.render(document.body, r1, TEMPLATEDB);\n\n    console.log(r)\n    return;\n}\n\n\n\n// -----------------------------------------------------\n//  Copy value \n// -----------------------------------------------------\n\n\nfunction copyValue(action, params) {\n    /**\n     * Copy value from element to clipboard\n     * @param {Object} element\n     * @param {Object} list\n     * @returns {Object} The element\n     */\n\n    // Retrieve database of records from params\n    let db = params?.db || [];\n    let TEMPLATEDB = params?.TEMPLATEDB || [];\n    \n\n    // Get element from element id in action object\n    let obj = action.object?.[0] || action.object;\n    let element = document.getElementById(obj?.[\"@id\"]) || null;\n\n    // Get record from db\n    let record_type = property.record_type.get(element);\n    let record_id = property.record_id.get(element);\n    let record = db.get(record_type, record_id);\n\n    if(property.type.get(element) =='thing'){\n        let systemRecord = db.get(record_type, record_id);\n        let record = th.record.get(systemRecord)\n        navigator.clipboard.writeText(JSON.stringify(record));\n\n    }\n\n    //todo: add wayt to copy values\n\n\n\n    // Add items to itemList_record\n    let items = action.result;\n\n\n    for (let item of h.toArray(items)) {\n        console.log('item', item.record || item)\n        itemList_record.insert(item.record);\n    }\n\n\n\n    let r1 = itemList_record.record\n    console.log(JSON.stringify(r1, null, 4))\n\n    console.log(\"rendering\");\n    console.log(TEMPLATEDB)\n    let r = render.render(document.body, r1, TEMPLATEDB);\n\n    console.log(r)\n    return;\n}\n\n\n\n\n\n\n// -----------------------------------------------------\n//  Comment\n// -----------------------------------------------------\n\nfunction registerDeleteValueEventHandler(element, config) {\n    /**\n     * Registers the delete value event handler\n     * @param {Object} element\n     * @param {Object} db\n     * @returns {Object} The element\n     */\n\n    element.addEventListener(\"click\", (event) => {\n        let thingElement = h.dom.thing.traverse.current.thing.get(event.target);\n        let propertyElement = h.dom.thing.traverse.current.property.get(\n            event.target,\n        );\n        let valueElement = h.dom.thing.traverse.current.value.get(event.target);\n\n        // Get record from db\n        let record_type = h.dom.thing.property.record_type.get(thingElement);\n        let record_id = h.dom.thing.property.record_id.get(thingElement);\n        let propertyID = h.dom.thing.property.propertyID.get(propertyElement);\n        let valueHash = h.dom.thing.property.valueHash.get(valueElement);\n        let value = h.dom.thing.record.value.get(valueElement);\n\n        let record = db.filter(\n            (x) => x?.[\"@type\"] == record_type && x?.[\"@id\"] == record_id,\n        )?.[0];\n\n        let newValue = [];\n        for (let v of h.toArray(record?.[propertyID])) {\n            if (h.base.hash.get(v) != valueHash && valueHash != v) {\n                newValue.push(v);\n            }\n        }\n        record[propertyID] = newValue;\n        console.log(record);\n        let a3 = h.dom.thing.render(t, record);\n    });\n}\n\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\nimport { krakenElementHelpers as eh} from './krakenElementHelpers.js'\nimport { krakenElementThingHelpers as th} from './krakenElementThingHelpers.js'\n\nimport { krakenElementTemplateHelpers } from \"./krakenElementTemplateHelpers.js\";\n\n\n\n\nexport const krakenElementOrchestratorHelpers = {\n\n    initElements: initElements,\n    initObserver: initObserver,\n    getThings: getThings,\n    updateThing: updateThing,\n    \n}\n\n\nfunction initElements(element){\n    /**\n     * Initializes the orchestrator and the elements under it\n     * @returns\n     * \n     */\n\n    // Error handling\n    element = element || document.body\n\n    //\n    return th.init(element)\n    \n}\n\nfunction initObserver(element, thingDB){\n    /**\n     * Initialize observer so if new elements are added to the DOM, they are updated\n     * @param {Object} element The element to observe\n     * @returns {Object} The observer\n     * \n     */\n\n    // Error handling\n    element = element || document.body\n    \n    const config = { attributes: true, childList: true, subtree: true};\n\n\n    // Callback function to execute when mutations are observed\n    const callback = (mutationList, observer) => {\n      for (const mutation of mutationList) {\n\n        \n        if (mutation.type === \"childList\") {\n\n            for(let n of mutation.addedNodes){\n\n                // Skip if not thing element\n                if(!th.isValid(n)) { continue }\n\n                \n                //console.log('Observer - new element added', th.isValid(n), n.tagName)\n\n                let ref = th.ref.get(n)\n\n                //console.log(ref)\n                for(let t of thingDB){\n                    let t_type = t?.record_type || t?.['@type']\n                    let t_id = t?.record_id || t?.['@id']\n                    if(t_type == ref?.['@type'] && t_id == ref?.['@id']){\n                        //console.log('update thing')\n                        updateThing(element, t)\n                    }\n                }\n                \n                \n            }\n            \n        } else if (mutation.type === \"attributes\") {\n\n            //console.log('Observer - element updated', th.isValid(mutation.target))\n            \n        }\n      }\n    };\n\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(element, config);\n\n    // Later, you can stop observing\n    //observer.disconnect();\n\n    \n}\n\n\n\nfunction getThings(element) {\n    /**\n     * Returns the things under the orchestrator.\n     * @param {Object} element The element. Uses document.body if missing\n     * @returns {Array}\n     */\n\n    element = element || document.body\n    \n    let things = th.ref.getAll(element)\n\n    return things;\n}\n\n\n\nfunction updateThing(element, record){\n    /**\n     * Update all elements with the corresponding thing\n     * @param {Object} element The element\n     * @param {Object} record_or_record_type The record type\n     * @param {String} record_id The record id\n     * @returns {Object} The record\n     */\n\n    // Error handling\n    element = element || document.body\n    if(h.isNull(record)){ return }\n    //record = record?.record || record\n\n    // Render elements with thing\n    th.render(element, record);\n\n    // Return\n    return\n}","\n\nexport const krakenElementCursorHelpers = {\n    get: getCursorPosition,\n    set: setCursorPosition,\n}\n\n\nfunction getCursorPosition(div) {\n    let cursorPosition = 0;\n\n    // Check if the div has focus\n    if (window.getSelection && document.activeElement === div) {\n        const selection = window.getSelection();\n\n        if (selection.rangeCount > 0) {\n            const range = selection.getRangeAt(0);\n            const preCursorRange = range.cloneRange();\n\n            // Move the start of the range to the beginning of the div\n            preCursorRange.selectNodeContents(div);\n            preCursorRange.setEnd(range.startContainer, range.startOffset);\n\n            // The length of preCursorRange is the cursor position within the div\n            cursorPosition = preCursorRange.toString().length;\n        }\n    }\n    return cursorPosition;\n}\n\nfunction setCursorPosition(div, position) {\n    // Ensure the div is focused\n    div.focus();\n\n    // Get the text nodes in the div\n    function getTextNodes(node) {\n        let textNodes = [];\n        if (node.nodeType === Node.TEXT_NODE) {\n            textNodes.push(node);\n        } else {\n            for (let child of node.childNodes) {\n                textNodes = textNodes.concat(getTextNodes(child));\n            }\n        }\n        return textNodes;\n    }\n\n    const textNodes = getTextNodes(div);\n    let currentPos = 0;\n    let range = document.createRange();\n    let found = false;\n\n    // Loop through the text nodes to find the right position\n    for (let textNode of textNodes) {\n        const nodeLength = textNode.textContent.length;\n\n        if (currentPos + nodeLength >= position) {\n            range.setStart(textNode, position - currentPos);\n            range.collapse(true);\n            found = true;\n            break;\n        }\n\n        currentPos += nodeLength;\n    }\n\n    // Set the cursor position\n    if (found) {\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    } else {\n        console.warn(\"Position out of range\");\n    }\n}\n","\nimport { krakenHeadingsHelpers} from './krakenHeadingsHelpers.js'\n\n\nexport const krakenLocalizationHelpers = {\n\n    headings: krakenHeadingsHelpers\n}","import { article } from \"./src/article.js\";\n\nimport { card } from \"./src/card.js\";\nimport { cardHorizontal } from \"./src/cardHorizontal.js\";\n\n\nimport { callToAction } from \"./src/callToAction.js\";\n\n\nimport { css } from \"./src/css.js\";\n\nimport { features } from \"./src/features.js\";\n\nimport { footer } from \"./src/footer.js\";\nimport { form } from \"./src/form.js\";\n\nimport { header } from \"./src/header.js\";\nimport { hero } from \"./src/hero.js\";\n\nimport { howTo } from \"./src/howTo.js\";\n\nimport { icons } from \"./src/icons.js\";\n\nimport { itemlist } from \"./src/itemlist.js\";\nimport { jsonld } from \"./src/jsonld.js\";\n\nimport { line } from \"./src/line.js\";\nimport { listitem } from \"./src/listitem.js\";\nimport { navbar } from \"./src/navbar.js\";\nimport { page } from \"./src/page.js\";\nimport { pill } from \"./src/pill.js\";\n\n\nimport { pricing } from \"./src/pricing.js\";\n\nimport { record } from \"./src/record.js\";\n\n\nimport { userConsent } from \"./src/userConsent.js\";\n\nimport { contentHead } from \"./src/contentHead.js\";\nimport { contentBody } from \"./src/contentBody.js\";\nimport { propertyValues } from \"./src/propertyValues.js\";\n\npropertyValues\n\nimport { krakenBaseHelpers as h } from \"../base/krakenBaseHelpers.js\";\nimport { krakenClasses } from \"../../../krakenClasses/krakenClasses.js\";\n\nexport const krakenSimpleHtmlHelpers = {\n    article: article,\n    callToAction: callToAction,\n    card: card,\n    cardHorizontal: cardHorizontal,\n    css: css,\n    features: features,\n    footer: footer,\n    form: form,\n    hero: hero,\n    howTo: howTo,\n    icons: icons,\n    itemlist: itemlist,\n    jsonld: jsonld,\n    line: line,\n    listitem: listitem,\n    navbar: navbar,\n    page: page,\n    pill: pill,\n    pricing: pricing,\n    propertyValues:propertyValues,\n    record: record,\n    userConsent: userConsent,\n    landingPage: getLandingPage,\n    contentHead: contentHead,\n    contentBody: contentBody,\n};\n\nfunction getLandingPage(records) {\n    /**\n     * Get elements of landing page\n     */\n\n    let content = \"\";\n\n    let count = 0;\n\n    for (let r of records) {\n        r = h.heading.addHeadings(r);\n\n        let krakenClasses = [];\n        let partContent = \"\";\n\n        switch (r?.[\"@type\"]) {\n            case \"Article\":\n                partContent += h.template.render(article(), r);\n                break;\n            case \"CreativeWork\":\n                partContent += h.template.render(hero(), r);\n                break;\n            case \"HowTo\":\n                partContent += h.template.render(howTo(), r);\n                break;\n            case \"Product\":\n                partContent += h.template.render(features(), r);\n                break;\n            case \"OfferCatalog\":\n                partContent += h.template.render(pricing(), r);\n                break;\n            case \"Action\":\n                partContent += h.template.render(callToAction(), r);\n                break;\n        }\n\n        // Get classes\n        if (count == 0) {\n            krakenClasses.push(\"text-bg-dark\");\n            krakenClasses.push(\"bg-gradient \");\n        }\n\n        if (count != 0 && h.number.isEven(count)) {\n            krakenClasses.push(\"text-bg-secondary\");\n        }\n\n        // Increment counter\n        count += 1;\n        \n        // Compile content\n        content += `\n        <section \n        class=\"aos-init aos-animate ${krakenClasses.join(\" \")} pt-5 pb-5\"\n        data-aos=\"fade-down\"\n        data-aos-offset=\"300\"\n        > \n            ${partContent} \n        </section>`;\n\n    }\n    return content;\n}\n","\n\n\nexport function article() {\n    /**\n     *\n     *\n     */\n\n    return `\n\n<div class=\"container px-4 py-5\">\n\n\n    <div class=\"row  g-5 py-5\">\n\n\n        <!-- toc -->\n        <div class=\"col col-md-4 order-2 sticky-top\" >\n\n            <div class=\"sticky-top\">\n                <ul class=\"list-unstyled\">\n                    {{#hasPart}}\n                        <li >\n                            \n                           <a href=\"#{{hasPart.@id}}\">{{hasPart._heading1}}</a>\n                             \n                              <ul class=\"list-unstyled\">\n                              \n                                    {{#hasPart.hasPart}}\n                                    \n                                        <li>\n                                            <a href=\"#{{hasPart.hasPart.@id}}\">{{hasPart.hasPart._heading1}}</a>\n                                        </li>\n        \n        \n                                    {{/hasPart.hasPart}}\n                              </ul>\n                          \n                        </li>\n                        \n                    {{/hasPart}}\n                </ul>\n            </div>\n        </div>\n\n        <!-- article -->\n\n        <div class=\"col-md-8 order-1\">\n\n            <div class=\"container mt-4 mb-2\">\n\n\n                <!-- image --> \n                    {{#_headingImage}}\n            \n                        <img src=\"{{_headingImage}}\" class=\"d-block my-5 img-fluid\" alt=\"{{_headingImage}}\" width=\"700\" height=\"500\" loading=\"lazy\">\n            \n                    {{/_headingImage}}\n\n\n                <!-- heading -->\n                    {{#_heading1}}\n                        <h2 class=\"fw-bold mt-5 text-body-emphasis mt-5\">{{_heading1}}</h2>\n                    {{/_heading1}}\n            \n                \n\n                <!-- date -->\n                    {{#_headingDate}}\n                        <small>{{_headingDate}}</small>\n                    {{/_headingDate}}\n                    \n\n\n                <!-- author -->\n                    {{#author}}\n                        <small>{{author._heading1}}</small>\n                    {{/author}}\n\n\n                <!-- Abstract -->\n\n                    {{#abstract}}    \n                        <p class=\"lead\">\n                          {{abstract}}\n                        </p>\n                    {{/abstract}}    \n\n                <!-- content -->\n                    {{#_headingDescription}}\n                        <p class=\"lead mt-5\">{{_headingDescription}}</p>\n                    {{/_headingDescription}}\n\n\n        \n                <!-- article parts -->\n                {{#hasPart}}\n        \n                    <div class=\"container ps-0 pe-0 mt-5 mb-1 ms-0 me-0\" id=\"{{hasPart.@id}}\">\n                        {{#hasPart._headingImage}}\n            \n                            <img src=\"{{hasPart._headingImage}}\" class=\"d-block my-5 img-fluid\" alt=\"{{hasPart._headingImage}}\" width=\"300\" height=\"200\" loading=\"lazy\">\n            \n                        {{/hasPart._headingImage}}\n            \n                        {{#hasPart._heading1}}\n                            <h3 class=\"fw-bold text-body-emphasis\">{{hasPart._heading1}}</h3>\n                        {{/hasPart._heading1}}\n            \n                        {{#hasPart._headingDescription}}\n                            <p class=\"lead\">{{hasPart._headingDescription}}</p>\n                        {{/hasPart._headingDescription}}\n            \n            \n                        <!-- article parts -->\n                        {{#hasPart.hasPart}}\n        \n                            <div class=\"container mt-5 mb-1 ms-0 me-0\" id=\"{{hasPart.hasPart.@id}}\">\n                                {{#_headingImage}}\n                \n                                    <img src=\"{{hasPart.hasPart._headingImage}}\" class=\"d-block img-fluid\" alt=\"{{hasPart.hasPart._headingImage}}\" width=\"150\" height=\"100\" loading=\"lazy\">\n                \n                                {{/hasPart.hasPart._headingImage}}\n                                \n                                {{#hasPart.hasPart._heading1}}\n                                    <h4 class=\"fw-bold text-body-emphasis mt-5\">{{hasPart.hasPart._heading1}}</h4>\n                                {{/hasPart.hasPart._heading1}}\n                \n                                {{#hasPart.hasPart._headingDescription}}\n                                    <p class=\"lead\">{{hasPart.hasPart._headingDescription}}</p>\n                                {{/hasPart.hasPart._headingDescription}}\n            \n                            </div>\n                           \n            \n                        {{/hasPart.hasPart}}\n                        \n                    </div>\n            \n                {{/hasPart}}\n            </div>\n        </div>\n\n    </div>\n</div>\n\n\n`;\n}\n","\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\nexport function card(classes, prefixes) {\n\n    //\n    prefixes = h.toArray(prefixes) || [];\n\n    prefixes = prefixes.filter(x => x !== undefined && x !== null)\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n\n    \n    return ` <div class=\"card ${h.toArray(classes).join(' ')}\" style=\"width: 18rem;\">\n         \n            <img src=\"{{${prefix}image.contentUrl}}\" class=\"card-img-top\" alt=\"...\" onerror=\"this.style.display='none'\">\n           \n            <div class=\"card-body\">\n            {{#${prefix}_headingPosition}}\n              <h5 class=\"card-title\">{{${prefix}_headingPosition}}</h5>\n            {{/${prefix}_headingPosition}}\n              <h5 class=\"card-title\">{{${prefix}_headingStars}}</h5>\n                <h5 class=\"card-title\">{{ ${prefix}_heading1 }}</h5>\n                <p class=\"card-text\">{{ ${prefix}_heading2 }}</p>\n                {{#${prefix}potentialAction}}\n                    <a href=\"{{ potentialAction.url}}\" class=\"btn btn-primary\">{{ ${prefix}potentialAction.name}}</a>\n                {{/${prefix}potentialAction}}\n            </div>\n        </div>\n    `;\n}\n","import { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\n\nexport function cardHorizontal(classes, prefixes) {\n\n    //\n    prefixes = h.toArray(prefixes) || [];\n\n    prefixes = prefixes.filter(x => x !== undefined && x !== null)\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n    \n    return ` \n    \n        <div class=\"card mb-3\" style=\"max-width: 300px;\">\n            <div class=\"row g-0\">\n\n    \n               <!-- image -->\n               {{#${prefix}image.contentUrl}}\n                    <div class=\"col col-sm-4 align-self-center\">\n                        <a href=\"#\" class=\"btn h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#modalID\">\n                              <img src=\"{{${prefix}image.contentUrl}}\" class=\"card-img-top\" alt=\"...\" onerror=\"this.style.display='none'\">\n                        </a>\n                    </div>\n\n                {{/${prefix}image.contentUrl}}\n\n                <!-- content -->\n                <div class=\"col pt-0 align-self-top\">\n                \n                    <div class=\"row mt-0 me-1\">\n                        <span\n                            class=\"mt-0 mb-1 align-self-end text-end justify-content-end kr-action\">{{kr-action}}</span>\n                    </div>\n                    \n                    <div class=\"card-body\">\n\n                        <div class=\"row align-self-center\">\n                            <h5 class=\"card-title mb-0\">\n                                <font size=\"-1\">{{_heading1}}</font>\n                            </h5>\n                            <p class=\"card-text mt-0\">\n                                <font size=\"-1\">{{_heading2}}</font>\n                            </p>\n\n                        </div>\n                    </div>\n                    <div class=\"row me-1 mt-0 text-end justify-content-end\">\n                        <p class=\"card-text\"><small class=\"text-body-secondary\">\n                                <font size=\"-1\">{{_headingStatus}}</font>\n                            </small></p>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    `;\n}\n","\nimport { form } from './form.js'\n\nexport function callToAction(){\n\n\n    let formContent = form()\n\n\n    \n    return `\n    \n    \n\n    <div class=\"container col-xl-10 col-xxl-8 px-4 py-5\">\n\n        <div class=\"row align-items-center g-lg-5 py-5\">\n\n            <div class=\"col-lg-7 text-center text-lg-start\">\n            \n                <h1 class=\"display-4 fw-bold lh-1 text-body-emphasis mb-3\">{{_heading1}}</h1>\n                <p class=\"col-lg-10 fs-4\">{{_headingDescription}}</p>\n                \n            </div>\n\n\n            <div class=\"col-md-10 mx-auto col-lg-5\">\n            \n                ${formContent}\n                \n            </div>\n\n        </div>\n\n    </div>\n    \n    \n    \n    \n    \n    `\n\n\n    \n    \n}","\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\nexport function form(record){\n\n\n   \n\n    \n    return `\n\n\n     \n\n\n            <form>\n                \n                <div class=\"mb-3\">\n\n                \n                {{#transpose: }}\n                    \n                    {{#filter:value.@type=PropertyValueSpecification}}\n\n                        <!-- for checkbox -->\n                        {{#value | filter:_headingHtmlInputType=checkbox}}\n\n                            <div class=\"form-check mt-3\">\n                                <input \n                                class=\"form-check-input \" \n                                type=\"checkbox\" value=\"\" \n                                id=\"{{value.valueName}}\"\n                                {{#value | filter:required=true }}\n                                    required \n                                {{/value}}\n                                >\n                                <label \n                                class=\"form-check-label\" \n                                for=\"{{value.@id}}\"\n                                >\n                                {{value._headingDescription}}\n                                </label>\n                            </div>\n                            \n                        {{/value}}\n\n\n                        {{#value | filter:_headingHtmlInputType=ne checkbox}}\n\n                            \n                                <label for=\"exampleInputEmail1\" class=\"form-label text-capitalize mt-3\">\n                                    {{value.valueName}}\n                                </label>\n                          \n                                <input \n                                type=\"{{value._headingHtmlInputType}}\"\n                                class=\"form-control\" \n                                \n                                \n                                value=\"{{value.defaultValue}}\"\n                                id=\"{{value.valueName}}\" \n                                aria-describedby=\"emailHelp\"\n            \n                                \n                                {{#value | filter:multipleValues=false }}\n                                    multiple\n                                {{/value}}\n            \n                                {{#value | filter:readonlyValue=true }}\n                                    readonly \n                                {{/value}}\n                    \n                                {{#value | filter:required=true }}\n                                    required \n                                {{/value}}\n\n\n                                {{#value.valuePattern}}\n                                    pattern=\"{{value.valuePattern}}\"\n                                {{/value.valuePattern}}\n            \n                                {{#value.valueMaxLength}}\n                                    maxLength=\"{{value.valueMaxLength}}\"\n                                {{/value.valueMaxLength}}\n            \n                                {{#value.minValue}}\n                                    min=\"{{value.minValue}}\"\n                                {{/value.minValue}}\n                        \n                                {{#value.maxValue}}\n                                    max=\"{{value.maxValue}}\"\n                                {{/value.maxValue}}\n            \n                                {{#value.stepValue}}\n                                    max=\"{{value.stepValue}}\"\n                                {{/value.stepValue}}\n                        \n                                \n                                >\n                         {{/value}}\n                    \n                    {{/filter}}\n\n                     \n                {{/transpose}}\n\n            </div>\n                \n            <button type=\"submit\" class=\"btn btn-primary\">{{name}}</button>\n        \n        </form>\n                \n                \n    \n    `\n    \n}\n\n\n\n\nfunction getPropertyValuesSpecifications(record){\n\n\n    let pvs\n    for(let k in record){\n\n        if (k.includes('_input')){\n            pvs = pvs.merge(history.toArray(record[k]))\n        }\n        \n    }\n\n    return pvs\n    \n    \n}","\n\n\nconst hex = \"#228BE6\";\nconst rgb = parseInt(hex.slice(1), 16);\nconst r = (rgb >> 16) & 255;\nconst g = (rgb >> 8) & 255;\nconst b = rgb & 255;\n\nexport function css(palette){\n\n\n\n    // Add rgb colors\n    for(let k in palette){\n\n\n        let hex = palette[k]\n\n        const rgb = parseInt(hex.slice(1), 16);\n        const r = (rgb >> 16) & 255;\n        const g = (rgb >> 8) & 255;\n        const b = rgb & 255;\n\n        \n\n        \n        palette[k+ '_rgb'] = `${r}, ${g}, ${b}`\n        \n    }\n\n\n\n    \n    return `\n\n    <style>\n\n\n    :root{\n\n        --xx-white:      ${palette.white};\n\n        --xx-light:      ${palette.light};\n        --xx-dark:       ${palette.dark};\n        --xx-primary:    ${palette.primary};\n        --xx-secondary:  ${palette.secondary};\n        --xx-info:       ${palette.info};\n        --xx-success:    ${palette.success};\n        --xx-warning:    ${palette.warning};\n        --xx-danger:     ${palette.danger};\n\n\n        --bs-white: var(--xx-white);\n        --bs-light: var(--xx-light);\n        --bs-dark: var(--xx-dark);\n        --bs-primary: var(--xx-primary);\n        --bs-secondary: var(--xx-secondary);\n        --bs-info: var(--xx-info);\n        --bs-success: var(--xx-success);\n        --bs-warning: var(--xx-warning);\n        --bs-danger: var(--xx-danger);\n\n        --bs-white-rgb: ${palette.white_rgb};\n        --bs-light-rgb: ${palette.light_rgb};\n        --bs-dark-rgb: ${palette.dark_rgb};\n        --bs-primary-rgb: ${palette.primary_rgb};\n        --bs-secondary-rgb: ${palette.secondary_rgb};\n        --bs-info-rgb: ${palette.info_rgb};\n        --bs-success-rgb: ${palette.success_rgb};\n        --bs-warning-rgb: ${palette.warning_rgb};\n        --bs-danger-rgb: ${palette.danger_rgb};\n\n\n        --bs-primary-color: var(--bs-dark);\n        --bs-body-color: var(--bs-dark);\n        --bs-link-color: var(--bs-primary);\n        --bs-emphasis-color:  hsl(\n            from var(--bs-dark)\n                calc(h - 0.15)\n                calc(s - 0.15)\n                calc(l - 0.15)\n                / \n                alpha\n          );\n\n        \n        --bs-secondary-color: var(--bs-secondary);\n\n        --bs-primary-hover-bg: hsl(\n            from var(--bs-primary)\n                calc(h - (l*0.15))\n                calc(s - (s*0.15))\n                calc(l - (l*0.15))\n                / \n                alpha\n          );\n\n        --bs-primary-active-bg: hsl(\n            from var(--bs-primary)\n                calc(h - (l*0.20))\n                calc(s - (s*0.20))\n                calc(l - (l*0.20))\n                / \n                alpha\n          );\n\n        --bs-primary-subtle-bg: hsl(\n            from var(--bs-primary)\n                calc(h + (l*0.20))\n                calc(s + (s*0.20))\n                calc(l + (l*0.20))\n                / \n                alpha\n          );\n\n\n\n        --bs-secondary-hover-bg: hsl(\n            from var(--bs-secondary)\n                calc(h - (l*0.15))\n                calc(s - (s*0.15))\n                calc(l - (l*0.15))\n                / \n                alpha\n          );\n\n        --bs-secondary-active-bg: hsl(\n            from var(--bs-secondary)\n                calc(h - (l*0.20))\n                calc(s - (s*0.20))\n                calc(l - (l*0.20))\n                / \n                alpha\n          );\n\n        --bs-secondary-subtle-bg: hsl(\n            from var(--bs-secondary)\n                calc(h + (l*0.20))\n                calc(s + (s*0.20))\n                calc(l + (l*0.20))\n                / \n                alpha\n          );\n\n\n\n\n        \n\n    }\n\n\n\n\n   .filter-src {\n    filter: invert(48%) sepia(79%) saturate(2476%) hue-rotate(86deg) brightness(118%) contrast(119%);\n\n   }\n\n\n    button.btn-primary {\n        --bs-btn-color: #fff;\n        --bs-btn-bg: var(--bs-primary);\n        --bs-btn-border-color: var(--bs-primary);\n        --bs-btn-hover-color: #fff;\n        --bs-btn-hover-bg: var(--bs-primary-hover-bg);\n        --bs-btn-hover-border-color: var(--bs-primary-hover-bg);\n        --bs-btn-focus-shadow-rgb: 49, 132, 253;\n        --bs-btn-active-color: #fff;\n        --bs-btn-active-bg: var(--bs-primary-active);\n        --bs-btn-active-border-color: var(--bs-primary-active);\n        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n        --bs-btn-disabled-color: #fff;\n        --bs-btn-disabled-bg: var(--bs-primary);\n        --bs-btn-disabled-border-color: var(--bs-primary);\n    }\n\n\n    button.btn-secondary {\n        --bs-btn-color: #fff;\n        --bs-btn-bg: var(--bs-secondary);\n        --bs-btn-border-color:var(--bs-secondary);\n        --bs-btn-hover-color: #fff;\n        --bs-btn-hover-bg: var(--bs-secondary-hover-bg);\n        --bs-btn-hover-border-color:var(--bs-secondary-hover-bg);\n        --bs-btn-focus-shadow-rgb: 130, 138, 145;\n        --bs-btn-active-color: #fff;\n        --bs-btn-active-bg: var(--bs-secondary-active-bg);\n        --bs-btn-active-border-color:var(--bs-secondary-active-bg);\n        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n        --bs-btn-disabled-color: #fff;\n        --bs-btn-disabled-bg:var(--bs-secondary);\n        --bs-btn-disabled-border-color:var(--bs-secondary);\n    }\n\n    </style>\n    `\n}\n\n\n","export function features() {\n    /**\n     *\n     *\n     */\n\n    return `\n    \n<div class=\"container px-4 py-5\">\n    \n    <div class=\"row align-items-md-center g-5 py-5\">\n    \n        <div class=\"col col-12 col-md-6 d-flex flex-column align-items-start gap-2\">\n\n\n            {{#_headingImage}}\n                <div class=\"d-none d-md-block\">\n                    <img src=\"{{_headingImage}}\" class=\"d-block mx-lg-auto img-fluid\" alt=\"{{_headingImage}}\" width=\"700\" height=\"500\" loading=\"lazy\">\n                </div>\n            \n            {{/_headingImage}}\n            \n            {{#_heading1}}\n                <h2 class=\"fw-bold text-body-emphasis\">{{_heading1}}</h2>\n            {{/_heading1}}\n\n            {{#_headingDescription}}\n                <p class=\"lead\">{{_headingDescription}}</p>\n            {{/_headingDescription}}\n            \n            {{#potentialAction}}\n                <a href=\"{{potentialAction.url}}\" class=\"btn btn-primary btn-lg\">{{potentialAction.name}}</a>\n            {{/potentialAction}}\n            \n        </div>\n            \n        <div class=\"col\">\n            \n            <div class=\"row row-cols-1 row-cols-sm-2 g-4\">\n            \n                {{ #positiveNotes }}\n                    {{#positiveNotes.item}}\n                        \n                        <div class=\"col  d-flex flex-column gap-2\">\n    \n                            \n                            {{#positiveNotes.item._headingImage}}\n\n        \n                                    <div class=\"row d-none d-md-block\">\n                                        <div class=\"col-md-4\">\n                                        \n                                            <img \n                                            src=\"{{positiveNotes.item._headingImage}}\" \n                                            class=\"d-block mx-lg-auto img-fluid\" \n                                            alt=\"{{positiveNotes.item.._headingImage}}\" \n                                            loading=\"lazy\"\n                                            >\n                                            </div>\n                                        <div class=\"col-md-4\">\n                                            </div>\n                                        <div class=\"col-md-4\">\n                                            </div>\n                                    </div>\n                            {{/positiveNotes.item._headingImage}}\n                    \n                               \n                            <h4 class=\"fw-semibold mb-0 mt-3 text-body-emphasis\">{{positiveNotes.item._heading1}}</h4>\n                            <p class=\"\">{{positiveNotes.item._headingDescription}}</p>\n                            \n                            {{#positiveNotes.item.potentialAction}}\n                                <a href=\"{{positiveNotes.item.potentialAction.url}}\" class=\"btn btn-primary btn-lg\">\n                                    {{hasPart.potentialAction.name}}\n                                </a>\n                            {{/positiveNotes.item.potentialAction}}\n                            \n                        </div>\n                    {{ /positiveNotes.item }}\n                {{ /positiveNotes }}\n                \n            \n            </div>\n        </div>\n    </div>\n</div>\n\n\n`;\n}\n","\n\n\nexport function footer(){\n\n    return `\n            \n                <div class=\"container\">\n                    <footer \n                    class=\"row row-cols-1 row-cols-sm-2 row-cols-md-5 py-5 my-5 border-top bg-body-tertiary bg-dark border-bottom border-body\" data-bs-theme=\"dark\"\n                    >\n                    \n                        <div class=\"col mb-3\">\n                        \n                            <a href=\"/\" class=\"d-flex align-items-center mb-3 link-body-emphasis text-decoration-none\">\n                                <svg class=\"bi me-2\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"></use></svg>\n                            </a>\n                            \n                            <p class=\"text-body-secondary\">© 2024</p>\n                        </div>\n\n                        <div class=\"col mb-3\">\n\n                        </div>\n\n                        <div class=\"col mb-3\">\n                         \n                        </div>\n\n                        <div class=\"col mb-3\">\n                            \n                        </div>\n\n                        <div class=\"col mb-3\">\n                            \n\n                               {{ #hasPart | filter:@type=WPFooter }}\n\n                                   <h5>{{ hasPart.name }}</h5>\n                                   <ul class=\"nav flex-column\">\n\n                                    {{ #hasPart.hasPart }}\n                                        \n                                        <li class=\"nav-item mb-2\">\n                                            <a href=\"{{ hasPart.hasPart.url }}\" class=\"nav-link p-0 text-body-secondary\">{{ hasPart.hasPart.name }}</a>\n                                        </li>\n\n                                    {{ /hasPart.hasPart }}\n                                    \n                                {{ /hasPart }}\n\n                                \n                            </ul>\n                        </div>\n                    </footer>\n                </div>\n                \n                `\n}","\n\n\n\nexport function header(){\n        /**\n         * @type {string}\n         */\n\n        let content = `\n        \n            <header class=\"p-3 text-bg-dark\">\n                <div class=\"container\">\n                    <nav class=\"navbar navbar-expand-lg\">\n                        <div class=\"container-fluid\">\n                            <a class=\"navbar-brand\" href=\"/\">{{name}}</a>\n                            <button\n                                class=\"navbar-toggler\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarSupportedContent\"\n                                aria-controls=\"navbarSupportedContent\"\n                                aria-expanded=\"false\"\n                                aria-label=\"Toggle navigation\"\n                            >\n                                <span class=\"navbar-toggler-icon\"></span>\n                            </button>\n            \n                            <div\n                                class=\"collapse navbar-collapse\"\n                                id=\"navbarSupportedContent\"\n                            >\n                                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                    {{#hasPart | filter:@type=WPHeader }}\n                                    {{#hasPart.hasPart}}\n            \n                                    <li class=\"nav-item\">\n                                        <a\n                                            href=\"{{hasPart.hasPart.url}}\"\n                                            class=\"nav-link px-2 text-secondary\"\n                                            >{{hasPart.hasPart.name}}</a\n                                        >\n                                    </li>\n            \n                                    {{/hasPart.hasPart}} {{/hasPart }}\n                                </ul>\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </header>\n\n            `\n\n        return content\n\n        \n}","\n\n\nexport function hero(){\n\n    return `\n            \n                <div class=\"container col-xxl-8 px-4 py-5\">\n                    <div class=\"row flex-lg-row-reverse align-items-center g-5 py-5\">\n                         \n                        <div class=\"d-none d-md-block col-10 col-sm-8 col-lg-6\">\n                         \n                            {{#_headingImage}}\n                               \n                                <img src=\"{{_headingImage}}\" class=\"d-block mx-lg-auto img-fluid filter-src\" alt=\"{{_headingImage}}\" width=\"700\" height=\"500\" loading=\"lazy\" />\n                               \n                            {{/_headingImage}}\n                            \n                        </div>\n\n\n                        \n                        <div class=\"col-lg-6\">\n\n                            {{#_heading1 }}\n                                <h1 class=\"display-5 fw-bold  lh-1 mb-3\">{{_heading1}}</h1>\n                            {{/_heading1 }}\n                            \n                            {{#_headingDescription }}\n                                <p class=\"lead\">{{_headingDescription}}</p>\n                            {{/_headingDescription }}\n\n                            {{#potentialAction}}\n                                <div class=\"d-grid gap-2 d-md-flex justify-content-md-start\">\n                                    <button type=\"button\" href=\"{{potentialAction.url}}\" class=\"btn btn-primary btn-lg px-4 me-md-2\">\n                                        {{potentialAction.name}}\n                                    </button>\n                                </div>\n                            {{/potentialAction}}\n                            \n                        </div>\n\n                        \n                    </div>\n                </div>\n           \n                    \n                    `\n\n        \n}","\n\n\nexport function howTo(){\n\n    return `\n\n\n\n      \n            <div class=\"container col-xxl-8 px-4 py-5\">\n                <div class=\"row  align-items-center g-5 py-5\">\n\n\n\n\n                    <div class=\"col-10 col-sm-8 col-lg-6\">\n\n                        {{#_headingImage}}\n                            <div class=\"d-none d-md-block\">\n                                <img src=\"{{_headingImage}}\" class=\"d-block mx-lg-auto img-fluid filter-src\" alt=\"{{_headingImage}}\" width=\"700\" height=\"500\" loading=\"lazy\" />\n                            </div>\n\n                        {{/_headingImage}}\n                        \n                        {{#_heading1 }}\n                            <h1 class=\"display-5 fw-bold  lh-1 mb-3\">{{_heading1}}</h1>\n                        {{/_heading1 }}\n                        \n                        {{#_headingDescription }}\n                            <p class=\"lead\">{{_headingDescription}}</p>\n                        {{/_headingDescription }}\n\n                        \n\n                    </div>\n\n\n\n                    <div class=\"col-lg-6\">\n\n                        <!-- howTo step -->\n                        {{#step }}\n                             \n                                <!-- item start -->\n                                    <div class=\"row\">\n    \n                                        {{#step._headingImage}}\n                                            <div class=\"d-none d-md-block col col-3\">\n                                                <img \n                                                src=\"{{step._headingImage}}\" \n                                                class=\"d-block mx-lg-auto img-fluid filter-src\" \n                                                alt=\"{{step._headingImage}}\" \n                                                width=\"700\" height=\"500\" loading=\"lazy\" \n                                                />\n                                            </div>    \n                                        {{/step._headingImage}}\n\n                                        <div class=\"col-2 p-0 me-5\">\n                                            <div class=\"bg-primary m-0 text-white text-center\">\n                                                <p class=\"fs-1\"> {{step.position}} </p>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-10 d-md-none\">\n                                        </div>\n                                        \n                                        <div class=\"col\">\n                                            <h4>{{step._heading1}}</h4>\n                                            <p>{{step._headingDescription}}</p>\n                                        </div>\n                                        \n                                    </div>\n                                <!-- item stop -->\n                            \n                        {{/step}}\n\n\n                        \n                        \n\n\n\n\n                        \n\n                    </div>\n\n\n                </div>\n            </div>\n       \n\n    \n    \n    \n    `\n    \n}","\n\nexport const icons = {\n    drag: dragArrow,\n    expandOn: expandOn,\n    expandOff: expandOff,\n}\n\n\nfunction dragArrow(){\n    /**\n     * Creates a drag arrow\n     */\n\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrows-move\" viewBox=\"0 0 16 16\">\n  <path fill-rule=\"evenodd\" d=\"M7.646.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 1.707V5.5a.5.5 0 0 1-1 0V1.707L6.354 2.854a.5.5 0 1 1-.708-.708zM8 10a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7.5 14.293V10.5A.5.5 0 0 1 8 10M.146 8.354a.5.5 0 0 1 0-.708l2-2a.5.5 0 1 1 .708.708L1.707 7.5H5.5a.5.5 0 0 1 0 1H1.707l1.147 1.146a.5.5 0 0 1-.708.708zM10 8a.5.5 0 0 1 .5-.5h3.793l-1.147-1.146a.5.5 0 0 1 .708-.708l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L14.293 8.5H10.5A.5.5 0 0 1 10 8\"/>\n</svg>`\n}\n\n\nfunction expandOn(){\n\n    return `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n</svg>`\n}\n\nfunction expandOff(){\n\n    return `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"/>\n</svg>`\n}","\n\nexport function jsonld(record){\n    /**\n     * Returns the record in JSON ld format\n     * \n     */\n\n\n    if(!record || record == null){ return ''}\n    \n    record['@context'] = record['@context'] || \"https://schema.org/\"\n\n    return `\n    \n    <script type=\"application/ld+json\">\n\n        ${JSON.stringify(record, null, 4)}\n        \n    </script>\n\n    `\n    \n}","\n\n\nexport function navbar(){\n\n\n\n    return `\n\n\n        <nav class=\"navbar navbar-expand-lg bg-dark border-bottom border-body\" data-bs-theme=\"dark\">\n        \n            <div class=\"container-fluid\">\n            \n                <a class=\"navbar-brand\" href=\"#\">{{name}}</a>\n                \n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                \n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                \n                    <ul class=\"navbar-nav\">\n                    \n                        {{ #hasPart | filter:@type=WPHeader }}\n\n                            {{ #hasPart.hasPart }}\n                                <li class=\"nav-item\">\n                                \n                                    <a \n                                      class=\"nav-link active\" \n                                      aria-current=\"page\" \n                                      href=\"{{hasPart.hasPart.url}}\"\n                                      >\n                                      \n                                        {{hasPart.hasPart.name}}\n                                        \n                                    </a>\n                                    \n                                </li>\n                            \n                            {{/hasPart.hasPart }}\n                        {{/hasPart }}\n                        \n                    </ul>\n                </div>\n            </div>\n        </nav>\n    \n    \n    `\n    \n}","export function page() {\n    return `<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>{{title}}</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n\n  {{head_content}}\n  \n</head>\n\n<body>\n\n  {{content}}\n  \n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\n    integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\n    crossorigin=\"anonymous\"></script>\n  <script type=\"module\" src=\"script.js\"></script>\n</body>\n\n</html>`;\n}\n","import { actionMenu } from './actionMenu.js';\n\n\n\nexport function pill( prefixes=[]) {\n\n    prefixes = prefixes || [];\n\n    let prefix = prefixes.join('.')\n\n    if(prefix != ''){\n        prefix = prefix + '.'\n    }\n\n\n    return ` <div class=\"row align-items-center mt-2 mb-2\" >\n\n                <div class=\"col col-12 col-sm-6 col-md-2\">\n\n                    <img \n                    src=\"{{${prefix}_headingImage}}\" \n                    class=\"img-fluid\" \n                    alt{{${prefix}_headingDescription}} \n\n                    onerror=\"this.style.display='none'\"\n                    >\n\n                </div>\n\n                <div class=\"col col-12 col-sm-6 col-md-10\">\n                    <div class=\"row d-flex\">\n                        <div class=\"col col-md-auto\">\n                            {{ ${prefix}_heading1 }}\n                        </div>\n\n                        <div class=\"col col-12 col-md-auto text-truncate \">\n                            {{ ${prefix}_heading2 }}\n                        </div>\n\n                        <div class=\"col col-12 col-md-auto \">\n                            {{ ${prefix}_headingStatus }}\n                        </div>\n\n                        <div class=\"col col-12 col-md-auto text-truncate\">\n                            <a href=\"{{ ${prefix}url }}\">Link</a>\n                        </div>\n                    </div>\n                </div>\n\n             </div>\n    `;\n}\n","\n\nexport function pricing(){\n\n        return `\n\n        <div class=\"container\">\n\n            <div class=\"p-3 mt-4 pb-md-4 mx-auto text-center\">\n                {{#_heading1}}\n                    <h2 class=\"display-4 fw-normal text-body-emphasis\">{{_heading1}}</h2>\n                {{/_heading1}}\n    \n                {{#_headingDescription}}\n                    <p class=\"fs-5 text-body-secondary\">{{_headingDescription}}</p>\n                {{/_headingDescription}}\n            </div>\n\n\n            <div class=\"row row-cols-1 row-cols-md-3 mt-3 mb-3 text-center\">\n                {{#itemListElement}} {{#itemListElement.item}}\n                <div class=\"col\">\n                    <div class=\"card mb-4 rounded-3 shadow-sm\">\n                        <div class=\"card-header py-3\">\n                            <h4 class=\"my-0 fw-normal\">\n                                {{itemListElement.item.itemOffered.name}}\n                            </h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <h1 class=\"card-title pricing-card-title\">\n                                {{itemListElement.item.priceSpecification.price}}<small\n                                    class=\"text-body-secondary fw-light\"\n                                    >/{{itemListElement.item.priceSpecification.referenceQuantity.unitCode}}</small\n                                >\n                            </h1>\n\n                            <ul class=\"list-unstyled mt-3 mb-4\">\n                                {{#itemListElement.item.additionalProperty}}\n                                <li>{{itemListElement.item.additionalProperty.value}}</li>\n                                {{/itemListElement.item.additionalProperty}}\n                            </ul>\n                            {{#itemListElement.item.potentialAction}}\n                            <button\n                                href=\"{{itemListElement.item.potentialAction.url}}\"\n                                type=\"button\"\n                                class=\"w-100 btn btn-lg btn-outline-primary\"\n                            >\n                                {{itemListElement.item.potentialAction.name}}\n                            </button>\n                            {{/itemListElement.item.potentialAction}}\n                        </div>\n                    </div>\n                </div>\n                {{/itemListElement.item}} {{/itemListElement}}\n            </div>\n        </div>\n\n\n`\n\n    \n}","\nimport { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\nexport function record(record){\n\n    let listRecord = {\n        '@type': record[\"@type\"],\n        '@id': record[\"@id\"],\n        itemListElement: []\n    }\n\n\n    let innerContent = ''\n    for(let k of Object.keys(record)){\n\n        let c =  ` <dt class=\"col-sm-3\">${k}</dt>`\n\n        for(let v of h.toArray(record[k])){\n\n            if(h.isNotNull(v?.['@type'])){\n                v = record(v)\n            } \n            c +=  ` <dd class=\"col-sm-9\">${record[k]}</dd>`\n            \n        }\n        innerContent += c\n\n    }\n\n\n    let content = `\n\n        <dl class=\"row\">\n            ${innerContent}\n        </dl>    \n    \n    `\n\n    \n\n    return content\n\n    \n}","\n\n\nexport function userConsent(){\n\n\n\n    return `\n\n    <script src=\"/consent/consent.js\">\n\n        \n\n\n    </script>\n    \n    `\n\n    \n\n    return `\n\n        <style>\n#consentModal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modal-content {\n    background: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    text-align: center;\n    width: 300px;\n}\n\n.modal-content h2 {\n    margin-top: 0;\n}\n\n.modal-content button {\n    margin: 10px;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n#acceptConsent {\n    background-color: #4CAF50;\n    color: white;\n}\n\n#declineConsent {\n    background-color: #f44336;\n    color: white;\n}\n\n\n        </style>\n    \n        <script>\n\n            function showConsentModal() {\n                // Check if consent has already been given\n                if (localStorage.getItem('userConsent') === 'true') {\n                    return; // Consent already given, no need to show modal\n                }\n            \n                // Create the modal HTML\n                const modal = document.createElement('div');\n                modal.id = 'consentModal';\n                modal.innerHTML = '<div class=\"modal-content\"><h2>We Value Your Privacy</h2><p>We use cookies to improve your experience on our website. By continuing, you consent to our use of cookies.</p><button id=\"acceptConsent\">Accept</button><button id=\"declineConsent\">Decline</button></div>';\n            \n                // Append modal to body\n                document.body.appendChild(modal);\n            \n                // Event listeners for buttons\n                document.getElementById('acceptConsent').addEventListener('click', function() {\n                    localStorage.setItem('userConsent', 'true');\n                    document.body.removeChild(modal);\n                });\n            \n                document.getElementById('declineConsent').addEventListener('click', function() {\n                    localStorage.setItem('userConsent', 'false');\n                    document.body.removeChild(modal);\n                });\n            }\n            \n            // Call the function to show the modal on page load\n            window.onload = showConsentModal;\n\n\n\n\n\n\n        </script>\n    \n    \n    \n    \n    `\n}","\n\n\n\nexport function contentHead(){\n\n    return `\n    \n    \n   <!-- AOS 3.0.0-beta.6 plugin CSS (Animations) -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/aos@next/dist/aos.css\" />\n\n\n\n  \n\n    \n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\">\n\n\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\n     \n    \n    \n    `\n    \n}","\n\nexport function contentBody(){\n\n    return `\n    \n\n\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\n        integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\n        crossorigin=\"anonymous\"></script>\n\n    <script src=\"https://unpkg.com/aos@next/dist/aos.js\"></script>\n     <script>\n        AOS.init();\n      </script>\n\n    \n    \n    `\n}","import { krakenBaseHelpers as h} from '../../base/krakenBaseHelpers.js'\n\n\nexport function propertyValues(record){\n\n  \n\n    let innerContent = ''\n    for(let pv of record._propertyValues){\n\n\n       let c = `\n       <tr>\n          <td>${pv.object.propertyID}</td>\n          <td>${pv?.['@type']}</td>\n          <td>${pv.object.value}</td>\n          <td>${pv.metadata.credibility}</td>\n          <td>${h.date.human.date(pv.metadata.createdDate)}</td>\n        </tr>\n\n       `\n\n       innerContent += c\n    }\n\n\n    let content = `\n\n       <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">PropertyID</th>\n              <th scope=\"col\">Action</th>\n              <th scope=\"col\">Value</th>\n              <th scope=\"col\">credibility</th>\n              <th scope=\"col\">createdDate</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${innerContent}\n            \n         </tbody>\n</table>\n\n    `\n\n\n\n    return content\n\n\n}","\n\nimport { krakenThing  } from './src/KrThing.js'\nimport { krakenThings  } from './src/KrThings.js'\n//import { KrElementEngine } from './src/KrElementEngine.js'\n\nexport const krakenClasses = {\n    KrThing: krakenThing.KrThing,\n    KrThings: krakenThings.KrThings,\n    //KrElementEngine: KrElementEngine\n}","\nimport { krakenHelpers as h} from '../../krakenHelpers/krakenHelpers.js'\n\n\n\nclass KrThing{\n    constructor(record_or_record_type, record_id, metadata){\n\n        // Property that can be used to differentiate from normal objects\n\n        this.id = h.base.uuid.new()\n        this.instanceof = 'KrThing'\n        this._system = null\n        this._record_type = null\n        this._record_id = null\n\n\n        this._thingsDB = null\n\n        this._callbacks = {}\n\n        this._eventRecordCache = null\n\n\n        \n        if(h.thing.isThing(record_or_record_type)){\n            this.system = h.thing.toThing(record_or_record_type, null, metadata)\n        } else {\n            this.system = h.thing.new(record_or_record_type, record_id, metadata)\n        }\n\n       \n        this._convertChildrenThingsRecordsToThingObjects()\n        \n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  ThingsDB helpers \n    // -----------------------------------------------------\n\n    get thingsDB(){\n        /**\n         * Get the repository of things \n         */\n        return this._thingsDB || null\n        \n    }\n\n    set thingsDB(value){\n        /**\n         * Set the repository of things \n         */\n        this._thingsDB = value\n\n    }\n    \n    getCallbacks(callbackType){\n        /**\n         * Get the repository of things \n         */\n        if(h.isNotNull(this.thingsDB)){\n            return this._thingsDB.callbacksGet(this.record_type, this.record_id, callbackType)\n        } else {\n            return this._callbacks?.[callbackType]\n        }\n      \n\n    }\n\n    setCallbacks(callback, callbackType){\n        /**\n         * Set the repository of things \n         */\n        if(h.isNotNull(this.thingsDB)){\n            this._thingsDB.callbacksSet(this.record_type, this.record_id, callback, callbackType)\n        } else {\n            this._callbacks[callbackType] = this._callbacks?.[callbackType] || []\n            this._callbacks[callbackType].push(callback)\n        }\n    }\n    \n    \n    // -----------------------------------------------------\n    //  Base \n    // -----------------------------------------------------\n\n    toString(){\n        /**\n         * Returns the string representation of the thing\n         * @returns {String} The string representation of the thing\n         */\n        return this._system\n    }\n\n    toJSON(){\n        /**\n         * Returns the record as object\n         * @returns {Object} The record as object\n         */\n\n        \n        let record = h.thing.record.get(this.system)\n        \n        if(h.isNotNull(record.previousItem)){\n            record.previousItem = h.thing.ref.get(record.previousItem)\n        }\n        if(h.isNotNull(record.nextItem)){\n            record.nextItem = h.thing.ref.get(record.nextItem)\n        }\n\n        \n        return h.thing.record.get(this.system)\n        \n    }\n\n\n    get json(){\n        /**\n         * Returns the record as object\n         * @returns {Object} The record as object\n         */\n        return JSON.stringify(this.record, null, 4)\n    }\n\n\n\n    get _propertyValues(){\n        return this.system?._propertyValues\n    }\n\n    set _propertyValues(value){\n        this.system._propertyValues = value\n    }\n\n    get _version(){\n        return this._system._version\n    }\n\n    \n    get system(){\n        /**\n         * Provides abstraction for event handling and cleanup \n         */\n        //this._eventMonitoringCache = h.thing.hash(this._system)\n\n\n        // Returns system record from thingsDB repository if exists, else uses local\n\n        if(h.isNotNull(this._thingsDB)){\n            return this._thingsDB.systemGet(this.record_type, this.record_id)\n        } else {\n            return this._system\n            \n        }\n        \n    }\n\n    set system(value){\n        /**\n         * Event monitoring\n         */\n\n        // Write to thingsDB if exists\n        if(h.isNotNull(this._thingsDB)){\n            this._thingsDB.systemSet(value)\n\n        } else {\n            this._system = value\n        }\n        \n        \n        this._record_type = h.thing.record_type.get(value)\n        this._record_id = h.thing.record_id.get(value)\n\n        \n        this._convertChildrenThingsRecordsToThingObjects()\n\n        // Broadcast event \n        if(this.recordHasChanged() === true){\n            this.broadcastEvent('thing', this.ref)\n        } \n        \n    }\n\n\n    // -----------------------------------------------------\n    //  Event record cache\n    //  Cache of the record from the last event\n    //  Used to decide if broadcast or not (somehting changed)\n    // -----------------------------------------------------\n\n\n    recordHasChanged(){\n        /**\n         * Returns true if the record has changed since last event broadcast\n         */\n\n        \n        let hashValue = h.base.hash.get(this.record)\n\n        let oldValue = this.getEventRecordCache()\n        \n        if (hashValue != oldValue){\n            return true\n        }\n        return false\n    }\n    \n    getEventRecordCache(){\n        /**\n         * Retrieves the record from the last broadcast\n         * \n         */\n        if(h.isNotNull(this.thingsDB)){\n            return this.thingsDB.eventRecordCacheGet(this.record_type, this.record_id)\n        } else {\n            return this._eventRecordCache\n        }\n        \n        \n    }\n\n    storeEventRecordCache(){\n        /**\n         * Sets the record from the last broadcast\n         * \n         */\n\n        \n        let hashValue = h.base.hash.get(this.record)\n\n        if(h.isNotNull(this.thingsDB)){\n            this.thingsDB.eventRecordCacheSet(this.record_type, this.record_id, hashValue)\n        } else {\n            this._eventRecordCache = hashValue\n        }\n    }\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    \n    \n    _convertChildrenThingsRecordsToThingObjects(){\n        /**\n         * Converts the children things records to thing objects\n         * @returns {Object} The record\n         * \n         */\n\n        // Get children things\n        let children = h.thing.children.get(this.system, false)\n\n        children = children.filter(x => h.thing.isNotSame(x, this._system))\n\n        if(h.isNull(children)){ return }\n\n        // Convert children things to thing objects\n        children = children.map(x => KrThing.toThing(x, null, this._thingsDB))\n\n\n        // Replace values in things by equivalent class object\n        if(h.isNotNull(children)){\n           \n            this._system = h.thing.children.replaceWithRecord(this.system, children)\n            \n        }\n        \n        return \n\n\n    }\n    \n    // -----------------------------------------------------\n    //  Properties \n    // -----------------------------------------------------\n\n    get record_type(){\n        /**\n         * Returns the record type\n         * @returns {String} The record type\n         * \n         */\n        if(h.isNull(this._record_id)){\n            this._record_type =  h.thing.record_type.get(this.system)\n        }\n        return this._record_type\n    }\n    set record_type(value){\n        /**\n         * Sets the record type\n         * @param {String} value The record type\n         * @returns {Object} The record\n         */\n         this.system = h.thing.record_type.set(this.system, value)\n        this._record_type = value\n    }\n\n    \n    get record_id(){\n        /**\n         * Returns the record id\n         * @returns {String} The record id\n         */\n\n        if(h.isNull(this._record_id)){\n            this._record_id =  h.thing.record_id.get(this.system)\n        }\n        return this._record_id\n        \n    }\n    set record_id(value){\n        /**\n         * Sets the record id\n         * @param {String} value The record id\n         * @returns {Object} The record\n         */\n        this.system = h.thing.record_id.set(this.system, value)\n        this._record_id = value\n    }\n    \n\n    get ref(){\n        /**\n         * Returns the record ref (type and id)\n         * @returns {String} The record ref (type and id)\n         */\n        return h.thing.ref.get(this.system)\n    }\n    set ref(record){\n        /**\n         * Sets the record ref (type and id)\n         * @param {String} record_or_record_type The record ref (type and id)\n         * @param {String} record_id The record ref (type and id)\n         * @returns {Object} The record\n         */\n        this.system = h.thing.ref.set(this.system, record)\n    }\n\n    get record(){\n        /**\n         * Returns the record without propertyValues\n         * @returns {Object} The record without propertyValues\n         */\n        return h.thing.record.get(this.system)\n    }\n    set record(value){\n        /**\n         * Sets the record\n         * @param {Object} value The record\n         * @returns {Object} The record\n         */\n        this.system = h.thing.toThing(value)\n        \n    }\n\n    \n\n    get children(){\n        /**\n         * Get sub things\n         * \n         */\n\n        return h.thing.children.get(this.system)\n        \n    }\n\n    // -----------------------------------------------------\n    //  Values \n    // -----------------------------------------------------\n\n\n    get(propertyID){\n        return this.getValues(propertyID)\n    }\n    set(propertyID, value, metadata){\n        return this.setValue(propertyID, value, metadata)\n    }\n    add(propertyID, value, metadata){\n        return this.addValue(propertyID, value, metadata)\n    }\n    delete(propertyID, value, metadata){\n        return this.deleteValue(propertyID, value, metadata)\n    }\n\n    \n    getValues(propertyID){\n        /**\n         * Returns the values for a given property\n         * @param {String} propertyID The propertyID\n         * @returns {Object} The record values for a given property\n         */\n        return h.thing.values.get(this.system, propertyID)\n    }\n\n    getValue(propertyID){\n        /**\n         * Returns the value for a given property\n         * @param {String} propertyID The propertyID\n         * @returns {Object} The record value for a given property\n         */\n        return h.thing.value.get(this.system, propertyID)\n    }\n\n    setValue(propertyID, value, metadata){\n        /**\n         * Sets the value for a given property\n         * @param {String} propertyID The propertyID\n         * @param {Object} value The record value for a given property\n         * @returns {Object} The record\n         */\n        this.system = h.thing.value.set(this.system, propertyID, value, metadata)\n    }\n\n    replaceValue(propertyID, value, metadata){\n        /**\n         * Sets the value for a given property\n         * @param {String} propertyID The propertyID\n         * @param {Object} value The record value for a given property\n         * @returns {Object} The record\n         */\n        this.system = h.thing.value.replace(this.system, propertyID, value, metadata)\n    }\n    \n    addValue(propertyID, value, metadata){\n        /**\n         * Add the value for a given property\n         * @param {String} propertyID The propertyID\n         * @param {Object} value The record value for a given property\n         * @returns {Object} The record\n         */\n        this.system = h.thing.value.add(this.system, propertyID, value, metadata)\n    }\n\n    deleteValue(propertyID, value, metadata){\n        /**\n         * Add the value for a given property\n         * @param {String} propertyID The propertyID\n         * @param {Object} value The record value for a given property\n         * @returns {Object} The record\n         */\n        this.system = h.thing.value.delete(this.system, propertyID, value, metadata)\n    }\n\n    getPropertyValue(propertyID){\n        /**\n         * Returns the property value for a given property\n         * @param {String} propertyID The propertyID\n         * @returns {Object} The record value for a given property\n         */\n        return h.thing.propertyValue.get(this.system, propertyID)\n    }\n\n    getPropertyValues(propertyID){\n        /**\n         * Returns the property value for a given property\n         * @param {String} propertyID The propertyID\n         * @returns {Object} The record value for a given property\n         */\n        return h.thing.propertyValues.get(this.system, propertyID)\n    }\n\n    \n    // -----------------------------------------------------\n    //  Comparisons \n    // -----------------------------------------------------\n\n    isSame(other){\n        /**\n         * Checks if two records are the same type and id\n         * @param {Object} other The other record\n         * @returns {Boolean} True if the records are the same\n         */\n        return h.thing.isSame(this.system, other.system)\n    }\n\n    isNotSame(other){\n        /**\n         * Checks if two records are not the same type and id\n         * @param {Object} other The other record\n         * @returns {Boolean} True if the records are not the same\n         */\n        return h.thing.isNotSame(this.system, other.system)\n    }\n\n    eq(other){\n        /**\n         * Checks if two records are identically the same\n         * @param {Object} other The other record\n         * @returns {Boolean} True if the records are the same\n         */\n        return h.thing.eq(this.system, other.system)\n    }\n\n    ne(other){\n        /**\n         * Checks if two records are not identically the same\n         * @param {Object} other The other record\n         * @returns {Boolean} True if the records are not the same\n         */\n        return h.thing.ne(this.system, other.system)\n    }\n\n    lt(other){\n        /**\n         * Checks if this record is less than the other record\n         * @param {Object} other The other record\n         * @returns {Boolean} True if this record is less than the other record\n         */\n        return h.thing.lt(this.system, other.system)\n    }\n\n    gt(other){\n        /**\n         * Checks if this record is greater than the other record\n         * @param {Object} other The other record\n         * @returns {Boolean} True if this record is greater than the other record\n         */\n        return h.thing.gt(this.system, other.system)\n    }\n\n\n    // -----------------------------------------------------\n    //  Operations \n    // -----------------------------------------------------\n\n    merge(other){\n        /**\n         * Merges the other record into this record\n         * @param {Object} other The other record\n         * @returns {Object} The record\n         */\n        this.system = h.thing.merge(this.system, other.system)\n    }\n\n    mergeDeep(other){\n        /**\n         * Merges the other record into this record\n         * @param {Object} other The other record\n         * @returns {Object} The record\n         */\n        this.system = h.thing.mergeDeep(this.system, other.system)\n    }\n\n\n\n    // -----------------------------------------------------\n    //  List operations \n    // -----------------------------------------------------\n\n\n    insert(value, position){\n        /**\n         * Inserts a value into the list\n         * @param {Object} value The value\n         *    \n         */\n\n        console.log('Insert', value, position)\n        this.system = h.thing.list.insert(this.system, value, position)\n    }\n\n    get position(){\n        return h.thing.value.get(this.system, 'position')\n    }\n\n    set position(value){\n        return h.thing.value.set(this.system, 'position', value)\n    }\n\n    \n    // -----------------------------------------------------\n    //  Static operations \n    // -----------------------------------------------------\n\n    static isValid(record){\n        /**\n         * Checks if the record is valid\n         * @param {Object} record The record\n         * @returns {Boolean} True if the record is valid\n         */\n        return h.thing.isValid(record)\n    }\n    \n   \n\n    // -----------------------------------------------------\n    //  Array \n    // -----------------------------------------------------\n\n    static sort(things, orderBy, orderDirection) {\n        /**\n         * Sorts an array of things\n         * @param {Array} things\n         * @param {Object} conditions\n         * @returns {Array} The sorted array\n         */\n        return h.thing.sort(things, orderBy, orderDirection)\n    }\n\n    static filter(things, conditions) {\n        /**\n         * Filters an array of things\n         * @param {Array} things\n         * @param {Object} conditions\n         */\n        return h.thing.filter(things, conditions)\n    }\n\n    static find(things, record_or_record_type, record_id) {\n        /**\n         * Finds a record in an array of things by type and id\n         * @param {Array} things\n         * @param {Object} record_or_record_type The record type\n         * @param {String} record_id The record id\n         * @returns {Object} The record\n         */\n        return h.thing.find(things, record_or_record_type, record_id)\n    }\n\n    static push(things, thing) {\n        /**\n         * Pushes a thing into an array of things, merge if exists\n         * @param {Array} things\n         * @param {Object} thing The thing\n         * @returns {Array} The array of things\n         */\n        return h.thing.push(things, thing)\n    }\n\n    static pop(things, thing) {\n        /**\n         * Pops a thing from an array of things\n         * @param {Array} things\n         * @param {Object} thing The thing\n         * @returns {Array} The array of things\n         */\n        return h.thing.pop(things, thing)\n    }\n    \n    static dedupe(things) {\n        /**\n         * Dedupes an array of things\n         * @param {Array} things\n         * @returns {Array} The deduped array of things\n         */\n        return h.thing.dedupe(things)\n    }    \n\n    static length(things) {\n        /**\n         * Returns the length of an array of things\n         * @param {Array} things\n         * @returns {Number} The length of the array of things\n         */\n        return h.thing.length(things)\n    }\n\n\n\n   \n    // -----------------------------------------------------\n    //  Event listeners\n    // -----------------------------------------------------\n\n    addEventListener(eventType, callback){\n        /**\n         * Adds an event listener to the record\n         * @param {String} event The event\n         * @param {Function} callback The callback\n         * @returns {Object} The record\n         */\n\n        this.setCallbacks(callback, eventType)\n        if(eventType !='all'){\n             this.setCallbacks(callback, 'all')\n        }\n      \n    }\n\n    broadcastEvent(eventType, message){\n        /**\n         * Broadcasts an event to all listeners\n         * @param {String} event The event\n         * @param {Object} message The message\n         * @returns {Object} The record\n         */\n        let event = {\n            \"@type\": \"Action\",\n            \"@id\": h.uuid.new(),\n            object: this,\n            name: message\n        }\n\n\n        // Store copy of record in event Cache\n        this.storeEventRecordCache()\n        \n\n        // Execute callbacks\n        for(let callback of h.toArray(this.getCallbacks(eventType))){\n            callback(event)\n        }\n\n        for(let callback of h.toArray(this.getCallbacks('any'))){\n            callback(event)\n        }\n\n        for(let callback of h.toArray(this.getCallbacks('all'))){\n            callback(event)\n        }\n\n        \n      \n    }\n\n    \n\n    // -----------------------------------------------------\n    //  Shortcuts \n    // -----------------------------------------------------\n\n    \n    get name(){\n        return h.thing.value.get(this.system, 'name')\n    }\n\n    set name(value){\n        this.system = h.thing.value.set(this.system, 'name', value)\n    }\n\n    get url(){\n        return h.thing.value.get(this.system, 'url')\n    }\n    set url(value){\n        this.system = h.thing.value.set(this.system, 'url', value)\n    }\n\n    get itemListElement(){\n        return h.thing.values.get(this.system, 'itemListElement')\n    }\n    set itemListElement(value){\n        this.system = h.thing.values.set(this.system, 'itemListElement', value)\n    }\n\n    get item(){\n        return h.thing.value.get(this.system, 'item')\n    }\n    set item(value){\n        this.system = h.thing.value.set(this.system, 'item', value)\n    }\n\n\n    get other(){\n        return h.thing.value.get(this.system, 'other')\n    }\n    set other(value){\n        this.system = h.thing.value.set(this.system, 'other', value)\n    }\n\n    // -----------------------------------------------------\n    //  Static \n    // -----------------------------------------------------\n\n\n    static toThing(record_or_record_type, record_id){\n        /**\n         * Make a new thing\n         * @param {Object} record_or_record_type The record type\n         * @param {String} record_id The record id\n         * @returns {Object} The thing\n         */\n\n        // Error handling\n \n        if(record_or_record_type instanceof KrThing){\n            return record_or_record_type\n        }  \n            \n        // Convert\n        let t = new KrThing(record_or_record_type, record_id)\n      \n        return t\n        \n\n    }\n\n    \n    static new(record_or_record_type, record_id){\n        /**\n         * Make a new thing\n         * @param {Object} record_or_record_type The record type\n         * @param {String} record_id The record id\n         * @returns {Object} The thing\n         */\n\n        if(record_or_record_type instanceof KrThing){\n            return record_or_record_type\n        } else {\n            return new KrThing(record_or_record_type, record_id)\n        }\n        \n    }\n\n    \n}\n\n\n\nexport const krakenThing = {\n    KrThing: KrThing\n}","import { krakenHelpers as h} from '../../krakenHelpers/krakenHelpers.js'\nimport { krakenThing } from './KrThing.js'\n\n\nlet KrThing = krakenThing.KrThing\n\n\n\n\nclass KrThings {\n    /**\n     * Database of things or thing records\n     * Maintain integrity of first record input in database by merging additional to the first one.\n     */\n    constructor(toThing=true){\n\n        this._toThing = toThing\n\n        \n        this._thingDB = {} // _db of things \n\n\n        // Replaces local cache of thing objects\n        this._systemDB = {} //  db of system records for things\n        this._eventRecordCache = {}\n        this._callbacks = {}\n        \n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  Helpers methods for thing objects  \n    // -----------------------------------------------------\n\n\n    registerThing(thing){\n        /**\n         * Registers a thing in the database\n         */\n\n\n        // Skip if not thing object\n        if(thing?.instanceof != 'KrThing'){\n            return \n        }\n        \n        // Skip if already done\n        if(h.isNotNull(thing?.thingsDb)){\n            return\n        }\n\n        \n        let record_type = thing.record_type\n        let record_id = thing.record_id\n\n        // Retrieve local caches\n        this.systemSet(thing._system)\n        this.eventRecordCacheSet(thing._eventRecordCache)\n\n        for(let callbackType in thing._callbacks){\n            for(let callback of thing._callbacks[callbackType]){\n                this.callbacksSet(record_type, record_id, callback, callbackType)\n            }\n        }\n\n        // Add thingsDB to thing\n        thing.thingsDB = this\n\n        \n        \n        \n    }\n\n\n    thingGet(record_or_record_type, record_id){\n        /**\n         * Gets a thing from the database\n         */\n     \n\n        let record_type = record_or_record_type?.record_type || record_or_record_type?.['@type'] || record_or_record_type\n        record_id = record_or_record_type?.record_id || record_or_record_type?.['@id'] || record_id\n\n        return this._thingDB?.[record_type]?.[record_id]\n\n        \n        \n    }\n\n    thingSet(thing, overWrite = false){\n        /**\n         * Sets thing\n         */\n\n        let record_type = thing?.record_type || thing?.['@type'] \n        let record_id = thing?.record_id || thing?.['@id'] \n\n\n        this.systemSet(thing?.system || thing, overWrite)\n\n\n        this._thingDB[record_type] = this._thingDB?.[record_type] || {}\n        \n        this._thingDB[record_type][record_id] = this._thingDB?.[record_type]?.[record_id] || thing\n\n        return this._thingDB[record_type][record_id]\n\n    }\n\n    \n    systemGet(record_or_record_type, record_id){\n        /**\n         * Returns the official system record of a thing, overrides the local cache of a thing\n         */\n\n        let record_type = record_or_record_type?.record_type || record_or_record_type?.['@type'] || record_or_record_type\n        record_id = record_or_record_type?.record_id || record_or_record_type?.['@id'] || record_id\n        \n        return this._systemDB?.[record_type]?.[record_id]\n        \n    }\n\n    systemSet(record, overWrite = false){\n        /**\n         * Sets the official system record of a thing\n         */\n\n        let record_type = record?.record_type || record?.['@type'] \n        let record_id = record?.record_id || record?.['@id']\n\n        this._systemDB[record_type] = this._systemDB?.[record_type] || {}\n\n        // Merge with existing record if one present\n        if(overWrite == false){\n            let currentRecord = this.systemGet(record_type, record_id) \n            if(h.isNotNull(currentRecord)){\n                record = h.thing.merge(record, currentRecord)\n            }\n        }\n        \n        this._systemDB[record_type][record_id] = record\n        \n        return \n\n    }\n\n    eventRecordCacheGet(record_or_record_type, record_id){\n        /**\n         * Returns the official system record of a thing, overrides the local cache of a thing\n         */\n\n        let record_type = record_or_record_type?.record_type || record_or_record_type?.['@type'] || record_or_record_type\n        record_id = record_or_record_type?.record_id || record_or_record_type?.['@id'] || record_id\n\n        return this._eventRecordCache?.[record_type]?.[record_id]\n\n    }\n\n    eventRecordCacheSet(record_type, record_id, value){\n        /**\n         * Sets the official system record of a thing\n         */\n\n      \n\n        this._eventRecordCache[record_type] = this._eventRecordCache?.[record_type] || {}\n\n        this._eventRecordCache[record_type][record_id] = value\n\n        return \n\n    }\n\n    callbacksGet(record_or_record_type, record_id, callbackType){\n        /**\n         * Returns the official system record of a thing, overrides the local cache of a thing\n         */\n\n        let record_type = record_or_record_type?.record_type || record_or_record_type?.['@type'] || record_or_record_type\n        record_id = record_or_record_type?.record_id || record_or_record_type?.['@id'] || record_id\n\n        return this._callbacks?.[record_type]?.[record_id]?.[callbackType]\n\n    }\n\n    callbacksSet(record_type, record_id, callback, callbackType){\n        /**\n         * Sets the official system record of a thing\n         */\n\n        if(h.isArray(callback)){\n            callback.map(x => this.callbacksSet(record_type, record_id, x))\n            return\n        }\n\n\n        this._callbacks[record_type] = this._callbacks[record_type] || {}\n\n         this._callbacks[record_type][record_id] =  this._callbacks[record_type]?.[record_id] || {}\n\n        this._callbacks[record_type][record_id][callbackType] =  this._callbacks[record_type]?.[record_id]?.[callbackType] || []\n\n        \n        this._callbacks[record_type][record_id][callbackType].push(callback) \n\n        return \n\n    }\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    \n    \n    get(record_or_record_type, record_id){\n        /**\n         * Gets a record\n         * @param {Object} record_or_record_type The record or record\n         * @param {String} record_id The record id\n         * @returns {Object} The record\n         */\n\n        return this.thingGet(record_or_record_type, record_id)\n    }\n\n    getAll(){\n        /**\n         * Gets all things\n         * @returns {Array} The records\n         * \n         */\n\n        let things = []\n        for(let t of Object.keys(this._thingDB)){\n            for(let i of Object.keys(this._thingDB[t])){\n                things.push(this._thingDB[t][i])\n            }\n        }\n        return things\n    }\n\n    set(record, overwrite=false, depth=0){\n        /**\n         * Sets a record\n         * @param {Object} record_or_record_type The record or record\n         * @param {String} record_id The record id\n         * @returns {Object} The record\n         */\n\n\n        if(h.isNull(record)){\n            return null\n        }\n        \n        if(depth > 10){\n            return null\n        }\n       \n        if(h.isArray(record)){\n            return record.map(x => this.set(x, overwrite, depth))\n        }\n\n        // Transform to thing system record\n        record = h.thing.toThing(record)\n\n        // Transform to thing if flag is true\n        if(this._toThing==true){\n            record = KrThing.toThing(record)\n        }\n\n\n        // Add to db and get version in db\n        this.thingSet(record, overwrite)\n\n        // Add this db to thing \n        this.registerThing(record)\n\n        // Add children to db\n        let children = h.thing.children.get(record)  \n\n        \n        // change to records\n        if(h.isNotNull(children)){\n\n            if(this._toThing==true){\n                children = children.map(x => KrThing.toThing(x))\n            }\n\n            this.set(children, depth+1)\n\n            \n            //this.set(children, depth+1)\n            let cc = this.getAll()\n            record = h.thing.children.replaceWithRecord(record, cc)\n            \n        }\n        // Return record\n        return record\n\n        \n    }\n\n    delete(record_or_record_type, record_id){\n        /**\n         * Deletes a record\n         * @param {Object} record_or_record_type The record or record\n         * @param {String} record_id The record id\n         * @returns {Object} The record\n         */\n        this._db = h.thing.delete(this._db, record_or_record_type, record_id)\n    }\n\n    length(){\n        /**\n         * Gets the length of the things\n         * @returns {Number} The length\n         * \n         */\n        return this._db.length\n    }\n\n    \n    clear(){\n        /**\n         * Clears the things\n         * @returns {Array} The things\n         * \n         */\n\n        this._db = {}\n    }\n\n    merge(other){\n        /**\n         * Merges other db in this db\n         * @param {Object} other The other things\n         * @returns {Array} The things\n         */\n        this._db = h.thing.mergeLists(this._db, other)\n        \n    }\n\n    filter(conditions){\n        /**\n         * Filters the things\n         * @param {Object} conditions The conditions\n         * @returns {Array} The things\n         */\n        return h.thing.filter(this._db, conditions)\n    }\n\n    sort(conditions){\n        /**\n         * Filters the things\n         * @param {Object} conditions The conditions\n         * @returns {Array} The things\n         */\n        return h.thing.sort(this._db, conditions)\n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    execute(action){\n        /**\n         * Executes an action\n         */\n\n        // Retrieve action thing\n        this.set(action)\n        let actionThing = this.get(action)\n\n\n        console.log('ff', actionThing.system)\n        \n        // Get latest things\n        let things = new KrThings()\n        things.set(actionThing.system)\n\n        //\n        for(let t of things.getAll()){\n            let originalThing = this.get(t)\n            things.set(originalThing.system)\n        }\n\n        // \n        actionThing = things.get(action)\n\n\n        // Execute the action\n        let actionRecord = h.thing.execute(actionThing.system)\n\n        // Add back to engine\n        if(actionRecord?.actionStatus == 'CompletedActionStatus'){\n            this.set(actionRecord, true)\n        }\n\n        \n        return this.get(actionRecord)\n        \n    }\n\n    \n}\n\n\n\nexport const krakenThings = {\n    KrThings: KrThings\n}\n","\n\nimport { krakenApiHelpers}  from './krakenApiHelpers.js'\nimport { krakenExpressHelpers}  from './krakenExpressHelpers.js'\nimport { krakenBrowserHelpers}  from './krakenBrowserHelpers.js'\n\nexport const krakenHttpHelpers = {\n    api: krakenApiHelpers,\n    express: krakenExpressHelpers,\n    browser: krakenBrowserHelpers\n}","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\n\n\n\n\n\n\nexport const krakenApiHelpers = {\n\n    get: getApi,\n    post: postApi,\n    delete: deleteApi,\n    postFile: postApiFile,\n    getFile: getApiFile\n    \n}\n\n\nasync function getApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    url.search = new URLSearchParams(params);\n\n    url = String(url)\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status && 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n    let results = await response.json()\n\n    return results\n\n}\n\n\nasync function postApi(baseUrl, urlPath, records){\n\n    //Post \n\n    let requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(records)\n    };\n\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n\n    url = String(url)\n    const response = await fetch(url, requestOptions)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' + response.statusText);\n    }\n\n    return response.json()\n    \n}\n\n\nasync function getApiFile(filename, baseUrl, urlPath){\n\n    if(h.isNull(filename)){ \n        let parts = filename = baseUrl.split('/')\n            filename = parts[parts.length-1]\n    }\n    \n    try {\n\n        let url\n        if(h.isNotNull(urlPath)){\n            url = new URL(String(urlPath), String(baseUrl));\n        } else {\n            url = new URL( String(baseUrl));\n        }\n        \n        // Fetch the file from the provided URL\n        const response = await fetch(url);\n\n        // Check if the response is ok (status is in the range 200-299)\n        if (!response.ok) {\n            throw new Error(`Failed to fetch file: ${response.statusText}`);\n        }\n\n        // Convert the response data to a Blob object\n        const blob = await response.blob();\n\n        // Create a File object from the Blob\n        const file = new File([blob], filename, {\n            type: blob.type,\n        });\n\n        return file;\n        \n    } catch (error) {\n        console.error(\"Error fetching the file:\", error);\n        return null;\n    }\n\n    \n}\n\n\nasync function postApiFile(baseUrl, urlPath,  file){\n\n    //Post \n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    const formData = new FormData();\n    formData.append('file', file); // 'file' is the key expected by the API\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                // Include other headers if needed, such as authentication tokens\n                // 'Authorization': 'Bearer your-token'\n            }\n        });\n\n        if (response.ok) {\n            const result = await response.json();\n            return result;\n        } else {\n            \n        }\n    } catch (error) {\n        \n    }\n\n    return response\n\n}\n\nasync function deleteApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'DELETE',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    url.search = new URLSearchParams(params);\n\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n\n    return true\n    \n}\n\n","\nimport { krakenBaseHelpers as h} from '../base/krakenBaseHelpers.js'\n\n\nexport const krakenExpressHelpers = {\n\n    req: {\n        record_type: getRecordTypeFromReq,\n        record_id: getRecordIdFromReq,\n        collection: getCollectionFromReq,\n        records: getRecordsFromReq,\n        record: getRecordsFromReq,\n        params: getParamsFromReq,\n        file: getFileFromReq,\n        method: getMethodFromReq, \n        query: getQueryFromReq,\n        limit: getLimitFromReq,\n        offset: getOffsetFromReq,\n        orderBy: getOrderByFromReq,\n        orderDirection: getOrderDirectionFromReq,\n    },\n    record: {\n        webpage: getWebpageRecordFromReq,\n        device: getDeviceRecordFromReq,\n        action: getActionRecordFromReq\n    }\n\n}\n\n\nfunction getRecordsFromReq(req){\n    let records = req.body || null\n    return records\n}\n\n\nfunction getRecordTypeFromReq(req){\n    let record_type\n    record_type = req.params?.record_type || record_type\n    record_type = req.params?.['@type'] || record_type\n    record_type = req.query?.record_type || record_type\n    record_type = req.query?.['@type'] || record_type\n\n    return record_type\n\n}\n\nfunction getRecordIdFromReq(req){\n\n    let record_id\n    record_id = req.params?.record_id || record_id\n    record_id = req.params?.['@id'] || record_id\n    record_id = req.query?.record_id || record_id\n    record_id = req.query?.['@id'] || record_id\n\n    return record_id\n}\n\nfunction getCollectionFromReq(req){\n    let collection\n    collection = req.params?.collection || collection\n    collection = req.query?.collection || collection\n    while(collection.startsWith('/')){ collection = collection.slice(1, collection.length -1)}\n    while(collection.endsWith('/')){ collection = collection.slice(0, collection.length -2)}\n\n    return collection\n\n}\n\n\nfunction getParamsFromReq(req){\n\n    // Returns the params as an array\n    let params = {}\n    for(let k in req.params){\n        let value = req.params?.[k]\n        if(h.isNotNull(value)){\n            params[k] = value\n        }\n    }\n\n    return params\n\n}\n\nfunction getFileFromReq(req){\n\n    let files = []\n    for(let k of Object.keys(req.files)){\n\n        let subFiles = req.files[k]\n        if(!Array.isArray(subFiles)){ subFiles = [subFiles]}\n        for(let s of subFiles){\n            files.push(s)\n        }\n\n    }\n    return files\n\n\n}\n\n\nfunction getMethodFromReq(req){\n    return req.method\n}\n\nfunction getDomainFromReq(req){\n    return req.hostname\n}\n\nfunction getUrlFromReq(req){\n    let url = req.protocol + '://' + req.hostname + req.originalurl\n    return url\n}\n\nfunction getQueryFromReq(req){\n    let name = 'query'\n    let value = req.params?.[name] || req.query?.[name] || null\n    try{\n        value = JSON.parse(value)\n    } catch {}\n    return value\n}\n\nfunction getLimitFromReq(req){\n    let name = 'limit'\n    let value = req.params?.[name] || req.query?.[name] || null\n    return value\n}\n\nfunction getOffsetFromReq(req){\n    let name = 'offset'\n    let value = req.params?.[name] || req.query?.[name] || null\n    return value\n}\n\nfunction getOrderByFromReq(req){\n    let name = 'orderBy'\n    let value = req.params?.[name] || req.query?.[name] || null\n    return value\n}\n\nfunction getOrderDirectionFromReq(req){\n    let name = 'orderDirection'\n    let value = req.params?.[name] || req.query?.[name] || null\n    return value\n}\n\n\n\n    \n\n\nfunction getActionRecordFromReq(req){\n\n    let action = {\n        \"@type\": \"ViewAction\",\n        \"@id\": String(crypto.randomUUID()),\n        object: getWebpageRecordFromReq(req),\n        instrument: getDeviceRecordFromReq(req),\n        agent: getAgentRecordFromReq(),\n        timeStart: new Date(),\n        actionStatus: 'CompletedActionStatus'\n    }\n\n    return action\n\n    \n}\n\nfunction getWebpageRecordFromReq(req){\n\n    let record = {\n        \"@type\": \"WebPage\",\n        \"url\": getUrlFromReq(req)\n    }\n    return record\n}\n\nfunction getDeviceRecordFromReq(req){\n\n    let record = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Product\",\n      \"name\": \"Computer Device\",\n      \"identifier\": {\n        \"@type\": \"PropertyValue\",\n        \"name\": \"IP Address\",\n        \"value\": \"192.168.0.1\"\n      }\n        \n    }\n    return record\n    \n}\n\nfunction getAgentRecordFromReq(req){\n    /**\n     * Returns the agent record\n     */\n\n\n    \n    \n    let record = {\n        '@type': \"Person\",\n        \"@id\": h.uuid.new(),\n        \"knowsLanguage\": req.headers['accept-language'],\n        \n    }\n\n    return record\n    \n     \n}","\n\n\nexport const krakenBrowserHelpers = {\n    sendData: sendData,\n}\n\n\nfunction sendData(record) {\n    /**\n     * @type {string}\n     *\n     */\n\n    console.log(\"sendData start\");\n    console.log(record);\n\n    const data = JSON.stringify(record);\n\n    navigator.sendBeacon(apiUrl, data);\n\n    console.log(\"sendData end\");\n}","\nimport { krakenElementThingEventHelpers } from './src/krakenElementThingEventHelpers/krakenElementThingEventHelpers.js'\n\n\nexport const krakenElementHelpers = {\n\n    event: krakenElementThingEventHelpers\n    \n\n}","\nimport { krSelectable } from './src/krSelectable.js';\nimport { krDragDropGeneric } from './src/krDragDropGeneric.js';\n\n\n\nexport const krakenElementThingEventHelpers = {\n    selectable: krSelectable,\n    dragdrop: krDragDropGeneric\n    \n}","\n/**\n * @fileoverview Kraken Selectable\n * @author Simon Chapleau\n * @version 1.0.0\n *\n * Functions to add selectable functionality to elements\n *\n * Elements with class name 'krSelectable' becomes selectable when clicked on\n * When selected, class 'krSelected' is added\n * \n * \n */\n\n\nimport { krakenBaseHelpers as h} from '../../../../base/krakenBaseHelpers.js'\n\n\nexport const krSelectable = {\n\n    set: makeSelectable,\n    get: getSelected,\n    addCss: addSelectedCss,\n\n}\n\nconst selectableClass = 'krSelectable'\nconst selectedClass = 'krSelected'\n\n\n// Initialize database of already initialized elements\nlet elementDB = {}\n\nfunction makeSelectable(element, allowMultiSelect=true) {\n    /**\n     * Make all elements with class name 'krSelectable' selectable\n     * When selected, class 'krSelected' is added\n     * @param element: parent element of all elements to make selectable\n     * @param allowMultiSelect: allow multiple selections\n     * @return void\n     * \n     */\n\n    element = element || document.body\n\n    // Initialize parent element to deselect all other elements on click\n\n    if(h.isNull(element.id)){\n        element.id = h.uuid.new()\n    }\n\n    element.addEventListener('click', event => {\n        \n        let selectedElements =  element.querySelectorAll('.' + selectedClass) || []\n        for(let selectedElement of selectedElements){\n            \n            selectedElement.classList.remove(selectedClass)\n            \n        }\n    })\n    \n    \n    // Initialize selectable elements under parent element\n    let selectableElements = element.querySelectorAll('.' + selectableClass)\n    for (let e of selectableElements){\n\n        // Add id is missing\n        if(h.isNull(e.id)){\n            e.id = h.uuid.new()\n        }\n\n        // Skip if already initialized\n        if(h.isNotNull(elementDB?.[element.id])){\n            continue\n        }\n\n        // Add event listener on element\n        e.addEventListener('click', event => {\n\n            event.preventDefault()\n            event.stopPropagation()\n                        \n            //If  Shift key not pressed, remove current selection\n            if (!event.shiftKey || allowMultiSelect==false) {\n                let selectedElements =  element.querySelectorAll('.' + selectedClass) || []\n                for(let selectedElement of selectedElements){\n                    if(selectedElement != e){\n                        selectedElement.classList.remove(selectedClass)\n                    }\n                }\n                \n            } \n                \n            // Toggle current element\n            event.currentTarget.classList.toggle(selectedClass);\n            \n        });\n\n    }\n\n}\n\n\n\nfunction getSelected(element){\n    /**\n     * Returns the elements selected below the input element\n     * @param {HTMLElement} element\n     * @returns {Array}\n     * \n     */\n\n    element = element || document.body\n\n    \n    let results = element.querySelectorAll('.' + selectedClass); \n\n    results = results || []\n\n    return results\n    \n}\n\nfunction addSelectedCss(){\n    /**\n     * Add Css necessary to make element appear selected\n     * @param {HTMLElement} element\n     * @returns {void}\n     */\n\n    var styles = `\n       \n    \n        .${selectableClass}.${selectedClass} { \n            \n              outline-style: solid;\n              outline-color: transparent;\n              box-shadow: 0 0 0 2px #0e44af,\n                          0 0 0 5px #fff;\n        }\n        \n    `\n    \n    var styleSheet = document.createElement(\"style\")\n    styleSheet.textContent = styles\n    document.head.appendChild(styleSheet)\n\n    return\n    \n}","\n/**\n * @fileoverview Kraken drag drop generic\n * @author Simon Chapleau\n * @version 1.0.0\n *\n * Functions to add generic dran and drop capabilities\n *\n * Elements with class name 'krDropzone' becomes dropzones\n * Elements with class name 'krDraggable' becomes draggable\n * \n * \n */\n\n\nimport { krakenBaseHelpers as h} from '../../../../base/krakenBaseHelpers.js'\nimport { krakenDomHelpers as d} from '../../../../dom/krakenDomHelpers.js'\n\n\n\n\nexport const krDragDropGeneric = {\n\n    draggable: {\n        set: setDraggable,\n    },\n    dropzone: {\n        set: setDropzone\n    },\n    addCss: addCss,\n\n}\n\nconst dropzoneClass = 'krDropzone'\nconst dropzoneOverClass = \"krDropzoneOver\"\nconst draggableClass = 'krDraggable'\nconst draggableHandleClass = 'krDraggableHandle'\nconst draggingClass = 'krDragging'\nconst krSelectedClass = 'krSelected'\n\n\n// Initialize database of already initialized elements\nlet elementDB = {}\n\nfunction setDraggable(engine, element, allowMultiSelect = true) {\n    /**\n     * Make all elements with class name 'krDraggable' draggable\n     * @param element: parent element of all elements to make draggable\n     * @param allowMultiSelect: allow multiple selections\n     * @return void\n     * \n     */\n\n    element = element || document.body\n\n    let draggableElements = element.querySelectorAll('.' + draggableClass)\n    \n    for (let e of draggableElements){\n\n        // Get grabhandle \n        let dragHandle = e.querySelector('.' + draggableHandleClass)\n\n        // Default hanbdle to element if missing\n        dragHandle = dragHandle || e\n\n\n        // -----------------------------------------------------\n        //  Handle click make the elemtn draggable or not \n        // -----------------------------------------------------\n\n        \n        // On click of handle, make element draggable\n        dragHandle.addEventListener('mousedown', (event) => {\n            e.draggable = true\n        })\n\n        dragHandle.addEventListener('mouseup', (event) => {\n            e.draggable = false\n        })\n\n\n\n        // -----------------------------------------------------\n        //  Draggable fn \n        // -----------------------------------------------------\n\n        \n        dragHandle.addEventListener('dragstart', event => {\n            //event.preventDefault()\n            //event.stopPropagation()\n\n            // Get dragged element\n            let draggedElement = event.currentTarget\n\n            // Set class of dragged element\n            draggedElement.classList.add(draggingClass)\n            \n            // Get record from element\n            let thing =  engine.get(d.thing.property.ref.get(draggedElement))\n            let record = thing?.record || null\n\n            \n            // Set record as datatransfer value\n            event.dataTransfer.setData(\"text/plain\", JSON.stringify(record));\n                    \n        })\n\n        dragHandle.addEventListener('dragend', event => {\n            //event.preventDefault()\n            //event.stopPropagation()\n\n            // Get dragged element\n            let draggedElement = event.currentTarget\n\n            // Remove class of dragged elements\n            for(let e1 of element.querySelectorAll('.' + draggingClass)){\n                e1.classList.remove(draggingClass)\n            }\n\n        })\n\n    }\n\n    \n}\n\n\n\nfunction setDropzone(engine, element, allowMultiSelect = true){\n    /**\n     * Make all elements with class name 'krDropzone' dropzone\n     */\n\n    element = element || document.body\n\n    let dropzoneElements = element.querySelectorAll('.' + dropzoneClass)\n\n    for (let e of dropzoneElements){\n\n        e.addEventListener('dragover', event => {\n            event.preventDefault()\n            event.stopPropagation()\n            e.classList.add(dropzoneOverClass)\n        })\n    \n        \n        e.addEventListener('dragenter', event => {\n            event.preventDefault()\n            event.stopPropagation()\n            e.classList.add(dropzoneOverClass)\n        })\n    \n        e.addEventListener('dragleave', event => {\n            event.preventDefault()\n            event.stopPropagation()\n            e.classList.remove(dropzoneOverClass)\n\n        })\n        \n        e.addEventListener('drop', event => {\n            event.preventDefault()\n            event.stopPropagation()\n\n            // Remove all dragover class\n            for (let e1 of element.querySelectorAll('.' + dropzoneOverClass)){\n                e1.classList.remove(dropzoneOverClass)\n            }\n\n            // Retrieve record or value\n            let record = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n            // Retrieve thing ref related to dropzone\n            let currentElement = event.currentTarget\n            let thingElement = d.thing.traverse.current.thing.get(currentElement)\n\n            let thing =  engine.get(d.thing.property.ref.get(thingElement))\n\n            // Handle lists\n            if(thing?.record_type == 'ListItem'){\n\n                record = record?.item\n                \n                let parentThingElement = thingElement.parentElement.closest('.krThing') \n\n                \n                \n                let parentThing = engine.get(d.thing.property.ref.get(parentThingElement))\n\n                parentThing.insert(record, thing.position)\n\n                engine.set(parentThing)\n\n                thing = parentThing\n                \n\n            }\n\n            // Render\n            engine.render(thing)\n            \n            setDropzone(engine, element)\n            setDraggable(engine, element)\n            \n        })\n    }\n    \n}\n\n\n\nfunction addCss(){\n    /**\n     * Add Css necessary to make element appear dragging\n     * @param {HTMLElement} element\n     * @returns {void}\n     */\n\n    var styles = `\n\n\n        .${draggableClass}.${draggingClass} { \n\n            opacity = '0.4';\n        }\n\n        .${dropzoneClass}.${dropzoneOverClass} {\n\n           margin-top: 20px;\n        \n        }\n\n    `\n\n    var styleSheet = document.createElement(\"style\")\n    styleSheet.textContent = styles\n    document.head.appendChild(styleSheet)\n\n    return\n\n}","import { KrTimer } from './krakenTimer/krakenTimer.js';\nimport { KrCache } from './krakenCache/krakenCache.js';\nimport { KrStorage } from './krakenStorage/krakenStorage.js';\nimport { KrChatGPT } from './krakenChatGpt/krakenChatGpt.js';\n\n\nexport const krakenTools = {\n    KrTimer: KrTimer,\n    KrCache: KrCache,\n    KrStorage: KrStorage,\n    KrChatGPT: KrChatGPT,\n}","\n\nexport class KrTimer {\n    constructor() {\n        this.startTimes = new Map();  // Store start times for labels\n        this.endTimes = new Map();    // Store end times for labels\n    }\n\n    // Starts the timer for a specific label (default: 'default')\n    start(label = 'default') {\n        if (this.startTimes.has(label)) {\n            console.warn(`Timer for '${label}' has already been started.`);\n            return;\n        }\n        this.startTimes.set(label, performance.now());\n    }\n\n    // Stops the timer for a specific label and calculates duration\n    stop(label = 'default') {\n        if (!this.startTimes.has(label)) {\n            console.warn(`Timer for '${label}' was not started.`);\n            return;\n        }\n        const endTime = performance.now();\n        const duration = endTime - this.startTimes.get(label);\n        this.endTimes.set(label, duration);\n        this.startTimes.delete(label); // Clean up after stop\n        return duration; // Returns duration for convenience\n    }\n\n    // Resets all timers\n    reset(label = null) {\n        if (label) {\n            this.startTimes.delete(label);\n            this.endTimes.delete(label);\n        } else {\n            this.startTimes.clear();\n            this.endTimes.clear();\n        }\n    }\n\n    // Retrieves the duration for a specific label\n    getDuration(label = 'default') {\n        if (!this.endTimes.has(label)) {\n            console.warn(`Timer for '${label}' has not been stopped.`);\n            return null;\n        }\n        return this.endTimes.get(label);\n    }\n\n    // Logs all durations\n    logAllDurations() {\n        this.endTimes.forEach((duration, label) => {\n            console.log(`Duration for '${label}': ${duration.toFixed(2)} ms`);\n        });\n    }\n}\n","import { krakenHelpers as h } from \"../../krakenHelpers/krakenHelpers.js\";\n\nexport class KrCache {\n    constructor(maxItems = 1000, longestDuration=600 ) {\n        /**\n         * @param {Number} maxItems\n         * @param {Number} longestDuration (in seconds)\n         */\n        this._db = {};\n        this._maxItems = maxItems;\n        this._longestDuration = longestDuration;\n\n        this._noOfCacherecords = 0;\n    }\n\n    length(){\n        /**\n         * Returns the number of items in the cache\n         * @returns {Number}\n         */\n        return this._noOfCacherecords\n    }\n\n    get(record_or_record_type, record_id) {\n        /**\n         * Returns the record\n         * @param {String} record_type\n         * @param {String} record_id\n         * @returns {Object} The record\n         * \n         */\n\n        // Retrieve type and id\n        let record_type =\n            record_or_record_type?.[\"@type\"] ||\n            record_or_record_type?.record_type ||\n            record_or_record_type;\n        record_id =\n            record_or_record_type?.[\"@id\"] ||\n            record_or_record_type?.record_id ||\n            record_id;\n\n        // Error handlling\n        if (h.isNull(record_type) || h.isNull(record_id)) {\n            return null;\n        }\n        \n        // Retrieve cache record\n        let cacheRecord = this._db?.[record_type]?.[record_id] || null;\n\n        // Error handling\n        if (h.isNull(cacheRecord)) {\n            return null;\n        }\n\n\n        // Verify duration, delete cache if over duration \n        let n = new Date()\n        let duration = (n - cacheRecord.lastUpdated) / 1000\n        if(duration > this._longestDuration){\n            this.delete(record_type, record_id)\n            return null\n        }\n\n        // Set no of accesses\n        cacheRecord.lastAccessed = new Date();\n        cacheRecord.noAccess += 1;\n\n        // Return \n        return this._db?.[record_type]?.[record_id]?.[\"value\"];\n    }\n\n    getAll() {\n        /**\n         * Returns all records\n         *\n         */\n\n        let results = [];\n        for (let rt in this._db) {\n            for (let ri in this._db[rt]) {\n                results.push(this._db[rt][ri]?.value);\n            }\n        }\n\n        // Return \n        return results;\n    }\n\n    set(record) {\n        /**\n         * Sets a record\n         * \n         */\n\n        // Handle array\n        if(h.isArray(record)){\n            return record.map(x => this.set(x))\n        }\n        \n        // Retrieve type and id\n        let record_type = record?.[\"@type\"] || record?.record_type || null;\n        let record_id = record?.[\"@id\"] || record?.record_id || null;\n\n        // Error handling\n        if (h.isNull(record_type) || h.isNull(record_id)) {\n            return null;\n        }\n\n        \n        // Retrieve current cacheRecord (if exist)\n        this._db[record_type] = this._db?.[record_type] || {};\n        this._db[record_type][record_id] = this._db?.[record_type]?.[record_id];\n\n        let cacheRecord = this._db?.[record_type]?.[record_id] || null;\n\n        // Create cacherecord if not already exist\n        if (h.isNull(cacheRecord)) {\n            cacheRecord = {\n                date: new Date(),\n                value: record,\n                lastAccessed: new Date(),\n                lastUpdated: new Date(),\n                noAccess: 0,\n            };\n            this._db[record_type][record_id] = cacheRecord;\n        }\n\n\n        // Set last Updated and value of cacheRecord\n        cacheRecord.lastUpdated = new Date();\n        cacheRecord.value = record;\n\n        // Increment counter (to avoid recounting every time)\n        this._noOfCacherecords += 1;\n\n        // Verify size\n        this._verifySize();\n\n        // Return\n        return;\n    }\n\n    delete(record_or_record_type, record_id) {\n        /**\n         * Deletes a record from the cache\n         * @param {String} record_type\n         * @param {String} record_id\n         *\n         */\n\n        // Retrieve type and id\n        let record_type =\n            record_or_record_type?.[\"@type\"] ||\n            record_or_record_type?.record_type ||\n            record_or_record_type;\n        record_id =\n            record_or_record_type?.[\"@id\"] ||\n            record_or_record_type?.record_id ||\n            record_id;\n\n\n        // Error handling\n        if (h.isNull(record_type) || h.isNull(record_id)) {\n            return null;\n        }\n\n        // Remove record\n        this._db[record_type] = this._db?.[record_type] || {};\n        this._db[record_type][record_id] = null;\n\n        // Decrement counter (to avoid recounting every time)\n        this._noOfCacherecords = this._noOfCacherecords - 1;\n\n        // Return\n        return;\n    }\n\n    clear() {\n        /**\n         * Clears the cache\n         */\n\n        this._db = {};\n\n        // Return\n        return;\n    }\n\n    // -----------------------------------------------------\n    //  Comment\n    // -----------------------------------------------------\n\n    _getAllCacheRecords() {\n        /**\n         * Returns all records\n         *\n         */\n\n        let results = [];\n        for (let rt in this._db) {\n            for (let ri in this._db[rt]) {\n                results.push(this._db[rt][ri]);\n            }\n        }\n        results = results.filter(x => h.isNotNull(x));\n        return results;\n    }\n\n    _getOldestCacheRecord() {\n        /**\n         * Returns the oldest record (accessed, or created)\n         *\n         */\n\n        let cacheRecords = this._getAllCacheRecords();\n\n      \n\n        if(h.isNull(cacheRecords)){ return null }\n        \n        \n        let minItem = cacheRecords.reduce((minItem, item) =>\n            (minItem.lastAccessed || minItem.lastUpdated) <\n            (item.lastAccessed || item.lastUpdated)\n                ? minItem\n                : item\n        );\n\n        return minItem;\n    }\n\n    \n    _verifySize() {\n        /**\n         * Verifies the size of the cache\n         *\n         */\n\n        let max = 1000\n\n        let count =0\n        \n        while (this._noOfCacherecords > this._maxItems && count < max) {\n            let oldestCacheRecord = this._getOldestCacheRecord();\n            this.delete(oldestCacheRecord?.value);\n            count += 1\n        }\n\n        return\n    }\n}\n","import { krakenHelpers as h } from \"../../krakenHelpers/krakenHelpers.js\";\nimport { KrCache } from \"../krakenCache/krakenCache.js\";\n\nexport class KrStorage {\n    /**\n     * Kraken data storage\n     */\n\n    constructor(collection) {\n        this.dataApiUrl = \"https://data.krknapi.com/api\";\n        //this.cdnApiUrl = 'https://931bba76-1b26-4445-ad26-d2c9d201d0e2-00-lpy51ddmv2p2.janeway.replit.dev' //\"https://cdn.krknapi.com/things\";\n        this.cdnApiUrl = \"https://cdn.krknapi.com/things\";\n        this.collection = collection;\n\n        this.cache = new KrCache()\n        \n    }\n\n    get cdn() {\n        return {\n            get: this.cdnGet.bind(this),\n            post: this.cdnPost.bind(this),\n            delete: this.cdnDelete.bind(this),\n        };\n    }\n\n    get data() {\n        return {\n            get: this.dataGet,\n            post: this.dataPost,\n            delete: this.dataDelete,\n        };\n    }\n\n    \n\n\n    // -----------------------------------------------------\n    //  CDN \n    // -----------------------------------------------------\n \n    async cdnGet(record_or_record_type, record_id, force=false) {\n        /**\n         * Gets a record\n         * @param {String} record_or_record_type\n         * @param {String} record_id\n         * @param {Boolean} force if true, will force a refresh of the record\n         * @returns {Object} The record\n         */\n\n        // Error handling\n        \n        // Return\n        let url = this.cdnApiUrl + '/' + this.collection\n        console.log('url', url)\n        return await getRecord(record_or_record_type, record_id, url, this.cache, this.force);\n    }\n\n    async cdnPost(record) {\n        /**\n         * Posts a record\n         * @param {Object} record\n         * @returns {Object} The record\n         * \n         */\n\n        // Return\n        let url = this.cdnApiUrl + '/' + this.collection\n        return await postRecord(record, url, this.cache)\n        \n    }\n\n    async cdnDelete(record_or_record_type, record_id) {\n        /**\n         * Deletes a record\n         * @param {String} record_or_record_type\n         * @param {String} record_id\n         * @returns {Object} The record\n         */\n\n        // Error handling\n        let record_type =\n            record_or_record_type[\"@type\"] ||\n            record_or_record_type?.record_type ||\n            record_or_record_type;\n        record_id =\n            record_or_record_type[\"@id\"] ||\n            record_or_record_type?.record_id ||\n            record_id;\n\n        // \n        let action = await h.http.api.delete(this.cdnApiUrl + '/' + this.collection, null, records)\n\n        // Remove from cache\n        this.cache.delete(record_type, record_id)\n\n        // \n        Return\n        \n    }\n\n    // -----------------------------------------------------\n    //  Data \n    // -----------------------------------------------------\n\n\n    async dataGet(record_or_record_type, record_id, force=false) {\n        /**\n         * Gets a system\n         * @param {String} record_or_record_type\n         * @param {String} record_id\n         * @param {Boolean} force if true, will force a refresh of the record\n         * @returns {Object} The system\n         */\n\n        // Error handling\n        let record_type =\n            record_or_record_type[\"@type\"] ||\n            record_or_record_type?.record_type ||\n            record_or_record_type;\n        record_id =\n            record_or_record_type[\"@id\"] ||\n            record_or_record_type?.record_id ||\n            record_id;\n\n\n        // Verify in cache\n        let record = this.cache.get(record_type, record_id)\n        if(h.isNotNull(record)){\n            return record\n        }\n\n        // Define params\n        let params = {\"@type\": record_type, \"@id\": record_id}\n\n        // Get \n        record = await h.http.api.get(this.dataApiUrl + '/' + this.collection, null, params)\n\n        // Store in cache\n        if(h.isNotNull(record)){\n            // Cache main record\n            this.cache.set(record)\n        }\n\n        // Return\n        return record\n        \n    }\n    \n\n    async dataPost(record) {\n        /**\n         * Posts a system record\n         * @param {Object} systemRecord\n         * @returns {Object} The system record\n         *\n         */\n\n        // Error handling\n        if(h.isNull(record)){\n            return null\n        }\n\n        //\n        let records = h.toArray(record)\n\n        // transform to system thing\n        records = records.map(x => h.thing.toThing(x))\n\n        // Post\n        //records = await h.http.api.post(this.dataApiUrl + '/' + this.collection, null, records)\n\n        // Add records provided back to cache\n        this.cache.set(records)\n\n        // Return\n        return records\n        \n    }\n\n    async dataDelete(record_or_record_type, record_id) {\n        /**\n         * Deletes a system record\n         * @param {String} record_or_record_type\n         * @param {String} record_id\n         * @returns {Object} The system record\n         */\n\n        // Error handling\n        let record_type =\n            record_or_record_type[\"@type\"] ||\n            record_or_record_type?.record_type ||\n            record_or_record_type;\n        record_id =\n            record_or_record_type[\"@id\"] ||\n            record_or_record_type?.record_id ||\n            record_id;\n\n        // \n        let action = await h.http.api.delete(this.dataApiUrl + '/' + this.collection, null, records)\n\n        // Remove from cache\n        this.cache.delete(record_type, record_id)\n\n        // \n        Return\n    }\n\n\n\n}\n\n\nasync function getRecord(record_or_record_type, record_id, url, cache, force){\n\n    // Error handling\n    let record_type =\n        record_or_record_type[\"@type\"] ||\n        record_or_record_type?.record_type ||\n        record_or_record_type;\n    record_id =\n        record_or_record_type[\"@id\"] ||\n        record_or_record_type?.record_id ||\n        record_id;\n\n\n    // Verify in cache\n    if(force != true){\n        let record = cache.get(record_type, record_id)\n        if(h.isNotNull(record)){\n            console.log('get from cache')\n            return record\n        }\n    }\n\n    // Define params\n    let params = {\"@type\": record_type, \"@id\": record_id}\n\n    // Get \n    let record\n    try {\n        record = await h.http.api.get(url, null, params)\n    } catch (error) {\n        //console.log(error)\n        record = null\n    }\n\n    // Store in cache\n    if(h.isNotNull(record)){\n        // Cache main record\n        cache.set(record)\n    }\n\n    // Return\n    return record\n}\n\nasync function postRecord(record, url, cache){\n    /**\n     * Posts a system record\n     * @param {Object} systemRecord\n     * @returns {Object} The system record\n     *\n     */\n\n    // Error handling\n    if(h.isNull(record)){\n        return null\n    }\n\n    //\n    let records = h.toArray(record)\n\n    // transform to system thing\n    records = records.map(x => h.thing.toThing(x))\n\n    // Post\n    try {\n        records = await h.http.api.post(url, null, records)\n    } catch(error){\n        console.log(error)\n        records = null\n    }\n    \n    // Add records provided back to cache\n    cache.set(records)\n\n    // Return\n    return records\n\n\n}","\nlet apikey1 = 'sk-proj-U7IWqJiLbVaTGHZ'\nlet apikey2 =  '3U637T3BlbkFJdXJ1xNv2W5U52d9MKijr'\n\nlet APIKEY = apikey1 + apikey2\n\n\n\n// [{\"role\": \"user\", \"content\": \"Say this is a test!\"}],\n\n\nexport class KrChatGPT {\n\n        constructor(){\n\n                \n        }\n\n        \n\n\n        async ask(messages) {\n            const apiKey = APIKEY;\n            const url = \"https://api.openai.com/v1/chat/completions\";\n\n            const headers = {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${apiKey}`\n            };\n\n            const data = {\n                model: 'gpt-4o-mini',\n                \n                messages: messages,\n            };\n\n            try {\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: headers,\n                    body: JSON.stringify(data)\n                });\n\n               \n                if (!response.ok) {\n                    console.log(response.statusText)\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n\n                const result = await response.json();\n                return result.choices[0].message.content;\n                \n            } catch (error) {\n                console.error(\"Error calling OpenAI API:\", error);\n                return null;\n            }\n        }\n\n        \n\n}\n\n"],"names":[],"version":3,"file":"main.js.map"}