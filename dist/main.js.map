{"mappings":"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","sources":["src/index.js","src/krakenHelpers/krakenHelpers.js","src/krakenHelpers/helpers/krakenAnalysisHelpers.js","src/krakenHelpers/helpers/krakenArrayHelpers.js","src/krakenHelpers/helpers/krakenNumberHelpers.js","src/krakenHelpers/helpers/krakenObjectHelpers.js","src/krakenHelpers/helpers/krakenDotNotationHelpers.js","src/krakenHelpers/helpers/krakenValueHelpers.js","src/krakenHelpers/helpers/krakenDateHelpers.js","src/krakenHelpers/helpers/krakenThingHelpers.js","src/krakenHelpers/helpers/krakenUrlHelpers.js","src/krakenHelpers/helpers/krakenEmailHelpers.js","src/krakenHelpers/helpers/krakenJsonHelpers.js","src/krakenHelpers/helpers/krakenStringHelpers.js","src/krakenHelpers/helpers/krakenTextTable.js","src/krakenHelpers/helpers/krakenApiHelpers.js","src/krakenHelpers/helpers/krakenHeadingsHelpers.js","src/krakenHelpers/helpers/krakenTemplateHelpers.js","src/krakenHelpers/helpers/krakenNullHelpers.js","src/krakenHelpers/helpers/krakenCache.js","src/krakenHelpers/helpers/krakenTimer.js"],"sourcesContent":["\n\nimport {krakenHelpers as krakenHelpersObject} from './krakenHelpers/krakenHelpers.js'\n\nexport const krakenHelpers = krakenHelpersObject\n\n\n","\nimport { krakenAnalysisHelpers } from './helpers/krakenAnalysisHelpers.js'\n\nimport { krakenArrayHelpers } from './helpers/krakenArrayHelpers.js'\nimport { krakenDateHelpers } from './helpers/krakenDateHelpers.js'\nimport { krakenEmailHelpers } from './helpers/krakenEmailHelpers.js'\n\nimport { krakenDotNotationHelpers } from './helpers/krakenDotNotationHelpers.js'\n\nimport { krakenJsonHelpers } from './helpers/krakenJsonHelpers.js'\nimport { krakenNumberHelpers } from './helpers/krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './helpers/krakenObjectHelpers.js'\nimport { krakenStringHelpers } from './helpers/krakenStringHelpers.js'\nimport { krakenTextTable } from './helpers/krakenTextTable.js'\nimport { krakenThingHelpers } from './helpers/krakenThingHelpers.js'\nimport { krakenUrlHelpers } from './helpers/krakenUrlHelpers.js'\nimport { krakenValueHelpers } from './helpers/krakenValueHelpers.js'\nimport { krakenApiHelpers } from './helpers/krakenApiHelpers.js'\nimport { krakenHeadingsHelpers } from './helpers/krakenHeadingsHelpers.js'\nimport { krakenTemplateHelpers } from './helpers/krakenTemplateHelpers.js'\n\nimport { krakenNullHelpers } from './helpers/krakenNullHelpers.js'\n\n\nimport { KrCache } from './helpers/krakenCache.js'\n\n\nimport { KrakenTimer } from './helpers/krakenTimer.js'\n\n\nexport const krakenHelpers = {\n    analysis: krakenAnalysisHelpers,\n    api: krakenApiHelpers,\n    array: krakenArrayHelpers,\n    Cache: KrCache,\n    date: krakenDateHelpers,\n    dot: krakenDotNotationHelpers,\n    email:krakenEmailHelpers,\n    json: krakenJsonHelpers,\n    number: krakenNumberHelpers,\n    object: krakenObjectHelpers,\n    string: krakenStringHelpers,\n    textTable: krakenTextTable,\n    thing: krakenThingHelpers,\n    Timer: KrakenTimer,\n    url: krakenUrlHelpers,\n    value: krakenValueHelpers,\n    headings: krakenHeadingsHelpers,\n    null: krakenNullHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    template: krakenTemplateHelpers\n}","import { krakenArrayHelpers as ka } from \"./krakenArrayHelpers.js\";\nimport { krakenValueHelpers as kv } from \"./krakenValueHelpers.js\";\n\n\nexport const krakenAnalysisHelpers = {\n\n    analyzeValues: analyzeValues,\n    analyze: analyze,\n    max: getMax,\n    min:getMin,\n    n: getN,\n    sum: getSum,\n    avg: getAverage,\n    stdev: getStandardDeviation,\n    first: getFirst,\n    last: getLast\n};\n\n\n\nfunction analyze(value){\n\n    value = ka.ka.ensureArray(value)\n    \n    let keys = ka.getKeys(value)\n\n    let analysis = {}\n    for(let k of keys){\n        analysis[k] = analyzeValues(value, k)\n    }\n\n    return analysis\n}\n\nfunction analyzeValues(value, key) {\n    let analysis = {\n        type: null,\n        types: {},\n        typeSchemaOrg: null,\n        typesSchemaOrg: {},\n        values: {},\n        N: null,\n        nullN: null,\n        uniqueN: null,\n        min: null,\n        max: null,\n        stddev: null\n    };\n\n    let values = ka.getValuesForKey(value, key);\n\n    for (let v of values) {\n        \n        // Get type\n        let t = kv.getType(v)\n        analysis.types[t] = (analysis.types[t] || 0) + 1;\n\n        if(t && t != null){\n            let s = analysis.type\n            if(s && s != null && s != t){\n                analysis.type = 'na'\n            } else {\n                analysis.type = t\n            }\n        }\n\n        \n        // Get schema type\n        let tt = kv.getTypeSchemaOrg(v)\n        analysis.typesSchemaOrg[tt] = (analysis.typesSchemaOrg[tt] || 0) + 1;\n\n        if(tt && tt != null){\n            let s = analysis.typeSchemaOrg\n            if(s && s != null && s != tt){\n                analysis.typeSchemaOrg = 'na'\n            } else {\n                analysis.typeSchemaOrg = tt\n            }\n        }\n        \n        // Get value\n        let newV = v;\n        if (newV[\"@type\"]) {\n            newV = `${newV[\"@type\"]}/${newV[\"@id\"]}`;\n        }\n        analysis.values[newV] = (analysis.values[newV] || 0) + 1;\n\n        // get min / max\n        analysis.N = getN(value, key)\n        analysis.nullN = getNull(value, key)\n        analysis.uniqueN = ka.getUniqueN(value, key)\n        analysis.min = getMin(value, key);\n        analysis.max = getMax(value, key);\n        analysis.stddev = getStandardDeviation(value, key);\n        \n        \n        \n    }\n\n    return analysis;\n}\n\n\n\n\n\n\nfunction getFirst(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getValuesForKey(value, key)\n    items = ka.ensureArray(items)\n    \n    let [result] = items.slice(0)\n\n\n    return result\n\n}\n\n\nfunction getLast(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getValuesForKey(value, key)\n    items = ka.ensureArray(items)\n\n    let [result] = items.slice(-1)\n\n\n    return result\n\n\n}\n\n\nfunction getMax(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    let result = Math.max(...items)\n\n    return result\n\n}\n\nfunction getMaxRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getMax(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('maxValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\n\nfunction getMin(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    let result = Math.min(...items)\n\n    return result\n\n}\n\nfunction getMinRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getMin(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('minValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getN(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    let result = items.length\n\n    return result\n\n}\n\nfunction getNRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getN(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('count', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getSum(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    let result = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    return result\n\n}\n\nfunction getSumRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getSum(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('sum', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getAverage(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let sumAll = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    let result = sumAll / items.length\n\n    return result\n}\n\nfunction getAverageRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getAverage(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('average', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getStandardDeviation(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let items = ka.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let n = items.length\n    let mean = items.reduce((a, b) => a + b) / n\n    let result =  Math.sqrt(items.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n\n    return result\n}\n\nfunction getStandardDeviationRecord(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let result = getStandardDeviation(value, key)\n    let unitCode = ka.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('marginOfError', key, result, unitCode)\n\n}\n\nfunction getNull(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n    let nullValues = 0\n    for(let v of value){\n\n\n        if ((!v || v == null || v == \"\" || v == {} || v == []) && v!== 0){\n            nullValues + 1\n        }\n    }\n\n    return nullValues\n\n}\n\nfunction getUniqueN(value, key){\n\n    value = ka.ensureArray(value)\n    if(ka.validateArray(value) == false){ return undefined }\n\n\n    let uniqueValues = [...new Set(value)];\n\n    let result = uniqueValues.length\n\n\n    return result\n\n}\n\n// -----------------------------------------------------\n//  Statistical record \n// -----------------------------------------------------\n\nfunction getStatsRecord(statType, property, value, unitCode){\n\n\n    let record = {\n        \"@context\": \"https://schema.org/\",\n        \"@id\": \"Observation_Median_Age_Person_Female_SanAntonio_TX_2014\",\n        \"@type\": \"Observation\",\n        \"name\": name,\n        \"variableMeasured\": {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"StatisticalVariable\",\n            \"@id\": \"Median_Height_Person_Female\",\n            \"name\": statType,\n            \"measuredProperty\": {\"@id\": property },\n            \"statType\": {\"@id\": statType},\n            \"constrainingProperty\": []\n        },\n        \"observationAbout\": {},\n        \"value\": value,\n        \"unitCode\": unit\n    }\n\n    return record\n\n}","import { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\nimport { krakenDotNotationHelpers } from './krakenDotNotationHelpers.js'\n\n\nexport const krakenArrayHelpers = {\n\n    toText: toText,\n    isArray: validateArray,\n    validateArray: validateArray,\n    toArray: ensureArray,\n    ensureArray: ensureArray,\n    getKeys: getKeys,\n    keys: getKeys,\n    getValuesForKey: getValuesForKey,\n    getNumbersForKey: getNumbersForKey\n    \n}\n\n\n// -----------------------------------------------------\n//  Validation \n// -----------------------------------------------------\n\n\nfunction validateArray(value){\n\n    if(Array.isArray(value)){ return true }\n    return false\n    \n}\n\n\n// -----------------------------------------------------\n//  Transformation \n// -----------------------------------------------------\n\nfunction ensureArray(value) {\n    \n    if(!value || value == null || value == {}){ return [] }\n\n    if (validateArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction toText(value) {\n\n    if(validateArray(value) == false){ return undefined }\n\n    let result = `[${value.length}]`\n    return result\n    \n}\n\n\n\n// -----------------------------------------------------\n//  Query \n// -----------------------------------------------------\n\n\n\nfunction getKeys(value){\n    if(validateArray(value) == false){ return undefined }\n\n    let keys = []\n    for(let v of value){\n        for(let k of Object.keys(v)){\n            if(!keys.includes(k)){\n                keys.push(k)\n            }\n        }\n    }\n    keys.sort()\n    return keys\n}\n\nfunction getValuesForKey(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let results = []\n    for(let v of value){\n        let v1 = krakenDotNotationHelpers.getValue(key, v) //v?.[key] \n        if(v1){\n            results.push(v1)\n        }\n    }\n    return results\n    \n}\n\nfunction getNumbersForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    value = ensureArray(value)\n    \n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        let newItem = krakenNumberHelpers.toNumber(item)\n        if(krakenNumberHelpers.isNumber(newItem) == true){\n            results.push(newItem)\n        }\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            let quantItem = krakenNumberHelpers.toNumber(item?.value)\n            if(krakenNumberHelpers.isNumber(quantItem) == true){\n                results.push(quantItem)\n            }\n        }\n    }\n    return results    \n}\n\nfunction getUnitCodesForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            results.push(item.unitCode)\n        }\n    }\n    return results    \n}\n","\n\nexport const krakenNumberHelpers = {\n\n    isNumber: isNumber,\n    toNumber: toNumber,\n    toText: toText\n}\n\n\nfunction isNumber(value){\n    \n    return typeof value === 'number';\n    \n}\n\nfunction toNumber(value){\n\n    if(typeof value === 'number') { return value }\n    \n    try { \n        value = Number(value)\n        return value\n    } catch {\n\n    }\n\n    return undefined\n}\n\n\nfunction toText(value, rounding){\n\n    value = toNumber(value)\n\n    if((!value || value == null) && value != 0) { return undefined }\n\n    if(rounding | rounding != null){\n        value = Math.round(value)\n    }\n\n    return String(value)\n    \n}\n\n","\n\nexport const krakenObjectHelpers = {\n\n    isObject: isObject,\n    getKeys: getKeys,\n    keys: getKeys,\n    toText: toText\n    \n}\n\n\nfunction isObject(value){\n\n    return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nfunction getKeys(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    let keys = Object.keys(value)\n    keys.sort()\n    return keys\n}\n\n\nfunction toText(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    if(value['@type']){\n\n        return `${value[\"@type\"]}/${value['@id']}`\n    } else {\n\n        let keys = Object.keys(value)\n        if(keys.length == 0){ return '{}'}\n\n        return `{\"${keys[0]}\": \"${value[keys[0]]}\", ... }`\n        \n    }\n\n    \n}\n\n","\n\nexport const krakenDotNotationHelpers = {\n    toDot: convertToDotNotation,\n    fromDot: convertFromDotNotation,\n    getValue: getPropertyValueFromDot,\n    setValue: setPropertyValueFromDot\n}\n\n\n\nfunction setPropertyValueFromDot(record, key, value){\n\n    function _recursiveSet(record, key, value){\n\n        // Get property\n        let keyItems = key.split('.')\n        let keyItem1 = keyItems?.[0]\n\n\n        let property1 = keyItem1.split('[')[0]\n        let position1 = keyItem1.split('[')[1] || null\n\n        \n        \n        let value1 = value?.[property1]\n\n\n        if(position1 && position1 != null){\n           \n            try{\n                position1 = position1.replace(']', '')\n                position1 = position1.trim()\n                position1 = Number(position1)\n                if(!Array.isArray(value1)){value1 = [value1]}\n                value1 = value1?.[arrayPosition] || null\n            } catch {\n\n            }\n        }\n\n        // Check if done, else recurse\n        if(keyItems.length > 1){\n            let newKeys = keyItems.slice(1)\n            let newKey = newKeys.join('.')\n\n            if(!position1 || position1 == null){\n                if(!value1){ value1 = {}}\n                record[property1] = _recursiveSet(value1, newKey, value)\n                return record\n            } else {\n                if(!value1){ value1 = []}\n                record[property1][position1] = _recursiveSet(value1, newKey, value) \n                return record\n            }\n            \n        } else {\n\n            if(!position1 || position1 == null){\n                if(!record?.[property1]){ record[property1] = {}}\n                record[property1] = value\n                return record\n            } else {\n                if(!record?.[property1]){ record[property1] = []}\n                record[property1][position1] = value \n                return record\n            }\n\n        }\n\n\n    }\n\n\n    return _recursiveSet(record, key, value);\n    \n}\n\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n\n\n    function _recursive(key, value){\n\n        // Get property\n        let keyItems = key.split('.')\n        let keyItem1 = keyItems?.[0]\n        \n\n        let property1 = keyItem1.split('[')[0]\n        let position1 = keyItem1.split('[')[1] || null\n        \n        let value1 = value?.[property1]\n\n        \n        if(position1){\n            try{\n                position1 = position1.replace(']', '')\n                position1 = position1.trim()\n                position1 = Number(position1)\n                if(!Array.isArray(value1)){value1 = [value1]}\n                value1 = value1?.[arrayPosition] || null\n            } catch {\n\n            }\n        }\n        \n        // Check if done, else recurse\n        if(keyItems.length > 1){\n            let newKeys = keyItems.slice(1)\n            let newKey = newKeys.join('.')\n            return _recursive(newKey, value1)\n        } else {\n            return value1\n        }\n        \n        \n    }\n\n    \n    return _recursive(key, value);\n    \n}\n\n\n\n\nfunction convertToDotNotation(obj, parentKey = '', result = {}) {\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const newKey = parentKey ? `${parentKey}.${key}` : key; // Combine parent key with current key\n\n            if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                // If it's a nested object (not an array), recurse\n                convertToDotNotation(obj[key], newKey, result);\n            } else if (Array.isArray(obj[key])) {\n                // If it's an array, iterate over array elements and include index\n                obj[key].forEach((item, index) => {\n                    const arrayKey = `${newKey}[${index}]`;\n                    if (typeof item === 'object') {\n                        // Recurse for array elements that are objects\n                        convertToDotNotation(item, arrayKey, result);\n                    } else {\n                        // Directly add non-object array elements\n                        result[arrayKey] = item;\n                    }\n                });\n            } else {\n                // If it's a primitive value, add it to the result\n                result[newKey] = obj[key];\n            }\n        }\n    }\n    return result;\n}\n\n\n\nfunction convertFromDotNotation(dotNotationObj) {\n    const result = {};\n\n    for (let key in dotNotationObj) {\n        if (dotNotationObj.hasOwnProperty(key)) {\n            const value = dotNotationObj[key];\n            const keys = key.split('.'); // Split the key by dots\n            let current = result;\n\n            for (let i = 0; i < keys.length; i++) {\n                const part = keys[i];\n\n                // Check if the part contains array notation, e.g., \"contacts[0]\"\n                const arrayMatch = part.match(/^(\\w+)\\[(\\d+)\\]$/);\n\n                if (arrayMatch) {\n                    const arrayKey = arrayMatch[1];\n                    const arrayIndex = parseInt(arrayMatch[2], 10);\n\n                    // Ensure the array exists at this key\n                    if (!current[arrayKey]) {\n                        current[arrayKey] = [];\n                    }\n\n                    // Ensure the specific index in the array exists\n                    if (!current[arrayKey][arrayIndex]) {\n                        current[arrayKey][arrayIndex] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the current array item\n                    current = current[arrayKey][arrayIndex];\n                } else {\n                    // Regular object key (no array notation)\n                    if (!current[part]) {\n                        current[part] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the next nested level\n                    current = current[part];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n","import { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\nimport { krakenUrlHelpers } from './krakenUrlHelpers.js'\n\n\nexport const krakenValueHelpers = {\n\n    toText: toText,\n    getType: getType,\n    getTypeSchemaOrg: getTypeSchemaOrg,\n    innerValuesToText: innerValuesToText,\n    valuesToText: innerValuesToText\n}\n\nfunction toText(value) {\n    \n    if ((!value || value == null || value == [] || value == {}) && value != 0) { return '' }\n\n\n    \n    if (krakenThingHelpers.isThing(value)) {\n        return krakenThingHelpers.toText(value)\n    } else if (krakenDateHelpers.isDate(value)) {\n        return krakenDateHelpers.toText(value)\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return krakenArrayHelpers.toText(value)\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return krakenNumberHelpers.toText(value)\n    } else if (krakenObjectHelpers.isObject(value)) {\n        return krakenObjectHelpers.toText(value)\n    } else {\n        return String(value)\n    }\n}\n\n\nfunction innerValuesToText(value){\n    \n    if (krakenArrayHelpers.isArray(value)) {\n        let result = []\n        for(let v of value){\n            result.push(innerValuesToText(v))\n        }\n        return result\n    } \n\n    if(krakenObjectHelpers.isObject(value)){\n\n        let result = {}\n        for(let k of krakenObjectHelpers.keys(value)){\n            result[k] = toText(value[k])\n        }\n        return result \n    }\n    return toText(value)\n}\n\n\nfunction getType(value) {\n\n    if (krakenThingHelpers.isThing(value)) {\n        return 'thing'\n    } else if (krakenDateHelpers.isDate(value)) {\n        return 'datetime'\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return 'array'\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return 'number'\n    } else {\n        return 'string'\n    }\n\n}\n\n\nfunction getTypeSchemaOrg(value){\n\n    let t = getType(value)\n\n\n    if(t == \"thing\"){\n        return value['@type']\n    }\n    \n    if(t == \"string\"){\n        if(krakenUrlHelpers.toUrl(value)){\n            return 'url'\n        }\n        \n    }\n\n    return t\n\n    \n}\n\n","\n\n\n\n/** @const {Object}  krakenDateHelpers\n * - isDate: Determiens if value is of type Date\n * - toDate: Converts a value (string, etc.) to Date\n * - getDuration: Returns duration between two dates\n * - getDurationRecord: Returns duration in schema.org QuantitativeValue record\n */\nexport const krakenDateHelpers = {\n\n    // Base\n    isDate: validateDate,\n    getDuration: getDuration,\n    getDurationRecord: getDurationRecord,\n    toDate: toDate,\n    toText: toText,\n    // Shortcuts\n    validateDate: validateDate,\n    getDate: toDate,\n    duration: getDuration,\n    durationRecord: getDurationRecord,\n\n}\n\n/**\n * Returns true if value if a Date object\n * @param {String | Date | object} value\n * @return {bool} isDate True if date object\n */\nfunction validateDate(value){\n    if(value instanceof Date) { return true }\n    return false\n}\n\n\nfunction toText(value){\n\n    if(validateDate(value) == false){ return undefined }\n\n    let formattedDate = value.toISOString().split('.')[0]\n    formattedDate.replace('T', ', ')\n\n    return formattedDate\n}\n\n\nfunction toDate(value){\n    \n    if(validateDate(value) == true){ return value }\n\n    try {\n        if (typeof value !== 'string') {\n            return undefined;\n        }\n\n        const date = new Date(value);\n\n        \n        if (isNaN(date.getTime())) {\n            return undefined;\n        }\n\n        return date;\n        \n    } catch (error) {\n        return undefined\n    }\n}\n\n\nfunction getDuration(date1, date2){\n\n    date1 = toDate(date1)\n    date2 = toDate(date2)\n\n    \n    if(validateDate(date1) == false){ return undefined }\n    if(validateDate(date2) == false){ return undefined }\n\n    let startDate \n    let endDate\n    \n    if(date1 < date2){\n        startDate = date1\n        endDate = date2\n    } else {\n        startDate = date2\n        endDate = date1\n    }\n\n    let duration = (endDate - startDate) / 1000\n    return duration\n    \n}\n\nfunction getDurationRecord(date1, date2){\n\n    let duration = getDuration(date1, date2)\n\n    let result = {\n        \"@type\": \"QuantitativeValue\",\n        \"@id\": String(crypto.randomUUID()),\n        \"unitCode\": \"SEC\",\n        \"unitText\": \"s\",\n        'value': duration\n    }            \n\n    \n    return result\n\n}\n\n","\n\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nexport const krakenThingHelpers = {\n\n    isValid: validateThing,\n    isThing: validateThing,\n    validateThing: validateThing,\n    getRefRecord: getRefRecord,\n    ref: getRefRecord,\n    toText: toText,\n    extractThings: extractThings\n    \n}\n\n\nfunction validateThing(value){\n\n    if(!value['@type']){ return false }\n    return true\n}\n\nfunction getRefRecord(value){\n\n    if(validateThing(value) == false ) { return undefined }\n    \n    let result = {\n        \"@type\": value['@type'],\n        \"@id\": value['@id']\n    }\n    return result\n    \n}\n\nfunction toText(value){\n\n    if(validateThing(value) == false ) { return undefined }\n\n    let record_type = value['@type']\n    let record_id = value['@id']\n\n    \n    if(record_type == 'QuantitativeValue'){\n        \n        let result = `${value['value']} ${value['unitText'] || value['unitCode'] || ''}`\n        return result\n    }\n\n    if(record_type == \"DefinedTerm\"){\n\n        if(value.name && value.name != null){ return value.name }\n        if(value.termCode && value.termCode != null){ return value.termCode }\n        \n    }\n\n    if(record_type == 'Person'){\n\n        if(value['givenName'] && value['familyName']){\n            return `${value['givenName']} ${value['familyName']}`\n        }\n    }\n\n    if(record_type == 'PostalAddress'){\n\n        \n    }\n    \n    \n    let result = `${value['@type']}/${value['@id']}`\n      \n    return result\n\n}\n\n\nfunction extractThings(record){\n\n    \n    let results = []\n\n    if(krakenArrayHelpers.isArray(record)){\n\n        for(let r of record){\n            let values = extractThings(r)\n            if(values.length > 0){\n                results = results.concat(values)\n            }\n        }\n    } else if(krakenObjectHelpers.isObject(record)){\n\n        if(record?.['@type'] && record?.['@type'] != null){\n            results.push(record)\n        }\n        \n        for(let k of Object.keys(record)){\n            let v = record[k]\n            let values = extractThings(v)\n            if(values.length > 0){\n                results = results.concat(values)\n            }\n        }\n\n    } else {\n    }\n\n \n    \n    return results\n    \n    \n}","\n\nexport const krakenUrlHelpers = {\n\n    getDomain: getDomain,\n    domain: getDomain,\n    getUrl: getUrl,\n    toUrl: getUrl\n    \n}\n\nfunction isUrl(value){\n\n    if(!value || value == null){ return false }\n\n    if(value instanceof URL) { return true }\n\n\n    \n}\n\n/**\n * Returns url string with path and params\n */\nfunction getUrl(baseUrl, path, params) {\n    // Returns url string\n    try {\n        if (!baseUrl || typeof baseUrl !== 'string') {\n            throw new Error('Invalid base URL');\n        }\n        \n        if (!path ) {\n            path = '';\n        }\n        if (typeof path !== 'string') {\n            throw new Error('Invalid path');\n        }\n        if (params && typeof params !== 'object') {\n            throw new Error('Invalid params');\n        }\n\n        let url = new URL(path, baseUrl);\n\n        if (params) {\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null) {\n                    url.searchParams.append(key, params[key]);\n                }\n            });\n        }\n\n        return url.toString();\n        \n    } catch (error) {\n        //console.error('Error building URL:', error.message);\n        return undefined;\n    }\n}\n\n\n\n\n\n\nfunction getDomain(value){\n\n    try {\n\n        if(!value || value == null){ return undefined }\n\n        if(!(value instanceof URL)) { \n\n            if(typeof value != 'string'){\n                return undefined\n            }\n\n            value = new URL(value);\n        }\n\n\n        let domain = value.hostname\n\n        domain = domain.replace('www.', '')\n\n        if (domain == 'wrong.protocol'){ return undefined }\n        \n        // Use URL constructor to parse the URL\n        return domain;\n\n        \n    } catch (error) {\n        // If an error occurs, return an appropriate error message\n        return undefined;\n    }\n   \n    \n    \n}","\n\nexport const krakenEmailHelpers = {\n    isEmail: isValidEmail\n}\n\n\nfunction isValidEmail(email) {\n    if (typeof email !== 'string') {\n        throw new TypeError('The provided value must be a string.');\n    }\n\n    // Regular expression to validate email addresses\n    const emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/ ;\n\n    return emailRegex.test(email);\n}\n\n","\n\n\nexport const krakenJsonHelpers = {\n\n    get: getPropertyValueFromDot,\n    getPropertyValueFromDot: getPropertyValueFromDot,\n    isJson: isJson,\n    set: setPropertyValueFromDot,\n    setPropertyValueFromDot:setPropertyValueFromDot,\n    flatten: objectToDotNotation,\n    objectToDotNotation: objectToDotNotation,\n    simplify: simplify,\n    toPropertiesList: jsonToPropertiesSingle,\n    toPropertiesSingle: jsonToPropertiesList\n    \n}\n\nfunction isJson(value){\n\n    try{\n        let l = JSON.parse(value)\n        return true\n    } catch {\n        return false\n    }\n\n    \n}\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n    var items =key.split('.');\n    for (let t=0; t<items.length; t++){\n        value = value[items[t]];\n    };\n    return value;\n}\n\n\nfunction setPropertyValueFromDot(key, record, value){\n    // Retrieves value by following dot notation\n\n    var items = key.split('.');\n\n    let item = items[0]\n\n    \n    if(items.length > 1){\n        if(!record[item]){\n            record[item] = {}\n        }\n        \n        setPropertyValueFromDot(items.slice(1).join('.'), record[item], value)\n    } else {\n\n        record[item] = value\n    }\n\n    return record;\n}\n\n\n\nfunction objectToDotNotation(obj, parentPrefix = '') {\n    let result = {};\n\n    // Helper function to handle recursion and path building\n    function recurse(o, path) {\n        for (let key in o) {\n            if (o.hasOwnProperty(key)) {\n                const newPath = path ? `${path}.${key}` : key;\n\n                // If the property is an object or array, recurse further\n                if (typeof o[key] === 'object' && o[key] !== null) {\n                    recurse(o[key], newPath);\n                } else {\n                    // Otherwise, add the property to the result\n                    result[newPath] = o[key];\n                }\n            }\n        }\n    }\n\n    recurse(obj, parentPrefix);\n    return result;\n}\n\n\n\n\nfunction simplify(data) {\n    // Remove arrays of 1\n    if (Array.isArray(data)) {\n        // If the array has exactly one element, return that element\n        if (data.length === 1) {\n            return simplify(data[0]);\n        } else {\n            // Otherwise, process each element in the array\n            return data.map(simplify);\n        }\n    } else if (data !== null && typeof data === 'object') {\n        // If the data is an object, process each key\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = simplify(data[key]);\n            }\n        }\n        return newData;\n    } else {\n        // If the data is neither an array nor an object, return it as is\n        return data;\n    }\n}\n\n\nfunction jsonToPropertiesSingle(record){\n    // Converts lists to single item(the first item)\n\n\n    if(Array.isArray(record)){\n        if(record.length == 0) { return null }\n        record = record[0]\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = jsonWithoutList(record[k])\n        }\n    }\n    return record\n}\n\nfunction jsonToPropertiesList(record){\n    // Converts single items to lists\n\n\n    if(Array.isArray(record)){\n        let newArray = []\n        for(let r of record){\n            newArray.push(jsonToLists(r))\n        }\n        record = newArray\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = [record[k]]\n        }\n    }\n    return record\n}","import { krakenDateHelpers } from \"./krakenDateHelpers.js\";\n\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\nexport const krakenStringHelpers = {\n    extractMentions: extractMentions,\n    extractNames: extractNames,\n    extractValueAndUnit: extractValueAndUnit,\n    extractUrls: extractUrls,\n    extractNumbers: extractNumbers,\n    extractPhoneNumbers: extractPhoneNumbers,\n    extractDates: extractDates,\n    extractEmails: extractEmails,\n    toCamelCase: toCamelCase,\n    fromCamelCase: fromCamelCase\n};\n\n\n\nfunction toCamelCase(str) {\n    return (\n        str\n            // Split the string by spaces, underscores, or hyphens\n            .split(/[-_\\s]+/)\n            // Convert the first word to lowercase and capitalize the first letter of the following words\n            .map((word, index) =>\n                index === 0\n                    ? word.toLowerCase()\n                    : word.charAt(0).toUpperCase() +\n                      word.slice(1).toLowerCase(),\n            )\n            // Join them back into a single string\n            .join(\"\")\n    );\n}\n\nfunction fromCamelCase(str) {\n    return (\n        str\n            // Insert a space before every uppercase letter and convert the whole string to lowercase\n            .replace(/([A-Z])/g, \" $1\")\n            .toLowerCase()\n            .trim()\n    );\n}\n\nfunction extractMentions(text) {\n    // Error handling for invalid input\n    if (typeof text !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    // Regular expression to match mentions\n    const mentionRegex = /\\B@\\w+/g;\n    const mentions = text.match(mentionRegex);\n\n    // Return an empty array if no mentions found\n    return mentions ? mentions : [];\n}\n\nfunction extractNames(inputString) {\n    if (typeof inputString !== \"string\") {\n        throw new TypeError(\"Input must be a string\");\n    }\n\n    const namePattern = /\\b[A-Z][a-z]*\\b/g;\n    const names = inputString.match(namePattern);\n\n    return names || [];\n}\n\nfunction extractValueAndUnit(input) {\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    const regex = /(-?\\d+\\.?\\d*)\\s*([a-zA-Z]+)/;\n    const match = input.match(regex);\n\n    if (!match) {\n        throw new Error(\"No value and unit found in the input string\");\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n\n    return { value, unit };\n}\n\nfunction extractNumbers(input) {\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    const numbers = input.match(/\\d+/g);\n    if (numbers === null) {\n        return [];\n    }\n\n    return numbers.map(Number);\n}\n\nfunction extractPhoneNumbers(input) {\n    // Error handling: check if input is a string\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    // Regular expression to match different telephone number formats\n    //const phoneRegex = /(\\+?\\d{1,2}[-.\\s]?)?(\\(?\\d{3}\\)?[-.\\s]?)?\\d{3}[-.\\s]?\\d{4}/g;\n    const phoneRegex =\n        /(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})/g;\n\n    // Extract phone numbers\n    const phoneNumbers = input.match(phoneRegex);\n\n    // If no phone numbers are found, return an empty array\n    if (!phoneNumbers) {\n        return [];\n    }\n\n    return phoneNumbers;\n}\n\nfunction extractDates(input) {\n    try {\n        if (typeof input !== \"string\") {\n            return [];\n        }\n\n        // Regular expression to match dates in YYYY-MM-DD, DD/MM/YYYY, or MM-DD-YYYY format\n        const datePattern =\n            /\\b(\\d{4}-\\d{2}-\\d{2}|\\d{2}\\/\\d{2}\\/\\d{4}|\\d{2}-\\d{2}-\\d{4})\\b/g;\n        const dates = input.match(datePattern);\n\n        if (!dates) {\n            return [];\n        }\n\n        let validDates = [];\n        for (let date of dates) {\n            let d = krakenDateHelpers.toDate(date);\n            if (d && d != null) {\n                validDates.push(d);\n            }\n        }\n\n        return validDates;\n    } catch (error) {\n        return [];\n    }\n}\n\nfunction extractEmails(text) {\n    try {\n        // Check if the input is a string\n        if (typeof text !== \"string\") {\n            throw new Error(\"Input must be a string\");\n        }\n\n        // Regular expression for matching email addresses\n        const emailRegex =\n            /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,7}\\b/g;\n        const emails = text.match(emailRegex);\n\n        // Check if any emails were found\n        if (emails === null) {\n            throw new Error(\"No email addresses found\");\n        }\n\n        return emails;\n    } catch (error) {\n        return `Error: ${error.message}`;\n    }\n}\n\nfunction extractUrls(text) {\n    try {\n        if (typeof text !== \"string\") {\n            throw new Error(\"Input must be a string\");\n        }\n\n        const urlRegex = /https?:\\/\\/[^\\s/$.?#].[^\\s]*/g;\n        const urls = text.match(urlRegex);\n\n        if (!urls) {\n            return [];\n        }\n\n        return urls;\n    } catch (error) {\n        console.error(\"An error occurred:\", error.message);\n        return [];\n    }\n}\n","\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenValueHelpers } from './krakenValueHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nlet MAX_WIDTH = 30\n\nexport function krakenTextTable(records, keys, headers){\n\n\n    let content = ''\n    \n    // Duplicate records\n    records = JSON.parse(JSON.stringify(records))\n\n    // If record, convert properties to array\n    if(krakenArrayHelpers.isArray(records) == false){\n        if(krakenObjectHelpers.isObject(records) == true){\n\n            let values = []\n            let keys = Object.keys(records)\n            for(let k of keys){\n                let v = records[k]\n                v.propertyID = k\n                values.push(v)\n            }\n            records = values\n        } \n    }\n    \n\n    \n    // Build keys from records keys if missing\n    if(!keys || keys == null){\n        keys = krakenArrayHelpers.getKeys(records)\n    }\n   \n    // Build headers from keys if missing\n    if(!headers || headers == null){\n        headers = keys\n    }\n\n    // Convert values\n    records = krakenValueHelpers.valuesToText(records)\n\n    // Get max length for each keys\n    let keysLength = {}\n    let totalLength = 0\n    \n    for(let i=0; i < keys.length; i++){\n\n        let key = keys[i]\n        let header = headers[i]\n    \n        let values = krakenArrayHelpers.getValuesForKey(records, key)\n        keysLength[key] = header.length\n\n        for(let v of values){\n            let l = v.length\n            \n            if ( l > keysLength[key] ){\n                keysLength[key] = l\n            }\n        }\n        totalLength += keysLength[key] + 2\n    }\n\n    \n\n    // Build table header\n\n    // Top bar line\n    content += `${''.padEnd(totalLength, '-')}`\n    content +='\\n'\n\n    // Headings\n    for(let i=0; i < keys.length; i++){\n        let key = keys[i]\n        let header = headers[i]\n        content += `${header.padEnd(keysLength[key] + 2, ' ')}`\n    }\n    content +='\\n'\n    \n    for(let key of keys){\n        content += `${''.padEnd(keysLength[key] + 2, '-')}`\n    }\n    content += '\\n'\n\n    \n    // Build table rows\n    for(let record of records){\n        for(let key of keys){\n            \n            let c = String(record?.[key]) || ''\n            if(c.length > MAX_WIDTH){ c = c.slice(0, MAX_WIDTH -3) + '... '}\n            c = c.padEnd(keysLength[key] + 2, ' ')\n            content += `${c}`\n        }\n        content += '\\n'\n    }\n    \n\n    \n    \n    content += `${''.padEnd(totalLength, '-')}`\n    content += '\\n'\n\n    return content\n    \n}","\n\nimport { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nexport const krakenApiHelpers = {\n\n    get: getApi,\n    post: postApi,\n    delete: deleteApi,\n    \n}\n\n\nasync function getApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    let url = new URL(urlPath, String(baseUrl));\n\n    url.search = new URLSearchParams(params);\n\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status && 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n    let results = await response.json()\n\n    return results\n\n}\n\n\nasync function postApi(baseUrl, urlPath,  records){\n\n    //Post \n\n    let requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(records)\n    };\n\n    let url = new URL(urlPath, String(baseUrl));\n\n    const response = await fetch(url, requestOptions)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' + response.statusText);\n    }\n\n    return true\n    \n}\n\nasync function deleteApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'DELETE',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    let url = new URL(urlPath, String(baseUrl));\n\n    url.search = new URLSearchParams(params);\n\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n\n    return true\n    \n}\n\n","import { krakenArrayHelpers as array } from \"./krakenArrayHelpers.js\";\n\nexport const krakenHeadingsHelpers = {\n    heading1: _getHeading1,\n    heading2: _getHeading2,\n    headingDescription: _getHeadingDescription,\n    headingDate: _getHeadingDate,\n    headingStatus: _getHeadingStatus,\n};\n\nfunction _getHeading1(record) {\n    let heading = \"heading1\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeading2(record) {\n    let heading = \"heading2\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDescription(record) {\n    let heading = \"headingDescription\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDate(record) {\n    let heading = \"headingDate\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingStatus(record) {\n    let heading = \"headingStatus\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingX(record, heading) {\n    let record_type = record[\"@type\"];\n\n    let config = getConfig();\n\n    let headingPossibilities = config?.[record_type]?.[heading];\n\n    if (!headingPossibilities || headingPossibilities == null) {\n        headingPossibilities = config?.[\"Thing\"]?.[heading];\n    }\n\n    let headingValue = null;\n\n    for (let hp of headingPossibilities) {\n        headingValue = _getValue(record, heading, hp);\n\n        if (headingValue && headingValue != null) {\n            break;\n        }\n    }\n\n    return headingValue;\n}\n\nfunction _getValue(record, heading, keys) {\n    keys = array.ensureArray(keys);\n\n    let values = [];\n    for (let k of keys) {\n        let value = record[k];\n\n        if (Array.isArray(value)) {\n            value = value[0];\n        }\n\n        // Handle object as values (when listItem references item for example )\n        if (value?.[\"@type\"]) {\n            value = _getHeadingX(value, \"heading1\");\n        }\n\n        if (value && value != null) {\n            values.push(value);\n        }\n    }\n\n    if (values.length == 0) {\n        return null;\n    }\n\n    // Assemble values\n    let headingValue = values.join(\" \");\n\n    return headingValue;\n}\n\nfunction getConfig() {\n    let record = {\n        Thing: {\n            heading1: [\"name\", \"url\", \"@id\"],\n            heading2: [\"name\", \"url\", \"@id\"],\n            headingDescription: [\"description\"],\n            headingDate: [\"\"],\n        },\n        Article: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        Action: {\n            heading1: [\"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        Person: {\n            heading1: [[\"givenName\", \"familyName\"], \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        ListItem: {\n            heading1: [\"item\", \"name\", \"url\", \"@id\"],\n            heading2: [\"item\", \"url\", \"@id\"],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        CreativeWork: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        PostalAddress: {\n            heading1: [\"streetAddress\", \"name\", \"@id\"],\n            heading2: [\n                [\n                    \"addressLocality\",\n                    \"addressRegion\",\n                    \"postalCode\",\n                    \"addressCountry\",\n                ],\n            ],\n            headingDescription: [\"text\", \"name\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n    };\n\n    return record;\n}\n","import { krakenAnalysisHelpers } from \"./krakenAnalysisHelpers.js\";\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\nexport const krakenTemplateHelpers = {\n    get: replacePlaceholders,\n    replacePlaceholders: replacePlaceholders,\n    render: replacePlaceholders,\n};\n\nfunction replacePlaceholders(template, record) {\n    template = replacePlaceholdersLists(template, record);\n    template = replacePlaceholdersValues(template, record);\n    return template;\n}\n\nfunction replacePlaceholdersLists(template, record) {\n    // Replace simple {{name}} placeholders\n\n    console.log(template);\n\n    console.log(typeof template);\n    if (!template || template == null || template === \"\") {\n        return template;\n    }\n\n    while (template.includes(\"{{ \")) {\n        template = template.replace(\"{{ \", \"{{\");\n    }\n\n    while (template.includes(\" }}\")) {\n        template = template.replace(\" }}\", \"}}\");\n    }\n\n    while (template.includes(\"{{# \")) {\n        template = template.replace(\"{{# \", \"{{#\");\n    }\n\n    while (template.includes(\"{{/ \")) {\n        template = template.replace(\"{{/ \", \"{{/\");\n    }\n\n    while (template.includes(\"{{#\")) {\n        // Get last\n        let parts = template.split(\"{{#\");\n        let propertyContent = parts[parts.length - 1];\n        let contentBefore = parts.slice(0, parts.length - 1).join(\"{{#\");\n\n        let propertyID = propertyContent.split(\"}}\")[0];\n        let valueContentItems = propertyContent.split(\"}}\");\n        valueContentItems = valueContentItems.slice(1);\n        let valueContent = valueContentItems.join(\"}}\");\n\n        let content = valueContent.split(\"{{/\" + propertyID)[0];\n\n        let contentAfter = valueContent\n            .split(\"{{/\" + propertyID + \"}}\")\n            .slice(1)\n            .join(\"{{/\");\n\n        // Get values\n        let values = krakenDotNotationHelpers.getValue(propertyID, record);\n        if (!Array.isArray(values)) {\n            values = [values];\n        }\n\n        let partsContent = \"\";\n        for (let i = 0; i < values.length; i++) {\n            let value = values[i];\n            let tempRecord = JSON.parse(JSON.stringify(record));\n            tempRecord = krakenDotNotationHelpers.setValue(\n                tempRecord,\n                propertyID,\n                value,\n            );\n            partsContent += replacePlaceholdersValues(content, tempRecord);\n        }\n\n        template =\n            String(contentBefore) + String(partsContent) + String(contentAfter);\n    }\n\n    return template;\n}\n\nfunction replacePlaceholdersValues(template, record) {\n    // Replaces placeholders {{ }} by value from record\n    // Looks for {{ property1.property2 | command:propertyID }}\n\n    let content = template.replace(/{{(.*?)}}/g, (match, keyString) => {\n        let value = _getValue(keyString, record);\n        return value; // Replace with value\n    });\n\n    content = content.replace(\"  \", \" \");\n    return content;\n}\n\nfunction _getValue(content, record) {\n    if (!content || content === null || content === \"\") {\n        return null;\n    }\n    if (!record || record === null || record === \"\") {\n        return null;\n    }\n\n    let keyPath = _getKeyPath(content);\n\n    let values = krakenDotNotationHelpers.getValue(keyPath, record);\n\n    let command = _getCommand(content);\n\n    let commandProperty = _getCommandProperty(content);\n\n    if (\n        command &&\n        command != null &&\n        commandProperty &&\n        commandProperty != null\n    ) {\n        values = krakenAnalysisHelpers?.[command](values, commandProperty);\n    }\n\n    return values;\n}\n\nfunction _getKeyPath(value) {\n    if (!value || value === null || value === \"\") {\n        return null;\n    }\n\n    let keyString = value.trim();\n    if (!keyString || keyString === null || keyString === \"\") {\n        return null;\n    }\n\n    // Get key\n    let key = keyString.split(\"|\")[0];\n    key = key.trim(); // Remove any surrounding whitespace\n    if (!key || key === null || key === \"\") {\n        return \"\";\n    }\n\n    return key;\n}\n\nfunction _getCommand(value) {\n    if (!value || value === null || value === \"\") {\n        return null;\n    }\n\n    let keyString = value.trim();\n    if (!keyString || keyString === null || keyString === \"\") {\n        return null;\n    }\n\n    // Get commandSection\n    let commandSection = keyString.split(\"|\")?.[1] || null;\n    if (!commandSection || commandSection === null || commandSection === \"\") {\n        return null;\n    }\n\n    commandSection = commandSection.trim(); // Remove any surrounding whitespace\n    if (!commandSection || commandSection === null || commandSection === \"\") {\n        return null;\n    }\n\n    // Get command\n    let command = commandSection.split(\":\")?.[0];\n    if (!command || command === null || command === \"\") {\n        return null;\n    }\n    command = command.trim();\n    if (!command || command === null || command === \"\") {\n        return null;\n    }\n\n    return command;\n}\n\nfunction _getCommandProperty(value) {\n    if (!value || value === null || value === \"\") {\n        return null;\n    }\n\n    let keyString = value.trim();\n    if (!keyString || keyString === null || keyString === \"\") {\n        return null;\n    }\n\n    // Get commandSection\n    let commandSection = keyString.split(\"|\")?.[1] || null;\n    if (!commandSection || commandSection === null || commandSection === \"\") {\n        return null;\n    }\n\n    commandSection = commandSection.trim(); // Remove any surrounding whitespace\n    if (!commandSection || commandSection === null || commandSection === \"\") {\n        return null;\n    }\n\n    // Get command\n    let commandProperty = commandSection.split(\":\")?.[1];\n    if (\n        !commandProperty ||\n        commandProperty === null ||\n        commandProperty === \"\"\n    ) {\n        return null;\n    }\n    commandProperty = commandProperty.trim();\n    if (\n        !commandProperty ||\n        commandProperty === null ||\n        commandProperty === \"\"\n    ) {\n        return null;\n    }\n\n    return commandProperty;\n}\n","\n\nexport const krakenNullHelpers = {\n\n    isNull: isNull,\n    isNotNull: isNotNull\n}\n\n\n\n\nfunction isNotNull(value){\n\n    return !isNull(value)\n\n}\n\n\n\nfunction isNull(value){\n\n    if(value === 0){ return false }\n    if(value === undefined){ return true }\n    if(value === null){ return true }\n    if(value === ''){ return true }\n\n    // If array, removes null values then check if length == 0\n    if(Array.isArray(value)){\n        value = value.filter(x => isNull(x) == false)\n        if(value.length == 0){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    // If object, check if it has keys\n    if(typeof value === 'object' && !Array.isArray(value) && value !== null){\n        if(Object.keys(value).length == 0){\n            return true\n        } else {\n            return false\n        }\n    }\n\n    // Catch all\n    return false\n\n}\n\n","export class KrCache {\n    constructor() {\n        this._db = {};\n\n        this._maxArgsLength = 0\n\n    }\n\n\n    getAll(argsLength){\n        // Retrieves all values from cache\n        \n        function getValues(db, maxArgsLength, l=0){\n\n            let results = []\n\n            // Stop if reached depth\n            if(l == maxArgsLength){\n                results.push(db)\n                return results\n            }\n\n            // Iterate through paths\n            for(let k of Object.keys(db)){\n                results = results.concat(getValues(db[k], maxArgsLength, l + 1))\n            }\n            return results\n\n        }\n\n        argsLength = argsLength || this._maxArgsLength\n        let results = getValues(this._db, argsLength)\n\n        return results\n        \n    }\n\n    \n\n    set(args){\n        // Set a value in cache. First arguments is the path,  Last argument is the actual value\n        \n\n        let path = this._db\n\n        let i\n\n        let a = arguments.length -1\n\n        \n        for(i=0; i < arguments.length -2; i++){            \n\n            if(!path[arguments[i]]){\n                path[arguments[i]] = {}\n            }\n            path = path[arguments[i]]\n        }\n\n        if(this._maxArgsLength < a){\n            this._maxArgsLength = a\n        }\n        \n        path[arguments[a-1]] = arguments[a]\n\n        return\n    }\n\n    get(args){\n         // Get a value in cache.\n        let a = arguments.length -1\n        let i\n        let path = this._db\n        \n        for(i=0; i < arguments.length -1; i++){\n\n            \n            path = path?.[ arguments[i]]\n            if(!path){ return null }\n        }\n\n        return path[arguments[a]] \n    }\n\n    \n}\n","\nimport { krakenTextTable } from './krakenTextTable.js'\n\n\nexport class KrakenTimer {\n\n    constructor(name) {\n\n        this.name = name\n        this.milestones = []\n\n        this.start()\n       \n    }\n\n    getMilestone(name){\n        for(let m of this.milestones){\n            if (m.name == name) { return m }\n        }\n        return undefined\n    }\n    \n    addMilestone(name){\n        // Adds a milestone\n\n        if (!name || name == null){\n            name = 'break ' + String(this.milestones.length)\n        }\n        \n        let milestone = {\n            \"@type\": \"Event\",\n            \"@id\": String(crypto.randomUUID()),\n            \"name\": name,\n            \"endTime\": new Date()\n        }\n        this.milestones.push(milestone)\n    }\n\n    break(name){\n        this.addMilestone(name)\n    }\n\n    start(){\n        this.milestones = []\n        this.addMilestone('start')\n    }\n\n    end(){\n       \n        this.addMilestone('end')\n    }\n\n    \n    getDuration(startMilestone, endMilestone){\n\n        if(!endMilestone || endMilestone == null){\n            endMilestone = startMilestone\n            startMilestone = 'start'\n        }\n        if(!startMilestone){\n            startMilestone = 'start'\n            endMilestone = 'end'\n        }    \n\n        let startTime = this.getMilestone('start')?.endTime\n        let endTime = this.getMilestone('end')?.endTime ?? new Date()\n\n        let duration = (endTime - startTime) / 1000\n\n        return duration\n    \n        \n    }\n\n    get duration(){\n        return this.getDuration()\n    }\n\n    getResults(){\n\n        let results = []\n\n        // Set first milestone to 0\n        this.milestones[0].duration = {\n            \"@type\": \"QuantitativeValue\",\n            \"@id\": String(crypto.randomUUID()),\n            \"unitCode\": \"SEC\",\n            \"unitText\": \"s\",\n            'value': 0\n        }            \n        \n        for(let i=1; i< this.milestones.length -1; i++){\n            let currentMilestone = this.milestones[i]\n            let previousMilestone = this.milestones[i-1]\n            let duration = (currentMilestone.endTime - previousMilestone.endTime) / 1000\n            currentMilestone.duration = {\n                \"@type\": \"QuantitativeValue\",\n                \"@id\": String(crypto.randomUUID()),\n                \"unitCode\": \"SEC\",\n                \"unitText\": \"s\",\n                'value': duration\n            }            \n            results.push(currentMilestone)\n        }\n\n         // Add milestone for total\n\n        if(this.milestones.length > 2){\n            let endMilestone = {\n                \"@type\": \"Event\",\n                \"@id\": String(crypto.randomUUID()),\n                \"name\": \"Total\",\n                \"duration\": {\n                        \"@type\": \"QuantitativeValue\",\n                        \"@id\": String(crypto.randomUUID()),\n                        \"unitCode\": \"SEC\",\n                        \"unitText\": \"s\",\n                        'value': this.duration\n                    }            \n            }\n            results.push(endMilestone)\n        }\n        \n        return results\n        \n    }\n\n    console(){\n\n        \n        let results = this.getResults()\n\n        let keys = ['name', 'duration']\n        let headers = ['Timer milestone', 'Duration']\n\n        let content = krakenTextTable(results, keys, headers)\n\n        console.log(content)\n    }\n    \n}"],"names":[],"version":3,"file":"main.js.map"}