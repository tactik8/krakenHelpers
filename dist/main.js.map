{"mappings":"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","sources":["src/index.js","src/krakenHelpers/krakenHelpers.js","src/krakenHelpers/helpers/krakenAnalysisHelpers.js","src/krakenHelpers/helpers/krakenNullHelpers.js","src/krakenHelpers/helpers/krakenArrayHelpers.js","src/krakenHelpers/helpers/krakenNumberHelpers.js","src/krakenHelpers/helpers/krakenDotNotationHelpers.js","src/krakenHelpers/helpers/krakenValueHelpers.js","src/krakenHelpers/helpers/krakenDateHelpers.js","src/krakenHelpers/helpers/krakenThingHelpers.js","src/krakenHelpers/krakenHelpersLight.js","src/krakenHelpers/helpers/krakenElementHelpers.js","src/krakenHelpers/helpers/krakenEmailHelpers.js","src/krakenHelpers/helpers/krakenJsonHelpers.js","src/krakenHelpers/helpers/krakenObjectHelpers.js","src/krakenHelpers/helpers/krakenStringHelpers.js","src/krakenHelpers/helpers/krakenUrlHelpers.js","src/krakenHelpers/helpers/krakenHeadingsHelpers.js","src/krakenHelpers/helpers/krakenApiHelpers.js","src/krakenHelpers/helpers/krakenElementEventHelpers.js","src/krakenHelpers/helpers/krakenSimpleThingsHelpers.js","src/krakenHelpers/helpers/krakenFileHelpers.js","src/krakenHelpers/helpers/krakenElementThingHelpers.js","src/krakenHelpers/helpers/krakenTemplateLiveHelpers.js","src/krakenHelpers/helpers/krakenExtractHelpers.js","src/krakenHelpers/helpers/krakenLogHelpers.js","src/krakenHelpers/helpers/krakenTextTable.js","src/krakenHelpers/helpers/krakenSimpleHtmlHelpers.js","src/krakenHelpers/helpers/krakenTemplateHelpers.js","src/krakenHelpers/helpers/krakenCache.js","src/krakenHelpers/helpers/krakenTimer.js","src/krakenHelpers/tools/krakenElementOrchestrator.js","src/krakenHelpers/helpers/krakenElementDbHelpers.js","src/krakenHelpers/helpers/krakenThingDbHelpers.js"],"sourcesContent":["\n\nimport {krakenHelpers as krakenHelpersObject} from './krakenHelpers/krakenHelpers.js'\n\nexport const krakenHelpers = krakenHelpersObject\n\n\n","\nimport { krakenAnalysisHelpers } from './helpers/krakenAnalysisHelpers.js'\nimport { krakenApiHelpers } from './helpers/krakenApiHelpers.js'\nimport { krakenArrayHelpers } from './helpers/krakenArrayHelpers.js'\nimport { krakenDateHelpers } from './helpers/krakenDateHelpers.js'\nimport { krakenDotNotationHelpers } from './helpers/krakenDotNotationHelpers.js'\nimport { krakenElementHelpers } from './helpers/krakenElementHelpers.js'\nimport { krakenElementEventHelpers } from './helpers/krakenElementEventHelpers.js'\nimport { krakenElementThingHelpers } from './helpers/krakenElementThingHelpers.js'\n\nimport { krakenEmailHelpers } from './helpers/krakenEmailHelpers.js'\nimport { krakenExtractHelpers } from './helpers/krakenExtractHelpers.js'\nimport { krakenFileHelpers } from './helpers/krakenFileHelpers.js'\n\nimport { krakenHeadingsHelpers } from './helpers/krakenHeadingsHelpers.js'\nimport { krakenJsonHelpers } from './helpers/krakenJsonHelpers.js'\nimport { krakenLogHelpers } from './helpers/krakenLogHelpers.js'\nimport { krakenNullHelpers } from './helpers/krakenNullHelpers.js'\nimport { krakenNumberHelpers } from './helpers/krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './helpers/krakenObjectHelpers.js'\nimport { krakenSimpleHtmlHelpers } from './helpers/krakenSimpleHtmlHelpers.js'\n\nimport { krakenSimpleThingsHelpers } from './helpers/krakenSimpleThingsHelpers.js'\nimport { krakenStringHelpers } from './helpers/krakenStringHelpers.js'\nimport { krakenTemplateHelpers } from './helpers/krakenTemplateHelpers.js'\nimport { krakenTemplateLiveHelpers } from './helpers/krakenTemplateLiveHelpers.js'\n\nimport { krakenTextTable } from './helpers/krakenTextTable.js'\nimport { krakenThingHelpers } from './helpers/krakenThingHelpers.js'\nimport { krakenUrlHelpers } from './helpers/krakenUrlHelpers.js'\nimport { krakenValueHelpers } from './helpers/krakenValueHelpers.js'\n\nimport { KrCache } from './helpers/krakenCache.js'\nimport { KrakenTimer } from './helpers/krakenTimer.js'\n\nimport { KrElementOrchestrator } from './tools/krakenElementOrchestrator.js'\n\n\nexport const krakenHelpers = {\n    analysis: krakenAnalysisHelpers,\n    api: krakenApiHelpers,\n    array: krakenArrayHelpers,\n    Cache: KrCache,\n    date: krakenDateHelpers,\n    dot: krakenDotNotationHelpers,\n    element: krakenElementHelpers,\n    elementEvent: krakenElementEventHelpers,\n    elementThing: krakenElementThingHelpers,\n    email:krakenEmailHelpers,\n    extract: krakenExtractHelpers,\n    file: krakenFileHelpers,\n    headings: krakenHeadingsHelpers,\n    html: krakenSimpleHtmlHelpers,\n    json: krakenJsonHelpers,\n    Logs: krakenLogHelpers,\n    null: krakenNullHelpers,\n    number: krakenNumberHelpers,\n    object: krakenObjectHelpers,\n    simple: krakenSimpleThingsHelpers,\n    string: krakenStringHelpers,\n    template: krakenTemplateHelpers,\n    templateLive: krakenTemplateLiveHelpers,\n    textTable: krakenTextTable,\n    thing: krakenThingHelpers,\n    Timer: KrakenTimer,\n    url: krakenUrlHelpers,\n    value: krakenValueHelpers,\n    \n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    isEqual:krakenNullHelpers.isEqual,\n    isNotEqual:krakenNullHelpers.isNotEqual,\n    toArray: krakenArrayHelpers.toArray,\n\n    elementOrchestrator: KrElementOrchestrator\n}","\nimport { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\nimport { krakenValueHelpers } from \"./krakenValueHelpers.js\";\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers,\n    value: krakenValueHelpers\n}\n\n\nexport const krakenAnalysisHelpers = {\n\n    analyzeValues: analyzeValues,\n    analyze: analyze,\n    max: getMax,\n    min:getMin,\n    n: getN,\n    sum: getSum,\n    avg: getAverage,\n    stdev: getStandardDeviation,\n    first: getFirst,\n    last: getLast\n};\n\n\n\nfunction analyze(value){\n\n    value = h.toArray(value)\n    \n    let keys = h.array.getKeys(value)\n\n    let analysis = {}\n    for(let k of keys){\n        analysis[k] = analyzeValues(value, k)\n    }\n\n    return analysis\n}\n\nfunction analyzeValues(value, key) {\n    let analysis = {\n        type: null,\n        types: {},\n        typeSchemaOrg: null,\n        typesSchemaOrg: {},\n        values: {},\n        N: null,\n        nullN: null,\n        uniqueN: null,\n        min: null,\n        max: null,\n        stddev: null\n    };\n\n    let values = h.array.getValuesForKey(value, key);\n\n    for (let v of values) {\n        \n        // Get type\n        let t = h.value.getType(v)\n        analysis.types[t] = (analysis.types[t] || 0) + 1;\n\n        if(t && t != null){\n            let s = analysis.type\n            if(s && s != null && s != t){\n                analysis.type = 'na'\n            } else {\n                analysis.type = t\n            }\n        }\n\n        \n        // Get schema type\n        let tt = h.value.getTypeSchemaOrg(v)\n        analysis.typesSchemaOrg[tt] = (analysis.typesSchemaOrg[tt] || 0) + 1;\n\n        if(tt && tt != null){\n            let s = analysis.typeSchemaOrg\n            if(s && s != null && s != tt){\n                analysis.typeSchemaOrg = 'na'\n            } else {\n                analysis.typeSchemaOrg = tt\n            }\n        }\n        \n        // Get value\n        let newV = v;\n        if (newV[\"@type\"]) {\n            newV = `${newV[\"@type\"]}/${newV[\"@id\"]}`;\n        }\n        analysis.values[newV] = (analysis.values[newV] || 0) + 1;\n\n        // get min / max\n        analysis.N = getN(value, key)\n        analysis.nullN = getNull(value, key)\n        analysis.uniqueN = h.array.getUniqueN(value, key)\n        analysis.min = getMin(value, key);\n        analysis.max = getMax(value, key);\n        analysis.stddev = getStandardDeviation(value, key);\n        \n        \n        \n    }\n\n    return analysis;\n}\n\n\n\n\n\n\nfunction getFirst(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getValuesForKey(value, key)\n    items = h.array.ensureArray(items)\n    \n    let [result] = items.slice(0)\n\n\n    return result\n\n}\n\n\nfunction getLast(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getValuesForKey(value, key)\n    items = h.array.ensureArray(items)\n\n    let [result] = items.slice(-1)\n\n\n    return result\n\n\n}\n\n\nfunction getMax(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = Math.max(...items)\n\n    return result\n\n}\n\nfunction getMaxRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getMax(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('maxValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\n\nfunction getMin(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = Math.min(...items)\n\n    return result\n\n}\n\nfunction getMinRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getMin(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('minValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getN(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = items.length\n\n    return result\n\n}\n\nfunction getNRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getN(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('count', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getSum(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    let result = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    return result\n\n}\n\nfunction getSumRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getSum(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('sum', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getAverage(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let sumAll = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    let result = sumAll / items.length\n\n    return result\n}\n\nfunction getAverageRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getAverage(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('average', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getStandardDeviation(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let items = h.array.getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let n = items.length\n    let mean = items.reduce((a, b) => a + b) / n\n    let result =  Math.sqrt(items.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n\n    return result\n}\n\nfunction getStandardDeviationRecord(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let result = getStandardDeviation(value, key)\n    let unitCode = h.array.getUnitCodesForKey(value, key)\n\n    return getStatsRecord('marginOfError', key, result, unitCode)\n\n}\n\nfunction getNull(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n    let nullValues = 0\n    for(let v of value){\n\n\n        if ((!v || v == null || v == \"\" || v == {} || v == []) && v!== 0){\n            nullValues + 1\n        }\n    }\n\n    return nullValues\n\n}\n\nfunction getUniqueN(value, key){\n\n    value = h.array.ensureArray(value)\n    if(h.array.validateArray(value) == false){ return undefined }\n\n\n    let uniqueValues = [...new Set(value)];\n\n    let result = uniqueValues.length\n\n\n    return result\n\n}\n\n// -----------------------------------------------------\n//  Statistical record \n// -----------------------------------------------------\n\nfunction getStatsRecord(statType, property, value, unitCode){\n\n\n    let record = {\n        \"@context\": \"https://schema.org/\",\n        \"@id\": \"Observation_Median_Age_Person_Female_SanAntonio_TX_2014\",\n        \"@type\": \"Observation\",\n        \"name\": name,\n        \"variableMeasured\": {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"StatisticalVariable\",\n            \"@id\": \"Median_Height_Person_Female\",\n            \"name\": statType,\n            \"measuredProperty\": {\"@id\": property },\n            \"statType\": {\"@id\": statType},\n            \"constrainingProperty\": []\n        },\n        \"observationAbout\": {},\n        \"value\": value,\n        \"unitCode\": unit\n    }\n\n    return record\n\n}","export const krakenNullHelpers = {\n    isNull: isNull,\n    isNUll: isNull,\n    isNotNull: isNotNull,\n    isNotNUll: isNotNull,\n    isEqual: isEqual,\n    isNotEqual: isNotEqual,\n    isEven: isEven,\n    isOdd, isOdd\n};\n\nfunction isNotNull(value) {\n    return !isNull(value);\n}\n\nfunction isNull(value) {\n    if (value === 0) {\n        return false;\n    }\n    if (value === undefined) {\n        return true;\n    }\n    if (value === null) {\n        return true;\n    }\n    if (value === \"\") {\n        return true;\n    }\n\n    try{\n        if(value instanceof HTMLElement){\n            return false\n        }\n    } catch {}\n\n\n    // Check if date\n    try{\n        let v = value.getTime()\n        if(!isNaN(v)){ return false }\n    } catch {}\n   \n         \n    // If array, removes null values then check if length == 0\n    if (Array.isArray(value)) {\n        value = value.filter((x) => isNull(x) == false);\n        if (value.length == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // If object, check if it has keys\n    if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\n        if (Object.keys(value).length == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Catch all\n    return false;\n}\n\n\n\nfunction isNotEqual(value1, value2){\n    return !isEqual(value1, value2) \n}\n\nfunction isEqual(value1, value2) {\n    // if nulls\n    if (isNull(value1) && isNull(value2)) {\n        return true;\n    }\n\n    if (isNull(value1) && isNotNull(value2)) {\n        return false;\n    }\n\n    if (isNotNull(value1) && isNull(value2)) {\n        return false;\n    }\n\n\n    // Equality for others\n    try {\n        if (value == value2) {\n            return true;\n        }\n    } catch {}\n\n\n    \n    \n    // Equality for Thing\n    let v1_record_type = value1?.record_type || value1?.[\"@type\"];\n    let v2_record_type = value2?.record_type || value2?.[\"@type\"];\n    let v1_record_id = value1?.record_id || value1?.[\"@id\"];\n    let v2_record_id = value2?.record_id || value2?.[\"@id\"];\n\n    if (isNull(v1_record_type) && isNotNull(v2_record_type)) {\n        return false;\n    }\n    if (isNotNull(v1_record_type) && isNull(v2_record_type)) {\n        return false;\n    }\n    if (isNull(v1_record_id) && isNotNull(v2_record_id)) {\n        return false;\n    }\n    if (isNotNull(v1_record_id) && isNull(v2_record_id)) {\n        return false;\n    }\n\n    if (isNotNull(v1_record_type) && isNotNull(v2_record_type)) {\n        if (isNotNull(v1_record_id) && isNotNull(v2_record_id)) {\n            if (\n                v1_record_type == v2_record_type &&\n                v1_record_id == v2_record_id\n            ) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    // Equality for objects\n    try {\n        if (JSON.stringify(value1) == JSON.stringify(value2)) {\n            return true;\n        }\n    } catch {}\n\n\n    \n    return false;\n}\n\n\n\nfunction isEven(value){\n\n    try{\n        if(value % 2 == 1){\n            return false\n        } else {\n            return true\n        }\n            \n    } catch { return false }\n    \n}\n\nfunction isOdd(value){\n\n    try{\n        if(value % 2 == 0){\n            return false\n        } else {\n            return true\n        }\n\n    } catch { return false }\n\n}","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenNumberHelpers} from \"./krakenNumberHelpers.js\";\n\nlet h = {\n    number: krakenNumberHelpers,\n    null: null,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    \n}\n\n\nimport { krakenDotNotationHelpers } from './krakenDotNotationHelpers.js'\n\n\nexport const krakenArrayHelpers = {\n\n    toText: toText,\n    isArray: validateArray,\n    validateArray: validateArray,\n    toArray: ensureArray,\n    ensureArray: ensureArray,\n    getKeys: getKeys,\n    keys: getKeys,\n    getValuesForKey: getValuesForKey,\n    getNumbersForKey: getNumbersForKey,\n    merge: merge,\n    mergeUnique: mergeUnique,\n    \n}\n\n\n// -----------------------------------------------------\n//  Validation \n// -----------------------------------------------------\n\n\nfunction validateArray(value){\n\n    if(Array.isArray(value)){ return true }\n    return false\n    \n}\n\n\n// -----------------------------------------------------\n//  Transformation \n// -----------------------------------------------------\n\nfunction ensureArray(value) {\n    \n    if(h.isNull(value)){ return [] }\n\n    if (validateArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction toText(value) {\n\n    if(validateArray(value) == false){ return undefined }\n\n    let result = `[${value.length}]`\n    return result\n    \n}\n\n\n\n// -----------------------------------------------------\n//  Query \n// -----------------------------------------------------\n\n\n\nfunction getKeys(value){\n    if(validateArray(value) == false){ return undefined }\n\n    let keys = []\n    for(let v of value){\n        for(let k of Object.keys(v)){\n            if(!keys.includes(k)){\n                keys.push(k)\n            }\n        }\n    }\n    keys.sort()\n    return keys\n}\n\nfunction getValuesForKey(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let results = []\n    for(let v of value){\n        let v1 = krakenDotNotationHelpers.getValue(key, v) //v?.[key] \n        if(v1){\n            results.push(v1)\n        }\n    }\n    return results\n    \n}\n\nfunction getNumbersForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    value = ensureArray(value)\n    \n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        let newItem = h.number.toNumber(item)\n        if(h.number.isNumber(newItem) == true){\n            results.push(newItem)\n        }\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            let quantItem = h.number.toNumber(item?.value)\n            if(h.number.isNumber(quantItem) == true){\n                results.push(quantItem)\n            }\n        }\n    }\n    return results    \n}\n\nfunction getUnitCodesForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            results.push(item.unitCode)\n        }\n    }\n    return results    \n}\n\n\nfunction merge(value1, value2){\n    let v1 = ensureArray(value1)\n    let v2 = ensureArray(value2)   \n\n    if(h.isNull(v1) && h.isNull(v2)){ return [] }\n    if(h.isNull(v1) && h.isNotNull(v2)){ return v2 }\n    if(h.isNotNull(v1) && h.isNull(v2)){ return v1 }\n\n    let newValue = v1.concat(v2)\n    return newValue\n}\n\nfunction mergeUnique(value1, value2){\n\n    let values = merge(value1, value2)\n    let uniqueValues = []\n    for(let v of values){\n        if(!uniqueValues.includes(v)){\n            uniqueValues.push(v)\n        }\n    }\n    return uniqueValues\n    \n}","\n\nexport const krakenNumberHelpers = {\n\n    isNumber: isNumber,\n    toNumber: toNumber,\n    toText: toText\n}\n\n\nfunction isNumber(value){\n    \n    return typeof value === 'number';\n    \n}\n\nfunction toNumber(value){\n\n    if(typeof value === 'number') { return value }\n    \n    try { \n        value = Number(value)\n        return value\n    } catch {\n\n    }\n\n    return undefined\n}\n\n\nfunction toText(value, rounding){\n\n    value = toNumber(value)\n\n    if((!value || value == null) && value != 0) { return undefined }\n\n    if(rounding | rounding != null){\n        value = Math.round(value)\n    }\n\n    return String(value)\n    \n}\n\n","import { krakenNullHelpers} from './krakenNullHelpers.js'\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\nconst h = {\n    null: krakenNullHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n}\n\n\nexport const krakenDotNotationHelpers = {\n    get: getPropertyValueFromDot,\n    set: setPropertyValueFromDot,\n    add: addPropertyValueFromDot,\n    toDot: convertToDotNotation,\n    fromDot: convertFromDotNotation,\n    getValue: getPropertyValueFromDot,\n    setValue: setPropertyValueFromDot,\n    addValue: addPropertyValueFromDot,\n}\n\n\n\n\nfunction setPropertyValueFromDot(record, key, value){\n    \n    function _recursiveSet(record, key, value){\n\n        // Set record\n        if(h.isNull(record)){\n            record = {}\n        }\n        \n        // Get property and position from first item of key path\n        let property1 = getCurrentKey(key)\n        let position1 = getCurrentPosition(key)\n        \n        // Get value from property\n        let value1 = record?.[property1]\n\n        \n        // If value is array but position not given, assume first item is modified (position 0)\n        if(krakenArrayHelpers.isArray(value1)){\n            position1 = 0\n        }\n\n        // Get value from position\n        if(h.isNotNull(position1)){\n            value1 = value1?.[position1]\n        }\n\n        // Check if done, else recurse\n        let newKey = getNextDotKey(key)\n\n        if(h.isNotNull(newKey)){\n\n            if(h.isNull(position1)){\n                record[property1] = _recursiveSet(value1, newKey, value)\n            } else {\n                record[property1] = krakenArrayHelpers.toArray(record[property1])\n                record[property1][position1] = _recursiveSet(value1, newKey, value)\n            }\n        } else {\n            if(h.isNull(position1)){\n                record[property1] = value\n            } else {\n                record[property1] = krakenArrayHelpers.toArray(record[property1])\n                record[property1][position1] = value\n            }\n        }\n        return record\n    }\n    return _recursiveSet(record, key, value);\n}\n\n\nfunction addPropertyValueFromDot(record, key, value){\n    /**\n     * Add a value to the current set of values \n     */\n    let currentValue = getPropertyValueFromDot(key, record)\n    if(h.isNull(currentValue)){\n        return setPropertyValueFromDot(record, key, value)\n    } else {\n        let newValue = krakenArrayHelpers.mergeUnique(currentValue, value)\n        return setPropertyValueFromDot(record, key, newValue)\n    }\n    return true\n    \n}\n\n\nfunction getPropertyValueFromDot(key, record){\n    // Retrieves value by following dot notation\n\n\n    // Swap values if mistake done (inverted parameters)\n    if(typeof record == 'string' && typeof key != 'string'){\n\n        let tkey = key\n        let trecord = record\n        key = trecord\n        record= tkey\n    }\n    \n\n    function _recursive(key, record){\n\n\n        // if record is an array of one, convert to object\n        if(krakenArrayHelpers.isArray(record) && record.length == 1){\n            record == record[0]\n        }\n\n        // if record is null, return null\n        if(h.isNull(record)){\n            return null\n        }\n        \n        // Get property\n        let property1 = getCurrentKey(key)\n        let position1 = getCurrentPosition(key)\n        \n        \n        let value1 \n\n        // Get value from property\n        value1 = record?.[property1]\n\n        // Convert value to array if position is defined\n        if(h.isNotNull(position1)){\n            value1 = krakenArrayHelpers.toArray(value1)\n            value1 = value1?.[position1] || null\n        } \n\n        \n\n\n        // Check if done, else recurse\n        let newKey = getNextDotKey(key)\n        if(h.isNotNull(newKey)){\n            // If value is array but position not defined, return first item\n            if(h.isNull(position1) && krakenArrayHelpers.isArray(value1)){\n                value1 = value1?.[0] || null\n            } \n            return _recursive(newKey, value1)\n        } else {\n            return value1\n        }        \n    }\n\n    return _recursive(key, record);\n    \n}\n\n\n\n\nfunction convertToDotNotation(obj, parentKey = '', result = {}) {\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const newKey = parentKey ? `${parentKey}.${key}` : key; // Combine parent key with current key\n\n            if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                // If it's a nested object (not an array), recurse\n                convertToDotNotation(obj[key], newKey, result);\n            } else if (Array.isArray(obj[key])) {\n                // If it's an array, iterate over array elements and include index\n                obj[key].forEach((item, index) => {\n                    const arrayKey = `${newKey}[${index}]`;\n                    if (typeof item === 'object') {\n                        // Recurse for array elements that are objects\n                        convertToDotNotation(item, arrayKey, result);\n                    } else {\n                        // Directly add non-object array elements\n                        result[arrayKey] = item;\n                    }\n                });\n            } else {\n                // If it's a primitive value, add it to the result\n                result[newKey] = obj[key];\n            }\n        }\n    }\n    return result;\n}\n\n\n\nfunction convertFromDotNotation(dotNotationObj) {\n    const result = {};\n\n    for (let key in dotNotationObj) {\n        if (dotNotationObj.hasOwnProperty(key)) {\n            const value = dotNotationObj[key];\n            const keys = key.split('.'); // Split the key by dots\n            let current = result;\n\n            for (let i = 0; i < keys.length; i++) {\n                const part = keys[i];\n\n                // Check if the part contains array notation, e.g., \"contacts[0]\"\n                const arrayMatch = part.match(/^(\\w+)\\[(\\d+)\\]$/);\n\n                if (arrayMatch) {\n                    const arrayKey = arrayMatch[1];\n                    const arrayIndex = parseInt(arrayMatch[2], 10);\n\n                    // Ensure the array exists at this key\n                    if (!current[arrayKey]) {\n                        current[arrayKey] = [];\n                    }\n\n                    // Ensure the specific index in the array exists\n                    if (!current[arrayKey][arrayIndex]) {\n                        current[arrayKey][arrayIndex] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the current array item\n                    current = current[arrayKey][arrayIndex];\n                } else {\n                    // Regular object key (no array notation)\n                    if (!current[part]) {\n                        current[part] = (i === keys.length - 1) ? value : {};\n                    }\n\n                    // Move the reference to the next nested level\n                    current = current[part];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction getCurrentKey(dotKey){\n\n    if(h.isNull(dotKey)){ return null }\n\n    // Get property\n    let keyItems = dotKey.split('.')\n    let keyItem1 = keyItems?.[0]\n\n    let property1 = keyItem1.split('[')[0]\n    let position1 = keyItem1.split('[')[1] || null\n\n\n    return property1\n\n}\nfunction getCurrentPosition(dotKey){\n\n    try{\n        // Get property\n        let keyItems = dotKey.split('.')\n        let keyItem1 = keyItems?.[0]\n\n        let property1 = keyItem1.split('[')[0]\n        let position1 = keyItem1.split('[')[1] || null\n\n        position1 = position1.replace(']', '')\n        position1 = position1.trim()\n        position1 = Number(position1)\n\n        return position1\n    } catch { return null }\n\n}\n\nfunction getNextDotKey(dotKey){\n\n    let keyItems = dotKey.split('.')\n    if(keyItems.length > 1){\n        let newKeys = keyItems.slice(1)\n        let newKey = newKeys.join('.')\n        return newKey\n    } else {\n        return null\n    }\n\n\n}","import { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\nimport { krakenUrlHelpers } from './krakenUrlHelpers.js'\nimport { krakenStringHelpers } from './krakenStringHelpers.js'\n\n\nexport const krakenValueHelpers = {\n\n    toText: toText,\n    getType: getType,\n    getTypeSchemaOrg: getTypeSchemaOrg,\n    innerValuesToText: innerValuesToText,\n    valuesToText: innerValuesToText\n}\n\nfunction toText(value) {\n    \n    if(value !== 0 && value === undefined){ return ''}\n    if(value !== 0 && value === null){ return ''}\n    if(value !== 0 && value == ''){ return ''}\n    if(value !== 0 && Array.isArray(value) && value.length == 0 ){ return ''}\n    if(value !== 0 && value == {}){ return ''}\n    if(value !== 0 && value == 'undefined'){ return ''}\n    \n    if (krakenThingHelpers.isThing(value)) {\n        return krakenThingHelpers.toText(value)\n    } else if (krakenDateHelpers.isDate(value)) {\n        return krakenDateHelpers.toText(value)\n    } else if (krakenDateHelpers.isTextDate(value)) {\n        return krakenDateHelpers.toText(value)\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return krakenArrayHelpers.toText(value)\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return krakenNumberHelpers.toText(value)\n    } else if (krakenObjectHelpers.isObject(value)) {\n        return krakenObjectHelpers.toText(value)\n    } else {\n        value = String(value)\n        value = value.replace('ActionStatus', '')\n        value = value.replace('undefined', '')\n        value = krakenStringHelpers.fromCamelCase(value)\n        return value\n    }\n}\n\n\nfunction innerValuesToText(value){\n    \n    if (krakenArrayHelpers.isArray(value)) {\n        let result = []\n        for(let v of value){\n            result.push(innerValuesToText(v))\n        }\n        return result\n    } \n\n    if(krakenObjectHelpers.isObject(value)){\n\n        let result = {}\n        for(let k of krakenObjectHelpers.keys(value)){\n            result[k] = toText(value[k])\n        }\n        return result \n    }\n    \n    return toText(value)\n}\n\n\nfunction getType(value) {\n\n    if (krakenThingHelpers.isThing(value)) {\n        return 'thing'\n    } else if (krakenDateHelpers.isDate(value)) {\n        return 'datetime'\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return 'array'\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return 'number'\n    } else {\n        return 'string'\n    }\n\n}\n\n\nfunction getTypeSchemaOrg(value){\n\n    let t = getType(value)\n\n\n    if(t == \"thing\"){\n        return value['@type']\n    }\n    \n    if(t == \"string\"){\n        if(krakenUrlHelpers.toUrl(value)){\n            return 'url'\n        }\n        \n    }\n\n    return t\n\n    \n}\n\n","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers.toArray\n}\n\n\n\n/** @const {Object}  krakenDateHelpers\n * - isDate: Determiens if value is of type Date\n * - toDate: Converts a value (string, etc.) to Date\n * - getDuration: Returns duration between two dates\n * - getDurationRecord: Returns duration in schema.org QuantitativeValue record\n */\nexport const krakenDateHelpers = {\n\n    // Base\n    isDate: validateDate,\n    isTextDate: validateTextDate,\n    getDuration: getDuration,\n    getDurationRecord: getDurationRecord,\n    toDate: toDate,\n    toText: toText,\n    human: {\n        duration: getHumanReadableDuration,\n        date: getHumanReadableDate\n    },\n    iso: {\n        getIsoDurationFromDates: toISODurationFromDates,\n        getTextFromIsoDuration: convertISODurationToEnglish,\n        getIsoDurationFromText: convertEnglishToISODuration\n    },\n    now: getCurrentDateObject,\n    \n    // Shortcuts\n    validateDate: validateDate,\n    getDate: toDate,\n    duration: getDuration,\n    durationRecord: getDurationRecord\n\n}\n\n/**\n * Returns true if value if a Date object\n * @param {String | Date | object} value\n * @return {bool} isDate True if date object\n */\nfunction validateDate(value){\n    if(value instanceof Date) { return true }\n    \n    return false\n}\n\nfunction validateTextDate(value){\n    if(value instanceof Date) { return true }\n\n    value = toDate(value)\n\n    if(value instanceof Date) { return true }\n\n    \n    return false\n}\n\nfunction toText(value){\n\n   \n    if(validateDate(value) == false){ \n    \n        value = toDate(value)\n        if(validateDate(value) == false){\n            return ''\n        }\n    }\n\n\n\n    let formattedDate = value.toLocaleString()\t\n    \n\n    return formattedDate\n}\n\n\nfunction toDate(value){\n    \n    if(validateDate(value) == true){ return value }\n\n    if (typeof value !== 'string') {\n        return undefined;\n    }\n    \n    // Native conversion\n    try {\n        const date = new Date(value);\n        \n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n\n      \n        \n    } catch (error) {\n        \n    }\n\n\n    // Convert from different formats\n    const formatMap = {\n        \"YYYY-MM-DD\": /(\\d{4})-(\\d{2})-(\\d{2})/,\n        \"MM/DD/YYYY\": /(\\d{2})\\/(\\d{2})\\/(\\d{4})/,\n        \"DD-MM-YYYY\": /(\\d{2})-(\\d{2})-(\\d{4})/,\n        \"YYYY/MM/DD\": /(\\d{4})\\/(\\d{2})\\/(\\d{2})/\n    };\n\n    for(let format of Object.keys(formatMap)){\n\n    \n        const regex = formatMap[format];\n       \n        const match = value.match(regex);\n        if (!match) {\n            continue\n        }\n    \n        let year, month, day;\n    \n        switch (format) {\n            case \"YYYY-MM-DD\":\n            case \"YYYY/MM/DD\":\n                year = match[1];\n                month = match[2] - 1; // JS months are 0-based\n                day = match[3];\n                break;\n            case \"MM/DD/YYYY\":\n                month = match[1] - 1;\n                day = match[2];\n                year = match[3];\n                break;\n            case \"DD-MM-YYYY\":\n                day = match[1];\n                month = match[2] - 1;\n                year = match[3];\n                break;\n            default:\n                break\n        }\n    \n        const date = new Date(year, month, day);\n    \n        // Check if the date is valid\n        try{\n            if (!isNaN(date.getTime())) {\n               return date\n            }\n            \n        } catch {}\n        \n        \n    }\n    return null\n\n    \n}\n\n\nfunction getDuration(date1, date2){\n\n    date1 = toDate(date1)\n    date2 = toDate(date2)\n\n    \n    if(validateDate(date1) == false){ return undefined }\n    if(validateDate(date2) == false){ return undefined }\n\n    let startDate \n    let endDate\n    \n    if(date1 < date2){\n        startDate = date1\n        endDate = date2\n    } else {\n        startDate = date2\n        endDate = date1\n    }\n\n    let duration = (endDate - startDate) / 1000\n    return duration\n    \n}\n\nfunction getDurationRecord(date1, date2){\n\n    let duration = getDuration(date1, date2)\n\n    let result = {\n        \"@type\": \"QuantitativeValue\",\n        \"@id\": String(crypto.randomUUID()),\n        \"unitCode\": \"SEC\",\n        \"unitText\": \"s\",\n        'value': duration\n    }            \n\n    \n    return result\n\n}\n\n\nfunction getCurrentDateObject() {\n    let now = new Date();   \n    return now;\n}\n\n\n// -----------------------------------------------------\n//  Human readable  \n// -----------------------------------------------------\n\nfunction getHumanReadableDate(date) {\n\n\n    // If not date 2, assume date 2 is now\n    \n    const now = new Date();\n \n    const targetDate = new Date(date);\n    const diff = Math.abs(now - targetDate); // difference in milliseconds\n\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const months = Math.floor(days / 30); // approximation for months\n    const years = Math.floor(days / 365); // approximation for years\n\n    if (years > 0) {\n        return years === 1 ? \"1 year ago\" : `${years} years ago`;\n    } else if (months > 0) {\n        return months === 1 ? \"1 month ago\" : `${months} months ago`;\n    } else if (days > 0) {\n        return days === 1 ? \"1 day ago\" : `${days} days ago`;\n    } else if (hours > 0) {\n        return hours === 1 ? \"1 hour ago\" : `${hours} hours ago`;\n    } else if (minutes > 0) {\n        return minutes === 1 ? \"1 minute ago\" : `${minutes} minutes ago`;\n    } else {\n        return seconds === 1 ? \"1 second ago\" : `${seconds} seconds ago`;\n    }\n}\n\nfunction getHumanReadableDuration(startDate, endDate) {\n\n    \n    startDate = toDate(startDate)\n    endDate = toDate(endDate)\n\n    \n    if(h.isNull(startDate)){ return '' }\n    if(h.isNull(endDate)){ return '' }\n\n    \n    const diffInMilliseconds = Math.abs(endDate - startDate);\n\n    const millisecondsInSecond = 1000;\n    const millisecondsInMinute = millisecondsInSecond * 60;\n    const millisecondsInHour = millisecondsInMinute * 60;\n    const millisecondsInDay = millisecondsInHour * 24;\n    const millisecondsInMonth = millisecondsInDay * 30.44; // Approximate value for a month\n    const millisecondsInYear = millisecondsInDay * 365.25; // Account for leap years\n\n    const years = Math.floor(diffInMilliseconds / millisecondsInYear);\n    const months = Math.floor((diffInMilliseconds % millisecondsInYear) / millisecondsInMonth);\n    const days = Math.floor((diffInMilliseconds % millisecondsInMonth) / millisecondsInDay);\n    const hours = Math.floor((diffInMilliseconds % millisecondsInDay) / millisecondsInHour);\n    const minutes = Math.floor((diffInMilliseconds % millisecondsInHour) / millisecondsInMinute);\n    const seconds = Math.floor((diffInMilliseconds % millisecondsInMinute) / millisecondsInSecond);\n\n    let duration = [];\n    if (years) { return `${years} year${years > 1 ? 's' : ''}`};\n    if (months)  { return `${months} month${months > 1 ? 's' : ''}`};\n    if (days)  { return `${days} day${days > 1 ? 's' : ''}`};\n    if (hours)  { return `${hours} hour${hours > 1 ? 's' : ''}`};\n    if (minutes)  { return `${minutes} minute${minutes > 1 ? 's' : ''}`};\n    if (seconds)  { return `${seconds} second${seconds >= 0  ? 's' : ''}`};\n    return ''\n    \n    \n    \n}\n\n\n\n// -----------------------------------------------------\n//  ISO \n// -----------------------------------------------------\n\n\n\nfunction toISODurationFromDates(startDate, endDate) {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    let years = end.getFullYear() - start.getFullYear();\n    let months = end.getMonth() - start.getMonth();\n    let days = end.getDate() - start.getDate();\n    let hours = end.getHours() - start.getHours();\n    let minutes = end.getMinutes() - start.getMinutes();\n    let seconds = end.getSeconds() - start.getSeconds();\n\n    // Handle negative values by adjusting the larger units\n    if (seconds < 0) {\n        seconds += 60;\n        minutes--;\n    }\n    if (minutes < 0) {\n        minutes += 60;\n        hours--;\n    }\n    if (hours < 0) {\n        hours += 24;\n        days--;\n    }\n    if (days < 0) {\n        const daysInPreviousMonth = new Date(end.getFullYear(), end.getMonth(), 0).getDate();\n        days += daysInPreviousMonth;\n        months--;\n    }\n    if (months < 0) {\n        months += 12;\n        years--;\n    }\n\n    // Construct ISO 8601 duration string\n    let duration = 'P';\n\n    if (years > 0) duration += `${years}Y`;\n    if (months > 0) duration += `${months}M`;\n    if (days > 0) duration += `${days}D`;\n\n    if (hours > 0 || minutes > 0 || seconds > 0) {\n        duration += 'T'; // Time part separator\n\n        if (hours > 0) duration += `${hours}H`;\n        if (minutes > 0) duration += `${minutes}M`;\n        if (seconds > 0) duration += `${seconds}S`;\n    }\n\n    return duration;\n}\n\nfunction convertISODurationToEnglish(duration) {\n    const isoDurationRegex = /^P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?)?$/;\n    const matches = duration.match(isoDurationRegex);\n\n    if (!matches) {\n        return \"Invalid ISO 8601 duration\";\n    }\n\n    const years = matches[1] ? `${matches[1]} year${matches[1] > 1 ? 's' : ''}` : '';\n    const months = matches[2] ? `${matches[2]} month${matches[2] > 1 ? 's' : ''}` : '';\n    const days = matches[3] ? `${matches[3]} day${matches[3] > 1 ? 's' : ''}` : '';\n    const hours = matches[4] ? `${matches[4]} hour${matches[4] > 1 ? 's' : ''}` : '';\n    const minutes = matches[5] ? `${matches[5]} minute${matches[5] > 1 ? 's' : ''}` : '';\n    const seconds = matches[6] ? `${matches[6]} second${matches[6] > 1 ? 's' : ''}` : '';\n\n    const parts = [years, months, days, hours, minutes, seconds].filter(Boolean);\n\n    if (parts.length === 0) {\n        return \"No duration specified\";\n    }\n\n    return parts.join(', ');\n}\n\nfunction convertEnglishToISODuration(englishDuration) {\n    const timeUnits = {\n        year: 'Y',\n        years: 'Y',\n        month: 'M',\n        months: 'M',\n        day: 'D',\n        days: 'D',\n        hour: 'H',\n        hours: 'H',\n        minute: 'M',\n        minutes: 'M',\n        second: 'S',\n        seconds: 'S'\n    };\n\n    let years = 0, months = 0, days = 0, hours = 0, minutes = 0, seconds = 0;\n\n    // Split the input into parts (e.g., [\"2 years\", \"6 months\"])\n    const parts = englishDuration.split(',').map(part => part.trim());\n\n    parts.forEach(part => {\n        const [value, unit] = part.split(' ');\n        const number = parseInt(value, 10);\n\n        if (isNaN(number) || !timeUnits[unit.toLowerCase()]) {\n            throw new Error(\"Invalid duration format\");\n        }\n\n        switch (unit.toLowerCase()) {\n            case 'year':\n            case 'years':\n                years = number;\n                break;\n            case 'month':\n            case 'months':\n                months = number;\n                break;\n            case 'day':\n            case 'days':\n                days = number;\n                break;\n            case 'hour':\n            case 'hours':\n                hours = number;\n                break;\n            case 'minute':\n            case 'minutes':\n                minutes = number;\n                break;\n            case 'second':\n            case 'seconds':\n                seconds = number;\n                break;\n        }\n    });\n\n    // Construct ISO 8601 duration string\n    let isoDuration = 'P';\n    if (years) isoDuration += `${years}Y`;\n    if (months) isoDuration += `${months}M`;\n    if (days) isoDuration += `${days}D`;\n\n    if (hours || minutes || seconds) {\n        isoDuration += 'T';\n        if (hours) isoDuration += `${hours}H`;\n        if (minutes) isoDuration += `${minutes}M`;\n        if (seconds) isoDuration += `${seconds}S`;\n    }\n\n    return isoDuration || \"P0D\"; // Return P0D for no duration\n}\n\n","\n\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\nimport { krakenHeadingsHelpers } from './krakenHeadingsHelpers.js'\n\nexport const krakenThingHelpers = {\n\n    isValid: validateThing,\n    isThing: validateThing,\n    isEqual: isEqual,\n    validateThing: validateThing,\n    getRefRecord: getRefRecord,\n    type: getRecordType,\n    id: getRecordId,\n    ref: getRefRecord,\n    toText: toText,\n    extractThings: extractThings,\n    record_type: getRecordType,\n    record_id: getRecordId,\n    recordType: getRecordType,\n    recordId: getRecordId,\n   \n    \n}\n\n\nfunction validateThing(value){\n\n    if(h.isNull(value)){ return false }\n    if(h.isNull(getRecordType(value))){ return false }\n    if(h.isNull(getRecordId(value))){ return false }\n   \n    return true\n}\n\nfunction getRefRecord(value){\n\n    if(validateThing(value) == false ) { return undefined }\n    \n    let result = {\n        \"@type\": getRecordType(value),\n        \"@id\": getRecordId(value)\n    }\n\n    return result\n    \n}\n\nfunction toText(value){\n\n    if(validateThing(value) == false ) { return undefined }\n\n\n    return h.headings.heading1(value)\n\n    \n    let record_type = value?.['@type'] || value?.record_type\n    let record_id = value?.['@id'] || value?.record_id\n\n    \n    if(record_type == 'QuantitativeValue'){\n        \n        let result = `${value['value']} ${value['unitText'] || value['unitCode'] || ''}`\n        return result\n    }\n\n    if(record_type == \"DefinedTerm\"){\n\n        if(h.isNotNull(value?.name)){ return value.name }\n        if(h.isNotNull(value?.termCode)){ return value.termCode }\n        \n    }\n\n    if(record_type == 'Person'){\n\n        let givenName = value?.['givenName']\n        let familyName = value?.['familyName']\n\n\n        if(h.isNotNull(givenName) && h.isNotNull(familyName)){\n            return `${givenName} ${familyName}`\n        }\n    }\n\n    if(record_type == 'PostalAddress'){\n\n        let values = []\n        values.push(value?.streetAddress)\n        values.push(value?.addressLocality)\n        values.push(value?.addressRegion)\n        values.push(value?.postalCode)\n        values.push(value?.addressCountry?.name || value?.addressCountry)\n        values = values.filter(x => h.isNotNull(x))\n\n        return values.join(', ')\n        \n    }\n    \n    \n    let result = `${value['@type']}/${value['@id']}`\n      \n    return result\n\n}\n\n\nfunction extractThings(record){\n    /**\n     * Returns all child things in record\n     */\n    \n    let results = []\n\n    if(h.array.isArray(record)){\n\n        for(let r of record){\n            let values = extractThings(r)\n            if(values.length > 0){\n                results = results.concat(values)\n            }\n        }\n    } else if(h.object.isObject(record)){\n\n        if(h.isNotNull(record?.['@type']) || h.isNotNull(record?.record_type)){\n            results.push(record)\n        }\n        \n        for(let k of Object.keys(record)){\n            let v = record[k]\n            let values = extractThings(v)\n            if(values.length > 0){\n                results = results.concat(values)\n            }\n        }\n\n    } else {\n    }\n\n    return results\n       \n}\n\nfunction getRecordType(value){\n\n    let record_type = value?.['@type'] || value?.record_type || null\n    return record_type\n}\n\nfunction getRecordId(value){\n\n    let record_type = value?.['@id'] || value?.record_id || null\n    return record_type\n}\n\n\nfunction isEqual(thing1, thing2){\n\n    if(h.isNull(thing1) && h.isNull(thing2)){ return true }\n    if(h.isNull(thing1) && h.isNotNull(thing2)){ return false }\n    if(h.isNotNull(thing1) && h.isNull(thing2)){ return false }\n    \n    let record1 = thing1?.record || thing1\n    let record2 = thing2?.record || thing2\n\n    try {\n        if(JSON.stringify(record1) == JSON.stringify(record2)){\n            return true\n        } else {\n            return false\n        }\n    \n    } catch (error) {\n        return false\n    }\n    \n}","\nimport { krakenArrayHelpers } from './helpers/krakenArrayHelpers.js'\nimport { krakenDateHelpers } from './helpers/krakenDateHelpers.js'\nimport { krakenDotNotationHelpers } from './helpers/krakenDotNotationHelpers.js'\nimport { krakenElementHelpers } from './helpers/krakenElementHelpers.js'\nimport { krakenEmailHelpers } from './helpers/krakenEmailHelpers.js'\nimport { krakenJsonHelpers } from './helpers/krakenJsonHelpers.js'\nimport { krakenNullHelpers } from './helpers/krakenNullHelpers.js'\nimport { krakenObjectHelpers } from './helpers/krakenObjectHelpers.js'\nimport { krakenStringHelpers } from './helpers/krakenStringHelpers.js'\nimport { krakenUrlHelpers } from './helpers/krakenUrlHelpers.js'\n\n\nexport const krakenHelpersLight = {\n\n    array: krakenArrayHelpers,\n    date: krakenDateHelpers,\n    dot: krakenDotNotationHelpers,\n    element: krakenElementHelpers,\n    email:krakenEmailHelpers,\n    json: krakenJsonHelpers,\n    null: krakenNullHelpers,\n    object: krakenObjectHelpers,\n    string: krakenStringHelpers,\n    url: krakenUrlHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    isEqual:krakenNullHelpers.isEqual,\n    isNotEqual:krakenNullHelpers.isNotEqual,\n    toArray: krakenArrayHelpers.toArray\n}\n","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers\n}\n\n\n\n/**\n *\n * classes:\n *     - krThing: thing\n *     - krProperty: property\n *     - krValue: value\n *     - \n */\n\n// Classes constants\nlet thingClass = 'krThing'\nlet propertyClass = 'krProperty'\nlet valueClass = 'krValue'\n\n\nexport const krakenElementHelpers = {\n    /**\n     * current: returns the element that composes the current record\n     * parent: returns element parent of \n     */\n\n    record_type: getRecordType,\n    record_id: getRecordId,\n    recordType: getRecordType,\n    recordId: getRecordId,\n    type: getRecordType,\n    id: getRecordId,\n    setId: setIdToElement,\n    meetsConditions: meetsConditions,\n    insert: {\n        above: insertElementAbove,\n        below: insertElementBelow\n    },\n    content: {\n        set: setContentOfElement\n    },\n    active:{\n        set: setActive,\n        unset: unsetActive,\n        toggle: toggleActive\n    },\n    selected: {\n        get: getSelectedElement,\n        set: setSelectedElement,\n        unset: unsetSelectedElement,\n        toggle: toggleSelectedElement\n    },\n    traversal: {\n        commonParent: findCommonParentOfElements\n    }\n    \n}\n\n\n// -----------------------------------------------------\n//  Generic \n// -----------------------------------------------------\n\nfunction setIdToElement(element){\n\n    if(h.isNotNull(element.getAttribute('id'))){\n        return \n    }\n\n    element.setAttribute('id', String(crypto.randomUUID()))\n    return\n    \n}\n\n\nfunction getRecordType(element){\n\n    let record_type = element.getAttribute('data-record-type')\n    return record_type\n  \n}function getRecordId(element){\n\n    let record_id = element.getAttribute('data-record-id')\n    return record_id\n\n}\n\n\n\n// -----------------------------------------------------\n//  Operations (insert, delete) \n// -----------------------------------------------------\n\nfunction insertElementBelow(newElement, parent){\n\n    while(parent.firstElementChild){\n        newElement.appendChild(parent.firstElementChild)\n    }\n    parent.appendChild(newElement)\n    return\n}\n\nfunction insertElementAbove(newElement, children){\n\n    let parent = children.parentElement\n    newElement.appendChild(children)\n    parent.appendChild(newElement)\n    return\n}\n\n\n\n\n\n\n\n\n// -----------------------------------------------------\n//  Element content \n// -----------------------------------------------------\n\nfunction setContentOfElement(element, content){\n\n    if(typeof content == 'string'){\n        element.innerHTML = content\n    }\n    \n    if(Array.isArray(content)){\n        for(let c of content){\n            setContentOfElement(element, c)\n        }\n        return\n    }\n    \n    if(content instanceof HTMLElement){\n        element.appendChild(content)\n    }\n\n    return\n}\n\n\n\n\n// -----------------------------------------------------\n//  Comparisons \n// -----------------------------------------------------\n\nfunction meetsConditions(element, conditions){\n    /**\n     * Returns true if an element attributes meets conditions.\n     * Conditions with \n     */\n    if(h.isNull(conditions)){ return true }\n\n    for(let key of Object.keys(conditions)){\n\n        // If key is class\n        if(key.startsWith('.')){\n            if(!element.classList.contains(conditions[key])){\n                return false\n            }\n        } else {\n            // If key is attribute\n            if(element.getAttribute(key) != conditions[key]){\n                return false\n            }\n        }\n    }\n    return true\n}\n\n\n// -----------------------------------------------------\n//  DOM Traversal \n// -----------------------------------------------------\n\nfunction findCommonParentOfElements(elements) {\n    if (!elements || elements.length === 0) return null;\n\n    // Helper function to get all parents of an element\n    function getParents(element) {\n        let parents = [];\n        while (element) {\n            parents.push(element);\n            element = element.parentElement;\n        }\n        return parents;\n    }\n\n    // Get the list of parents for the first element\n    let commonParents = getParents(elements[0]);\n\n    // Traverse the list of elements and keep finding common parents\n    for (let i = 1; i < elements.length; i++) {\n        const elementParents = getParents(elements[i]);\n        // Update commonParents to be only those in both lists\n        commonParents = commonParents.filter(parent => elementParents.includes(parent));\n\n        // If no common parent is found, return null\n        if (commonParents.length === 0) return null;\n    }\n\n    // Return the first common parent, which is the closest common ancestor\n    return commonParents[0];\n}\n\n\n\n\n// -----------------------------------------------------\n//  Active \n// -----------------------------------------------------\n\nfunction getActive(element, conditions){\n    /**\n     * Returns elements with 'krActive' class under element.\n     * Uses document if element is missing\n     */\n    element = element || document\n\n    let activeElements = element.querySelectorAll('.krActive')\n    activeElements = activeElements.filter(x => meetsConditions(x, conditions))\n\n    return activeElements\n}\n\nfunction setActive(element, conditions){\n    element.classList.add('krActive')\n}\nfunction unsetActive(element, conditions){\n    element.classList.remove('krActive')\n}\n\nfunction toggleActive(element, conditions){\n    element.classList.toggle('krActive')\n}\n\n// -----------------------------------------------------\n//  Selected \n// -----------------------------------------------------\n\nfunction getSelectedElement(element, conditions){\n    /**\n     * Returns elements with 'krSelected' class under element.\n     * Uses document if element is missing\n     */\n    element = element || document\n\n    let selectedElements = element.querySelectorAll('.krSelected')\n    selectedElements = selectedElements.filter(x => meetsConditions(x, conditions))\n\n    return selectedElements\n}\n\nfunction setSelectedElement(element, conditions){\n    element.classList.add('krSelected')\n}\nfunction unsetSelectedElement(element, conditions){\n    element.classList.remove('krSelected')\n}\n\nfunction toggleSelectedElement(element, conditions){\n    element.classList.toggle('krSelected')\n}\n","\n\nexport const krakenEmailHelpers = {\n    isEmail: isValidEmail\n}\n\n\nfunction isValidEmail(email) {\n    if (typeof email !== 'string') {\n        throw new TypeError('The provided value must be a string.');\n    }\n\n    // Regular expression to validate email addresses\n    const emailRegex = /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/ ;\n\n    return emailRegex.test(email);\n}\n\n","\n\n\nexport const krakenJsonHelpers = {\n\n    get: getPropertyValueFromDot,\n    getPropertyValueFromDot: getPropertyValueFromDot,\n    isJson: isJson,\n    set: setPropertyValueFromDot,\n    setPropertyValueFromDot:setPropertyValueFromDot,\n    flatten: objectToDotNotation,\n    objectToDotNotation: objectToDotNotation,\n    simplify: simplify,\n    toPropertiesList: jsonToPropertiesSingle,\n    toPropertiesSingle: jsonToPropertiesList\n    \n}\n\nfunction isJson(value){\n\n    try{\n        let l = JSON.parse(value)\n        return true\n    } catch {\n        return false\n    }\n\n    \n}\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n    var items =key.split('.');\n    for (let t=0; t<items.length; t++){\n        value = value[items[t]];\n    };\n    return value;\n}\n\n\nfunction setPropertyValueFromDot(key, record, value){\n    // Retrieves value by following dot notation\n\n    var items = key.split('.');\n\n    let item = items[0]\n\n    \n    if(items.length > 1){\n        if(!record[item]){\n            record[item] = {}\n        }\n        \n        setPropertyValueFromDot(items.slice(1).join('.'), record[item], value)\n    } else {\n\n        record[item] = value\n    }\n\n    return record;\n}\n\n\n\nfunction objectToDotNotation(obj, parentPrefix = '') {\n    let result = {};\n\n    // Helper function to handle recursion and path building\n    function recurse(o, path) {\n        for (let key in o) {\n            if (o.hasOwnProperty(key)) {\n                const newPath = path ? `${path}.${key}` : key;\n\n                // If the property is an object or array, recurse further\n                if (typeof o[key] === 'object' && o[key] !== null) {\n                    recurse(o[key], newPath);\n                } else {\n                    // Otherwise, add the property to the result\n                    result[newPath] = o[key];\n                }\n            }\n        }\n    }\n\n    recurse(obj, parentPrefix);\n    return result;\n}\n\n\n\n\nfunction simplify(data) {\n    // Remove arrays of 1\n    if (Array.isArray(data)) {\n        // If the array has exactly one element, return that element\n        if (data.length === 1) {\n            return simplify(data[0]);\n        } else {\n            // Otherwise, process each element in the array\n            return data.map(simplify);\n        }\n    } else if (data !== null && typeof data === 'object') {\n        // If the data is an object, process each key\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = simplify(data[key]);\n            }\n        }\n        return newData;\n    } else {\n        // If the data is neither an array nor an object, return it as is\n        return data;\n    }\n}\n\n\nfunction jsonToPropertiesSingle(record){\n    // Converts lists to single item(the first item)\n\n\n    if(Array.isArray(record)){\n        if(record.length == 0) { return null }\n        record = record[0]\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = jsonWithoutList(record[k])\n        }\n    }\n    return record\n}\n\nfunction jsonToPropertiesList(record){\n    // Converts single items to lists\n\n\n    if(Array.isArray(record)){\n        let newArray = []\n        for(let r of record){\n            newArray.push(jsonToLists(r))\n        }\n        record = newArray\n    }\n\n    if(Object.keys(record)){\n        for(let k of Object.jeys(record)){\n            record[k] = [record[k]]\n        }\n    }\n    return record\n}","\n\nexport const krakenObjectHelpers = {\n\n    isObject: isObject,\n    getKeys: getKeys,\n    keys: getKeys,\n    toText: toText\n    \n}\n\n\nfunction isObject(value){\n\n    return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nfunction getKeys(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    let keys = Object.keys(value)\n    keys.sort()\n    return keys\n}\n\n\nfunction toText(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    if(value['@type']){\n\n        return `${value[\"@type\"]}/${value['@id']}`\n    } else {\n\n        let keys = Object.keys(value)\n        if(keys.length == 0){ return '{}'}\n\n        return `{\"${keys[0]}\": \"${value[keys[0]]}\", ... }`\n        \n    }\n\n    \n}\n\n","import { krakenDateHelpers } from \"./krakenDateHelpers.js\";\n\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\nexport const krakenStringHelpers = {\n    toCamelCase: toCamelCase,\n    fromCamelCase: fromCamelCase,\n    capitalize: capitalizeWords,\n    clean: cleanString\n    \n};\n\n\n\nfunction cleanString(str){\n    /**\n     * Clean up string by removing spaces and non standard charcters\n     */\n    let string = str\n\n    // Remove html codes\n    string =  string.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n    // Remove next lines\n    string = string.replace('\\n', '')\n\n    // remove spaces\n    string = string.trim()\n\n\n    return string\n}\n\n\n\nfunction toCamelCase(str) {\n    return (\n        str\n            // Split the string by spaces, underscores, or hyphens\n            .split(/[-_\\s]+/)\n            // Convert the first word to lowercase and capitalize the first letter of the following words\n            .map((word, index) =>\n                index === 0\n                    ? word.toLowerCase()\n                    : word.charAt(0).toUpperCase() +\n                      word.slice(1).toLowerCase(),\n            )\n            // Join them back into a single string\n            .join(\"\")\n    );\n}\n\nfunction fromCamelCase(str) {\n    return (\n        str\n            // Insert a space before every uppercase letter and convert the whole string to lowercase\n            .replace(/([A-Z])/g, \" $1\")\n            .toLowerCase()\n            .trim()\n    );\n}\n\n\n\nfunction capitalizeWords(input) {\n    // Error checking: input should be a string\n    if (typeof input !== 'string') {\n        return input\n    }\n    try{\n\n        // Split the string into an array of words, capitalize the first letter of each word, then join them back into a single string\n        return input.split(' ').map(word => {\n            if (word.length > 0) {\n                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n            }\n            return word; // Handles cases where there might be multiple spaces\n        }).join(' ');\n    } catch (error){ return input}\n}\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n","\n\nexport const krakenUrlHelpers = {\n\n    getDomain: getDomain,\n    domain: getDomain,\n    getUrl: getUrl,\n    toUrl: getUrl\n    \n}\n\nfunction isUrl(value){\n\n    if(!value || value == null){ return false }\n\n    if(value instanceof URL) { return true }\n\n\n    \n}\n\n/**\n * Returns url string with path and params\n */\nfunction getUrl(baseUrl, path, params) {\n    // Returns url string\n    try {\n        if (!baseUrl || typeof baseUrl !== 'string') {\n            throw new Error('Invalid base URL');\n        }\n        \n        if (!path ) {\n            path = '';\n        }\n        if (typeof path !== 'string') {\n            throw new Error('Invalid path');\n        }\n        if (params && typeof params !== 'object') {\n            throw new Error('Invalid params');\n        }\n\n        let url = new URL(path, baseUrl);\n\n        if (params) {\n            Object.keys(params).forEach(key => {\n                if (params[key] !== undefined && params[key] !== null) {\n                    url.searchParams.append(key, params[key]);\n                }\n            });\n        }\n\n        return url.toString();\n        \n    } catch (error) {\n        //console.error('Error building URL:', error.message);\n        return undefined;\n    }\n}\n\n\n\n\n\n\nfunction getDomain(value){\n\n    try {\n\n        if(!value || value == null){ return undefined }\n\n        if(!(value instanceof URL)) { \n\n            if(typeof value != 'string'){\n                return undefined\n            }\n\n            value = new URL(value);\n        }\n\n\n        let domain = value.hostname\n\n        domain = domain.replace('www.', '')\n\n        if (domain == 'wrong.protocol'){ return undefined }\n        \n        // Use URL constructor to parse the URL\n        return domain;\n\n        \n    } catch (error) {\n        // If an error occurs, return an appropriate error message\n        return undefined;\n    }\n   \n    \n    \n}","import { krakenArrayHelpers as array } from \"./krakenArrayHelpers.js\";\n\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\nexport const krakenHeadingsHelpers = {\n    record: getHeadingRecord,\n    heading1: _getHeading1,\n    heading2: _getHeading2,\n    headingDescription: _getHeadingDescription,\n    headingDate: _getHeadingDate,\n    headingStatus: _getHeadingStatus,\n    headingImage: _getHeadingImage\n};\n\n\nfunction getHeadingRecord(record){\n    record._heading1 =  _getHeading1(record)\n    record._heading2 =  _getHeading2(record)\n    record._headingDescription =  _getHeadingDescription(record)\n    record._headingDate =  _getHeadingDate(record)\n    record._headingStatus =  _getHeadingStatus(record)\n    record._headingImage = _getHeadingImage(record)\n    return record\n}\n\n\nfunction _getHeading1(record) {\n    let heading = \"heading1\";\n    return _getHeadingX(record, heading);\n}\n\n\n\nfunction _getHeading2(record) {\n    let heading = \"heading2\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDescription(record) {\n    let heading = \"headingDescription\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingDate(record) {\n    let heading = \"headingDate\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingStatus(record) {\n    let heading = \"headingStatus\";\n    return _getHeadingX(record, heading);\n}\n\nfunction _getHeadingImage(record) {\n\n    if(h.isNotNull(record?.contentUrl)){\n        return record?.contentUrl\n    }\n    if(h.isNotNull(record?.image?.contentUrl)){\n        return record?.image?.contentUrl\n    }\n    return null\n\n}\n\nfunction _getHeadingX(record, heading) {\n    let record_type = record[\"@type\"];\n\n    let config = getConfig();\n\n    let headingPossibilities = config?.[record_type]?.[heading];\n\n    console.log('p', headingPossibilities)\n    if (h.isNull(headingPossibilities) ) {\n        headingPossibilities = config?.[\"Thing\"]?.[heading];\n    }\n\n    let headingValue = null;\n\n    for (let hp of h.toArray(headingPossibilities)) {\n        headingValue = _getValue(record, heading, hp);\n\n        if (h.isNotNull(headingValue)) {\n            break;\n        }\n    }\n\n    return headingValue;\n}\n\nfunction _getValue(record, heading, keys) {\n    keys = array.ensureArray(keys);\n\n    console.log('get value', keys)\n    let values = [];\n    for (let k of keys) {\n        let value = record[k];\n\n        if (Array.isArray(value)) {\n            value = value[0];\n        }\n\n        // Handle object as values (when listItem references item for example )\n        if (value?.[\"@type\"]) {\n            value = _getHeadingX(value, \"heading1\");\n        }\n\n        if (value && value != null) {\n            values.push(value);\n        }\n    }\n\n    if (values.length == 0) {\n        return null;\n    }\n\n    // Assemble values\n    let headingValue = values.join(\" \");\n\n    return headingValue;\n}\n\nfunction getConfig() {\n    let record = {\n        Thing: {\n            heading1: [\"name\", \"url\", \"@id\"],\n            heading2: [\"name\", \"url\", \"@id\"],\n            headingDescription: [\"description\"],\n            headingDate: [\"\"],\n        },\n        Article: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        Action: {\n            heading1: [\"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        Person: {\n            heading1: [[\"givenName\", \"familyName\"], \"name\", \"url\", \"@id\"],\n            heading2: [\"title\", \"email\", \"url\",  \"@id\"],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        ListItem: {\n            heading1: [\"item\", \"name\", \"url\", \"@id\"],\n            heading2: [\"item\", \"url\", \"@id\"],\n            headingDescription: [\"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n            headingStatus: [\"actionStatus\"],\n        },\n        CreativeWork: {\n            heading1: [\"headline\", \"name\", \"url\", \"@id\"],\n            heading2: [\"author\", \"url\", \"@id\"],\n            headingDescription: [\"articleBody\", \"text\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        PostalAddress: {\n            heading1: [\"streetAddress\", \"name\", \"@id\"],\n            heading2: [\n                [\n                    \"addressLocality\",\n                    \"addressRegion\",\n                    \"postalCode\",\n                    \"addressCountry\",\n                ],\n            ],\n            headingDescription: [\"text\", \"name\", \"description\"],\n            headingDate: [\"datePublished\", \"dateCreated\"],\n        },\n        QuantitativeValue: {\n            heading1: [[\"value\", \"unitText\"], [\"value\", \"unitCode\"], \"@id\"],\n        }\n    };\n\n    return record;\n}\n","import { krakenNullHelpers} from \"./krakenNullHelpers.js\";\nimport { krakenArrayHelpers} from \"./krakenArrayHelpers.js\";\n\nconst h = {\n    null: krakenNullHelpers,\n    array: krakenArrayHelpers,\n    isNull: krakenNullHelpers.isNull,\n    isNotNull: krakenNullHelpers.isNotNull,\n    toArray: krakenArrayHelpers\n}\n\n\n\nexport const krakenApiHelpers = {\n\n    get: getApi,\n    post: postApi,\n    delete: deleteApi,\n    postFile: postApiFile,\n    getFile: getApiFile\n    \n}\n\n\nasync function getApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    url.search = new URLSearchParams(params);\n\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status && 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n    let results = await response.json()\n\n    return results\n\n}\n\n\nasync function postApi(baseUrl, urlPath,  records){\n\n    //Post \n\n    let requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(records)\n    };\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    const response = await fetch(url, requestOptions)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' + response.statusText);\n    }\n\n    return response\n    \n}\n\n\nasync function getApiFile(filename, baseUrl, urlPath){\n\n    if(h.isNull(filename)){ \n        let parts = filename = baseUrl.split('/')\n            filename = parts[parts.length-1]\n    }\n    \n    try {\n\n        let url\n        if(h.isNotNull(urlPath)){\n            url = new URL(String(urlPath), String(baseUrl));\n        } else {\n            url = new URL( String(baseUrl));\n        }\n        \n        // Fetch the file from the provided URL\n        const response = await fetch(url);\n\n        // Check if the response is ok (status is in the range 200-299)\n        if (!response.ok) {\n            throw new Error(`Failed to fetch file: ${response.statusText}`);\n        }\n\n        // Convert the response data to a Blob object\n        const blob = await response.blob();\n\n        // Create a File object from the Blob\n        const file = new File([blob], filename, {\n            type: blob.type,\n        });\n\n        return file;\n        \n    } catch (error) {\n        console.error(\"Error fetching the file:\", error);\n        return null;\n    }\n\n    \n}\n\n\nasync function postApiFile(baseUrl, urlPath,  file){\n\n    //Post \n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    const formData = new FormData();\n    formData.append('file', file); // 'file' is the key expected by the API\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                // Include other headers if needed, such as authentication tokens\n                // 'Authorization': 'Bearer your-token'\n            }\n        });\n\n        if (response.ok) {\n            const result = await response.json();\n            return result;\n        } else {\n            \n        }\n    } catch (error) {\n        \n    }\n\n    return response\n\n}\n\nasync function deleteApi(baseUrl, urlPath,  params){\n\n    const requestOptionsGet = {\n        method: 'DELETE',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    let url\n    if(h.isNotNull(urlPath)){\n        url = new URL(String(urlPath), String(baseUrl));\n    } else {\n        url = new URL( String(baseUrl));\n    }\n\n    url.search = new URLSearchParams(params);\n\n    const response = await fetch(url, requestOptionsGet)\n\n    if(response.status != 200 && response.status != 201 && response.status != 202){  \n        throw new Error(String(response.status) + ' ' +response.statusText);\n    }\n    \n\n    return true\n    \n}\n\n","\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\n\nimport { KrSimpleThing, KrSimpleAction, KrSimpleFile } from \"./krakenSimpleThingsHelpers.js\";\n\nexport const krakenElementEventHelpers = {\n    \n    dragDrop: {\n        setDraggable: setDragDropDraggableElement,\n        setDropzone: setDragDropDropzoneElement,\n    },\n    generic: {\n        setDraggable: setDraggableGenericElement,\n        setDropzone: setDropzoneGenericElement,\n    },\n    click: {\n        set: setClickableElement,\n    },\n};\n\n\n// -----------------------------------------------------\n//  Drag drop\n// -----------------------------------------------------\n\nfunction setDragDropDraggableElement(element, callbackFn) {\n    element.draggable = true;\n\n    element.addEventListener(\"dragstart\", (event) => {\n        event.dataTransfer.setData(\"text/plain\", element.id);\n    });\n}\n\nfunction setDragDropDropzoneElement(element, callbackFn) {\n    element.addEventListener(\"dragover\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n    });\n\n    element.addEventListener(\"drop\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let draggedElementID = event.dataTransfer.getData(\"text/plain\");\n        let dropzoneElementID = event.currentTarget?.id;\n\n        let action = new KrSimpleAction(\"Dragdrop - drop\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": draggedElementID,\n            name: \"Draggable element\",\n        };\n        action.instrument = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": dropzoneElementID,\n            name: \"Dropzone element\",\n        };\n        action.setCompleted();\n\n        callbackFn(action, event);\n    });\n}\n\n// -----------------------------------------------------\n//  Click\n// -----------------------------------------------------\n\nfunction setClickableElement(element, callbackFn) {\n    element.addEventListener(\"click\", (event) => {\n        let element = event.currentTarget;\n        let elementID = element.id;\n\n        let action = new KrSimpleAction(\"Click element\");\n        action.object = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": elementID,\n            name: \"Clickable element\",\n        };\n\n        action.setCompleted();\n\n        callbackFn(action, event);\n    });\n}\n\n// -----------------------------------------------------\n//  Set draggable generic\n// -----------------------------------------------------\n\nfunction setDraggableGenericElement(element, content) {\n    /**\n     * Assigns content to draggable element\n     */\n    element.draggable = true;\n\n    element.addEventListener(\"dragstart\", (event) => {\n        if (typeof content == \"string\") {\n            event.dataTransfer.setData(\"text/plain\", element.id);\n        } else {\n            for (let key of Object.keys(content)) {\n                event.dataTransfer.setData(key, content?.[key]);\n            }\n        }\n    });\n}\n\n// -----------------------------------------------------\n//  Set dropzone generic\n// -----------------------------------------------------\n\nfunction setDropzoneGenericElement(element, callbackFn) {\n    /**\n     * Assigns content to draggable element\n     */\n    element.draggable = true;\n\n    element.addEventListener(\"dragover\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n    });\n\n    element.addEventListener(\"drop\", async (event) => {\n\n        event.preventDefault();\n\n        let action = new KrSimpleAction(\"Generic Drop event\");\n        action.instrument = {\n            \"@type\": \"WebPageElement\",\n            \"@id\": event.currentTarget.id,\n            name: \"Clickable element\",\n        };\n\n        action.object = [];\n        action.setCompleted();\n\n        for (const item of event.dataTransfer.items) {\n            \n            if (item.kind === \"string\" && item.type.match(/^text\\/plain/)) {\n                // This \n                let object = {\n                    \"@type\": \"CreativeWork\",\n                    name: \"Text content\",\n                    text: event.dataTransfer.getData(item.type),\n                };\n                action.object.push(object);\n            } else if (\n                item.kind === \"string\" &&\n                item.type.match(/^text\\/html/)\n            ) {\n                // Drag data item is HTML\n                let object = {\n                    \"@type\": \"WebPageElement\",\n                    name: \"HTML content\",\n                    text: event.dataTransfer.getData(item.type),\n                };\n                action.object.push(object);\n            } else if (\n                item.kind === \"string\" &&\n                item.type.match(/^text\\/uri-list/)\n            ) {\n                // Drag data item is URI\n                let object = {\n                    \"@type\": \"WebPage\",\n                    url: event.dataTransfer.getData(item.type),\n                };\n                action.object.push(object);\n            } else if (item.kind === \"file\") {\n                \n                // Drag data item is a file\n                let object = new KrSimpleFile(item.getAsFile())\n                action.object.push(object);\n            }\n        }\n        callbackFn(action, event);\n    });\n}\n","import { krakenDateHelpers } from \"./krakenDateHelpers.js\";\n\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\nimport { krakenValueHelpers as v } from \"./krakenValueHelpers.js\";\n\nimport { krakenApiHelpers} from './krakenApiHelpers.js'\nimport { krakenFileHelpers } from './krakenFileHelpers.js'\n\nlet DB = [];\n\nlet CDN_URL = 'https://cdn.krknapi.com'\nlet CDN_COLLECTION ='testCdn'\n\n\n\nexport class KrSimpleThing {\n    constructor(record_type_or_record, record_id) {\n        this._record = {};\n\n        if (record_type_or_record?.[\"@type\"]) {\n            this._record = record_type_or_record;\n        } else {\n            this._record[\"@type\"] = record_type_or_record;\n            this._record[\"@id\"] = record_id;\n        }\n        DB.push(this);\n    }\n\n    // -----------------------------------------------------\n    //  Core\n    // -----------------------------------------------------\n\n    toString() {\n        return `${this.record_type} ${this.record_id}`;\n    }\n\n    toJSON() {\n        return this.record;\n    }\n\n    get json() {\n        return JSON.stringify(this.record, null, 4);\n    }\n\n    new() {\n        let newObject = new Thing_simple();\n        newObject.record = this.record;\n    }\n\n    clone() {\n        let newObject = new Thing_simple();\n        newObject.record = this.record;\n    }\n\n    // -----------------------------------------------------\n    //  Attributes\n    // -----------------------------------------------------\n\n    get record() {\n        return JSON.parse(JSON.stringify(this._record));\n    }\n    set record(value) {\n        this._record = JSON.parse(JSON.stringify(value));\n    }\n\n    get record_type() {\n        return this._record?.[\"@type\"];\n    }\n    set record_type(value) {\n        this._record[\"@type\"] = value;\n    }\n\n    get record_id() {\n        if (h.isNull(this._record?.[\"@id\"])) {\n            this._record[\"@id\"] == String(crypto.randomUUID());\n        }\n        return this._record?.[\"@id\"];\n    }\n    set record_id(value) {\n        this._record[\"@id\"] = value;\n    }\n\n    // -----------------------------------------------------\n    //  Shortcut Attributes\n    // -----------------------------------------------------\n\n    get name() {\n        return this._record?.name;\n    }\n    set name(value) {\n        return (this._record.name = value);\n    }\n\n    get url() {\n        return this._record?.url;\n    }\n    set url(value) {\n        return (this._record.url = value);\n    }\n}\n\nexport class KrSimpleAction extends KrSimpleThing {\n    constructor(name, object) {\n        super(\"Action\");\n        this.setActive();\n        this._record.error = null\n        this.name = name;\n        this.object = object;\n    }\n\n    // -----------------------------------------------------\n    //  Base\n    // -----------------------------------------------------\n\n    toString() {\n        return `${krakenDateHelpers.date.toText(this.startTime)} ${this.name} ${this.status}`;\n    }\n\n    new() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    clone() {\n        let newObject = new Action_simple();\n        newObject.record = this.record;\n    }\n\n    lt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    gt(other) {\n        if (h.isNull(this.endTime) && h.isNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNull(this.endTime) && h.isNotNull(other.endTime)) {\n            return false;\n        }\n        if (h.isNotNull(this.endTime) && h.isNull(other.endTime)) {\n            return true;\n        }\n        if (this.endTime > other.endTime) {\n            return true;\n        }\n        if (this.endTime < other.endTime) {\n            return false;\n        }\n        return false;\n    }\n\n    // -----------------------------------------------------\n    //  Action attributes\n    // -----------------------------------------------------\n\n    get actionStatus() {\n        return this._record?.actionStatus;\n    }\n    set actionStatus(value) {\n        this._record.actionStatus = value;\n    }\n\n    get status() {\n        let value = this.actionStatus || \"\";\n        if (h.isNotNull(value)) {\n            value = value.replace(\"ActionStatus\", \"\");\n        }\n        return value;\n    }\n\n    get object() {\n        return this._record?.object;\n    }\n    set object(value) {\n        this._record.object = value;\n    }\n\n    get instrument() {\n        return this._record?.instrument;\n    }\n    set instrument(value) {\n        this._record.instrument = value;\n    }\n\n    get result() {\n        return this._record?.result;\n    }\n    set result(value) {\n        this._record.result = value;\n        if (h.isNotNull(value)) {\n            this.actionStatus = \"CompletedActionStatus\";\n            this.endTime = new Date();\n        }\n    }\n\n    get startTime() {\n        return this._record?.startTime;\n    }\n    set startTime(value) {\n        this._record.startTime = value;\n    }\n\n    get endTime() {\n        return this._record?.endTime;\n    }\n    set endTime(value) {\n        this._record.endTime = value;\n    }\n\n    get error() {\n        return this._record?.error;\n    }\n    set error(value) {\n        this._record.error = value;\n        if (h.isNotNull(value)) {\n            this.actionStatus = \"FailedActionStatus\";\n            this.endTime = new Date();\n        }\n    }\n\n    get duration() {\n        return krakenDateHelpers.date.duration(this.startTime, this.endTime);\n    }\n\n    isSuccess() {\n        return this.actionStatus == \"CompletedActionStatus\";\n    }\n\n    // -----------------------------------------------------\n    //  Action methods\n    // -----------------------------------------------------\n\n    setPotential(error) {\n        this.actionStatus = \"PotentialActionStatus\";\n        this.error = String(error);\n        this.startTime = null;\n        this.endTime = null;\n    }\n\n    setActive(error) {\n        this.actionStatus = \"ActiveActionStatus\";\n        this.error = String(error);\n        this.startTime = new Date();\n    }\n\n    setCompleted() {\n        this.actionStatus = \"CompletedActionStatus\";\n        this.endTime = new Date();\n    }\n\n    setFailed(error) {\n        this.actionStatus = \"FailedActionStatus\";\n        this.error = String(error);\n        this.endTime = new Date();\n    }\n\n    // -----------------------------------------------------\n    //  Comment\n    // -----------------------------------------------------\n\n    getHumanRecord() {\n        let humanRecord = v.innerValuesToText(this.record);\n        humanRecord.duration = h.date.human.duration(this.startTime, this.endTime);\n        return humanRecord;\n    }\n}\n\n\nexport class KrSimpleFile extends KrSimpleThing {\n    constructor(file) {\n        super(\"DigitalDocument\");\n        this._file = null;\n        this.file = file;\n    }\n\n    get file() {\n        return this._file;\n    }\n    set file(file) {\n        if (!(file instanceof File)) { return }\n        this._file = file;\n        this._record = { ...this._record, ...krakenFileHelpers.getRecord(file) }\n    }\n\n    async apiGet(){\n        this.file = await krakenApiHelpers.getFile(null, this._record.contentUrl)\n    }\n    async apiPost(){\n        let result = await krakenApiHelpers.postFile(CDN_URL, 'files/' + CDN_COLLECTION,  this._file)\n        this._record.contentUrl = result[0].contentUrl\n    }\n\n    async getPreview(){\n        return await krakenFileHelpers.getPreview(this.file)\n    }\n}\n\nexport const krakenSimpleThingsHelpers = {\n    Thing: KrSimpleThing,\n    Action: KrSimpleAction,\n    File: KrSimpleFile,\n};\n","import { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\nexport const krakenFileHelpers = {\n    getPreview: getPreviewElementFromFile,\n    getRecord: getRecordFromFile,\n};\n\n// -----------------------------------------------------\n//  Record\n// -----------------------------------------------------\n\nasync function getRecordFromFile(file) {\n    console.log(\"--- width\", file.width);\n    let record = {};\n    record[\"@type\"] = _getRecordTypeFromFile(file);\n    record.contentSize = file.size;\n    record.dateModified = file.lastModifiedDate;\n    record.encodingFormat = file.type;\n    record.name = file.type;\n\n    return record;\n}\n\nfunction _getRecordTypeFromFile(file) {\n    let record_type = null;\n    if (file.type.startsWith(\"image/\")) {\n        record_type = \"ImageObject\";\n    } else if (file.type.startsWith(\"video/\")) {\n        record_type = \"VideoObject\";\n    } else if (file.type.startsWith(\"audio/\")) {\n        fileType = \"AudioObject\";\n    } else if (file.type.startsWith(\"application/\")) {\n        record_type = \"SoftwareApplication\";\n    } else if (file.type.startsWith(\"text/\")) {\n        record_type = \"DigitalDocument\";\n    }\n    return record_type;\n}\n\n// -----------------------------------------------------\n//  Elements\n// -----------------------------------------------------\n\nasync function getPreviewElementFromFile(file) {\n    /**\n     * Given a file object, returns an element with preview of the file\n     */\n\n    let previewContainer = document.createElement(\"span\");\n\n    if (file) {\n        const reader = new FileReader(); // Create a FileReader\n        const fileType = file.type;\n\n        // Image file\n        if (fileType.startsWith(\"image/\")) {\n            reader.onload = function (e) {\n                const img = document.createElement(\"img\");\n                img.src = e.target.result;\n                img.style.maxWidth = \"300px\";\n                img.style.maxHeight = \"300px\";\n                previewContainer.appendChild(img);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Text file\n        else if (fileType.startsWith(\"text/\")) {\n            reader.onload = function (e) {\n                const text = document.createElement(\"pre\");\n                text.textContent = e.target.result;\n                previewContainer.appendChild(text);\n            };\n            reader.readAsText(file);\n        }\n        // Video file\n        else if (fileType.startsWith(\"video/\")) {\n            reader.onload = function (e) {\n                const video = document.createElement(\"video\");\n                video.src = e.target.result;\n                video.controls = true;\n                video.style.maxWidth = \"300px\";\n                video.style.maxHeight = \"300px\";\n                previewContainer.appendChild(video);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Audio file\n        else if (fileType.startsWith(\"audio/\")) {\n            reader.onload = function (e) {\n                const audio = document.createElement(\"audio\");\n                audio.src = e.target.result;\n                audio.controls = true;\n                previewContainer.appendChild(audio);\n            };\n            reader.readAsDataURL(file);\n        }\n        // PDF file\n        else if (fileType === \"application/pdf\") {\n            reader.onload = function (e) {\n                const object = document.createElement(\"object\");\n                object.data = e.target.result;\n                object.type = \"application/pdf\";\n                object.style.width = \"100%\";\n                object.style.height = \"500px\";\n                previewContainer.appendChild(object);\n            };\n            reader.readAsDataURL(file);\n        }\n        // Other file types\n        else {\n            previewContainer.textContent =\n                \"File type not supported for preview.\";\n        }\n    }\n    return previewContainer;\n}\n","import { krakenHelpersLight as h } from \"../krakenHelpersLight.js\";\n\nimport { krakenTemplateLiveHelpers } from \"./krakenTemplateLiveHelpers.js\";\n\nexport const krakenElementThingHelpers = {\n    /**\n     * current: returns the element that composes the current record\n     * parent: returns element parent of\n     */\n\n    record_type: getRecordType,\n    record_id: getRecordId,\n    ref: getRef,\n    init: initThingElementAll,\n    compile: replacePlaceholders,\n    record: {\n        get: getRecordFromElement,\n        set: setRecordToElement,\n        delete: deleteRecordFromElement,\n    },\n    current: {\n        thing: getCurrentThing,\n        property: getCurrentProperty,\n        value: getCurrentValue,\n        get: getCurrentElement,\n    },\n    parent: {\n        thing: getParentThing,\n        property: getParentProperty,\n        value: getParentValue,\n        get: getParentElement,\n    },\n    top: {\n        thing: getTopThing,\n        property: getTopProperty,\n        value: getTopValue,\n        get: getTopElement,\n    },\n    children: {\n        things: getChildrenThings,\n        properties: getChildrenProperties,\n        values: getChildrenValues,\n        get: getChildrenElements,\n    },\n    childrenAll: {\n        things: getChildrenThingsAll,\n        properties: getChildrenPropertiesAll,\n        values: getChildrenValuesAll,\n        get: getChildrenElementsAll,\n    },\n    type: {\n        get: getElementType,\n        getNext: getNextElementType,\n        set: setElementType,\n        delete: deleteElementType,\n        setAsThing: setElementTypeThing,\n        setAsProperty: setElementTypeProperty,\n        setAsValue: setElementTypeValue,\n    },\n    parts: {\n        header: {\n            get: getHeaderOfElement,\n        },\n        body: {\n            get: getBodyOfElement,\n            add: addBodyToElement,\n        },\n        footer: {\n            get: getFooterOfElement,\n        },\n    },\n    update: {\n        record: updateThing,\n        thing: updateThingElement,\n        property: updatePropertyElement,\n    },\n    format: replacePlaceholders,\n};\n\n// -----------------------------------------------------\n//  Attributes\n// -----------------------------------------------------\n\nfunction getRecordType(element) {\n    let record_type = element.getAttribute(\"data-record-type\");\n    return record_type;\n}\nfunction getRecordId(element) {\n    let record_id = element.getAttribute(\"data-record-id\");\n    return record_id;\n}\nfunction getRef(element) {\n    let record_type = getRecordType(element);\n    let record_id = getRecordId(element);\n\n    if (h.isNull(record_type)) {\n        return null;\n    }\n    if (h.isNull(record_id)) {\n        return null;\n    }\n\n    let ref = { \"@type\": record_type, \"@id\": record_id };\n    return ref;\n}\n\n// -----------------------------------------------------\n//  Initialize\n// -----------------------------------------------------\n\nfunction initThingElementAll(element) {\n    initThingElement(element);\n\n    let item = element.firstElementChild;\n    while (item) {\n        let nextItem = item.nextElementSibling;\n        initThingElementAll(item);\n        item = nextItem;\n    }\n\n    initThingElement(element);\n\n    return;\n}\n\nfunction initThingElement(element) {\n    /**\n     * Initialize thing, property and value elements\n     */\n\n    if (h.isNull(element)) {\n        return;\n    }\n\n    // Placeholders\n    //replacePlaceholders(element);\n\n    \n    // Add missing classes\n    addMissingClasses(element);\n\n    //\n    if (h.isNull(getElementType(element))) {\n        return;\n    }\n\n    // Set id\n    h.element.setId(element);\n\n    // Add parent thing if required\n    addThingToProperty(element);\n\n    // Add body if missing\n    addBodyToElement(element);\n}\n\n// -----------------------------------------------------\n//  Things\n// -----------------------------------------------------\n\nfunction getThingElements(element, record_type, record_id) {\n    if (h.isNull(element)) {\n        element = document;\n    }\n\n    let conditions;\n    if (h.isNotNull(record_type)) {\n        conditions = {\n            \"data-record-type\": record_type,\n            \"data-record-id\": record_id,\n        };\n    }\n\n    let things = getChildrenThingsAll(element, conditions);\n    return things;\n}\n\n// -----------------------------------------------------\n//  Updating elements\n// -----------------------------------------------------\n\nfunction updateThing(record) {\n    let thingElements = getThingElements(\n        document,\n        record[\"@type\"],\n        record[\"@id\"],\n    );\n    for (let t of thingElements) {\n        updateThingElement(t, record);\n    }\n}\n\nfunction updateThingElement(element, value) {\n    let thingElement = getCurrentThing(element);\n\n    if (h.isNull(thingElement)) {\n        return;\n    }\n\n    thingElement.setAttribute(\"data-record-type\", value?.[\"@type\"]);\n    thingElement.setAttribute(\"data-record-id\", value?.[\"@id\"]);\n\n    let propertyElements = getChildrenProperties(thingElement);\n\n    for (let p of propertyElements) {\n        let propertyID = p.getAttribute(\"data-propertyID\");\n        updatePropertyElement(p, value?.[propertyID]);\n    }\n}\n\nfunction updatePropertyElement(element, value, template) {\n    // Delete value elements\n    let propertyBodyElement = getBodyOfElement(element);\n    propertyBodyElement.innerHTML = \"\";\n\n    //\n    if (h.isNull(value)) {\n        return;\n    }\n\n    if (!Array.isArray(value)) {\n        value = [value];\n    }\n\n    // Add value elements\n    let propertyID = element.getAttribute(\"data-propertyID\");\n\n    let item = null;\n    for (let v of value) {\n        let ve = newValueElement(v, template, propertyID);\n        if (h.isNotNull(item)) {\n            item.after(ve);\n        } else {\n            propertyBodyElement.appendChild(ve);\n        }\n        item = ve;\n    }\n}\n\nfunction newValueElement(value, template, propertyID) {\n    \n    let newValueElement = document.createElement(\"span\");\n    setElementTypeValue(newValueElement);\n    newValueElement.classList.add(\"krValue\");\n    newValueElement.setAttribute(\"data-property-vID\", propertyID);\n    newValueElement.setAttribute(\"data-value\", JSON.stringify(value));\n\n    if (h.isNull(template)) {\n        newValueElement.textContent = value;\n    } else {\n        newValueElement.innerHTML = template;\n    }\n\n    initThingElementAll(newValueElement);\n\n    for (let t of getChildrenThings(newValueElement)) {\n        \n        t.setAttribute(\"data-record-type\", value?.[\"@type\"]);\n        t.setAttribute(\"data-record-id\", value?.[\"@id\"]);\n    }\n\n    return newValueElement;\n}\n\nfunction updatePropertyElement_WITH_THING(element, thing) {\n    let propertyID = element.getAttribute(\"data-propertyID\");\n    let property = thing.p.get(propertyID);\n    let pvs = property.propertyValues;\n    let pvsID = pvs.map((x) => x.record_id);\n\n    // Delete value elements\n    let valueElements = getChildrenValues(element);\n    for (let v of valueElements) {\n        if (!pvsID.includes(v.id)) {\n            v.remove();\n        }\n    }\n\n    // Add value elements\n    let propertyBodyElement = getBodyOfElement(element);\n    let item = null;\n    for (let pv of pvs) {\n        // Search if element already exists and reorder\n        let filteredValueElements = valueElements.filter(\n            (x) => x.getAttribute(\"data-valueID\") == pv.record_id,\n        );\n        if (filteredValueElements.length > 0) {\n            for (let i of filteredValueElements) {\n                if (h.isNotNull(item)) {\n                    item.after(i);\n                } else {\n                    propertyBodyElement.appendchild(i);\n                }\n                item = i;\n            }\n        } else {\n            // Creates new element if not already exist\n            let newValueElement = newValueElement(propertyValue, template);\n            if (h.isNotNull(item)) {\n                item.after(i);\n            } else {\n                propertyBodyElement.appendchild(i);\n            }\n            item = i;\n        }\n    }\n}\n\nfunction newValueElement_WITH_THING(propertyValue, template) {\n    let newValueElement = document.createElement(\"span\");\n    setElementTypeValue(newValueElement);\n    newValueElement.setAttribute(\"data-valueID\", propertyValue.record_id);\n\n    if (h.isNull(template)) {\n        newValueElement.textContent = propertyValue.value;\n    } else {\n        newValueElement.innerHTML = propertyValue.value;\n        initThingElementAll(newValueElement);\n        let childThingElements = getChildrenThings(newValueElement);\n        for (let c of childThingElements) {\n            c.setAttribute(\"data-record-type\", propertyValue.value?.[\"@type\"]);\n            c.setAttribute(\"data-record-id\", propertyValue.value?.[\"@id\"]);\n            updateThingElement(c, propertyValue.value);\n        }\n    }\n    return newValueElement;\n}\n\n// -----------------------------------------------------\n//  Placeholders\n// -----------------------------------------------------\n\nfunction replacePlaceholders(element) {\n    // Replace references in {{ }} like {{ name }} or {{ item.name }} with properties\n\n    // Get text nodes\n    let textNodes = [];\n    \n    for (let node of element.childNodes) {\n        if (node.nodeType == 3) {\n            textNodes.push(node);\n        }\n    }\n\n    for (let node of textNodes) {\n        let nodeContent = node.nodeValue;\n\n        if (nodeContent && nodeContent.includes(\"{{\")) {\n            console.log(\"has content\");\n            let content = krakenTemplateLiveHelpers.get(node.nodeValue);\n            if (h.isNotNull(content)) {\n                let newNode = document.createElement(\"span\");\n                newNode.innerHTML = content;\n                node.nodeValue = \"\";\n                node.after(newNode);\n            }\n        }\n    }\n}\n\n// -----------------------------------------------------\n//  Element structure - initialization\n// -----------------------------------------------------\n\nfunction addThingToProperty(element) {\n    /**\n     * If a property element doens't have a parent thing, adds one\n     */\n\n    if (h.isNull(element.getAttribute(\"data-propertyID\"))) {\n        return;\n    }\n\n    let propertyElement = element;\n\n    let thingElement = null;\n    let item = element.parentElement;\n    while (item) {\n        if (item.classList.contains(\"krThing\")) {\n            thingElement = item;\n            break;\n        }\n        if (item.classList.contains(\"krProperty\")) {\n            break;\n        }\n        item = item.parentElement;\n    }\n\n    if (h.isNotNull(thingElement)) {\n        return;\n    }\n\n    let newThingElement = document.createElement(\"span\");\n    newThingElement.classList.add(\"Addedthing\");\n\n    setElementTypeThing(newThingElement);\n    newThingElement.setAttribute(\n        \"data-record-type\",\n        element.getAttribute(\"data-record-type\"),\n    );\n    newThingElement.setAttribute(\n        \"data-record-id\",\n        element.getAttribute(\"data-record-id\"),\n    );\n    h.element.insert.above(newThingElement, element);\n}\n\nfunction addMissingClasses(element) {\n    // Converts elements with proper attributes to proper class\n\n    let record_type = element.getAttribute(\"data-record-type\");\n    let record_id = element.getAttribute(\"data-record-id\");\n    let propertyID = element.getAttribute(\"data-propertyID\");\n    let valueID = element.getAttribute(\"data-valueID\");\n\n    let record_type_null =\n        !record_type || record_type == null || record_type == \"\";\n    let record_id_null = !record_id || record_id == null || record_id == \"\";\n    let record_propertyID_null =\n        !propertyID || propertyID == null || propertyID == \"\";\n    let record_valueID_null = !valueID || valueID == null || valueID == \"\";\n\n    // Convert to krThing if type and id but not property\n    if (\n        record_type_null == false &&\n        record_id_null == false &&\n        record_propertyID_null == true\n    ) {\n        element.classList.add(\"krThing\");\n    }\n\n    // Convert to krProperty if type and id but not property\n    if (record_propertyID_null == false && record_valueID_null == true) {\n        element.classList.add(\"krProperty\");\n    }\n\n    // Convert to krProperty if type and id but not property\n    if (record_valueID_null == false) {\n        element.classList.add(\"krValue\");\n    }\n}\n\n// -----------------------------------------------------\n//  Record\n// -----------------------------------------------------\n\nfunction getRecordFromElement(element) {\n    /**\n     * Retrieves record from elements attributes and values\n     */\n    let record = {};\n    let thingElement = getCurrentThing(element);\n\n    if (h.isNull(thingElement)) {\n        return null;\n    }\n\n    record[\"@type\"] = thingElement.getAttribute(\"data-record-type\");\n    record[\"@id\"] = thingElement.getAttribute(\"data-record-id\");\n\n    if (h.isNull(record?.[\"@type\"])) {\n        return null;\n    }\n\n    // Get properties\n    let propertyElements = getChildrenProperties(thingElement);\n\n    for (let p of propertyElements) {\n        let propertyID = p.getAttribute(\"data-propertyID\");\n        record[propertyID] = [];\n\n        // Get values\n        let valueElements = getChildrenValues(p);\n        for (let v of valueElements) {\n            let value = getValueFromElement(v);\n            if (h.isNotNull(value)) {\n                record[propertyID].push(value);\n            }\n        }\n    }\n    record = h.json.simplify(record);\n    return record;\n}\n\nfunction getValueFromElement(element) {\n    /**\n     * Returns the value contained in an element\n     */\n\n    // If input\n    if (h.isNotNull(element?.value)) {\n        return element.value;\n    }\n\n    // If value is contained in value attribute\n    let v = element.getAttribute(\"value\");\n    if (h.isNotNull(v)) {\n        return v;\n    }\n\n    // If thing\n    let childrenThingElements = getChildrenThings(element);\n    if (childrenThingElements.length > 0) {\n        return childrenThingElements[0];\n    }\n\n    // html content\n    if (h.isNotNull(element.innerHTML)) {\n        let content = element.textContent;\n        content = h.string.clean(content);\n        return content;\n    }\n\n    return null;\n}\n\nfunction setRecordToElement(element, record_type, record_id) {\n    record_id = record_type?.record_id || record_type?.[\"@id\"] || record_id;\n    record_type =\n        record_type?.record_type || record_type?.[\"@type\"] || record_type;\n\n    if (h.isNull(record_type)) {\n        return;\n    }\n    if (h.isNull(record_id)) {\n        return;\n    }\n    if (h.isNull(element)) {\n        return;\n    }\n\n    // Set type and id\n\n    let elements = [];\n\n    // Retrieve thing\n    let currentThing = getCurrentThing(element);\n    if (h.isNull(currentThing)) {\n        return null;\n    }\n    elements.push(currentThing);\n\n    // Retrieve properties\n    let propertyElements = getChildrenProperties(currentThing);\n    elements = elements.concat(propertyElements);\n\n    // Retrieve values\n    for (let p of propertyElements) {\n        let valueElements = getChildrenValues(p);\n        elements = elements.concat(valueElements);\n    }\n\n    // Assign type and id for all elements\n    for (let i of elements) {\n        i.setAttribute(\"data-record-type\", record_type);\n        i.setAttribute(\"data-record-id\", record_id);\n    }\n    return;\n}\n\nfunction deleteRecordFromElement(element) {\n    let elements = [];\n\n    // Retrieve thing\n    let currentThing = h.element.getCurrentThing(element);\n    if (h.isNull(currentThing)) {\n        return null;\n    }\n    elements.push(currentThing);\n\n    // Retrieve properties\n    let propertyElements = getChildrenProperties(currentThing);\n    elements = elements.concat(propertyElements);\n\n    // Retrieve values\n    for (let p of propertyElements) {\n        let valueElements = getChildrenValues(p);\n        elements = elements.concat(valueElements);\n    }\n\n    // Assign type and id for all elements\n    for (let i of elements) {\n        i.setAttribute(\"data-record-type\", \"\");\n        i.setAttribute(\"data-record-id\", \"\");\n    }\n    return;\n}\n\n// -----------------------------------------------------\n//  Type\n// -----------------------------------------------------\n\nfunction getElementType(element) {\n    if (element.classList.contains(\"krThing\")) {\n        return \"thing\";\n    }\n    if (element.classList.contains(\"krProperty\")) {\n        return \"property\";\n    }\n    if (element.classList.contains(\"krValue\")) {\n        return \"value\";\n    }\n    return null;\n}\n\nfunction getNextElementType(element) {\n    let type = getElementType(element);\n    switch (type) {\n        case \"thing\":\n            return \"property\";\n        case \"property\":\n            return \"value\";\n        case \"value\":\n            return \"thing\";\n        default:\n            return null;\n    }\n}\n\nfunction setElementType(element, elementType) {\n    if (h.isNull(element)) {\n        return;\n    }\n\n    deleteElementType(element);\n\n    element.classList.add(elementType);\n}\n\nfunction deleteElementType(element) {\n    let classes = [\"krThing\", \"krProperty\", \"krValue\"];\n    for (let c of classes) {\n        element.classList.remove(c);\n    }\n    return;\n}\n\nfunction setElementTypeThing(element) {\n    let elementType = \"krThing\";\n    return setElementType(element, elementType);\n}\n\nfunction setElementTypeProperty(element) {\n    let elementType = \"krProperty\";\n    return setElementType(element, elementType);\n}\nfunction setElementTypeValue(element) {\n    let elementType = \"krValue\";\n    return setElementType(element, elementType);\n}\n\n// -----------------------------------------------------\n//  Current\n// -----------------------------------------------------\n\nfunction getCurrentElement(element, className, conditions) {\n    if (h.isNull(element)) {\n        return undefined;\n    }\n\n    let item = element;\n    while (item) {\n        if (\n            item.classList &&\n            item.classList.contains(className) &&\n            h.element.meetsConditions(item)\n        ) {\n            return item;\n        }\n        item = item.parentElement;\n    }\n    return null;\n}\n\nfunction getCurrentThing(element, conditions) {\n    let className = \"krThing\";\n    return getCurrentElement(element, className, conditions);\n}\n\nfunction getCurrentProperty(element, conditions) {\n    let className = \"krProperty\";\n    return getCurrentElement(element, className, conditions);\n}\n\nfunction getCurrentValue(element, conditions) {\n    let className = \"krValue\";\n    return getCurrentElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Parent\n// -----------------------------------------------------\n\nfunction getParentElement(element, className, conditions) {\n    if (!element || element == null) {\n        return undefined;\n    }\n\n    let currentElement = getCurrentElement(element, className, conditions);\n    if (h.isNull(currentElement)) {\n        return;\n    }\n\n    let parentItem = currentElement.parentElement;\n    if (h.isNull(parentItem)) {\n        return null;\n    }\n    let parentElement = getParentElement(parentItem, className, conditions);\n\n    return parentElement;\n}\n\nfunction getParentThing(element, conditions) {\n    let className = \"krThing\";\n    return getParentElement(element, className, conditions);\n}\nfunction getParentProperty(element, conditions) {\n    let className = \"krProperty\";\n    return getParentElement(element, className, conditions);\n}\nfunction getParentValue(element, conditions) {\n    let className = \"krValue\";\n    return getParentElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Top\n// -----------------------------------------------------\n\nfunction getTopElement(element, className, conditions) {\n    /**\n     * Returns most top parent element containing class name\n     * OCnditions contains attributes to match\n     */\n    let item = element;\n    let topElement = null;\n    while (item) {\n        if (\n            item.classList.contains(className) &&\n            h.element.meetsConditions(item, conditions)\n        ) {\n            topElement = item;\n        }\n        item = item.parentElement;\n    }\n    return topElement;\n}\n\nfunction getTopThing(element, conditions) {\n    let className = \"krThing\";\n    return getTopElement(element, className, conditions);\n}\nfunction getTopProperty(element, conditions) {\n    let className = \"krProperty\";\n    return getTopElement(element, className, conditions);\n}\nfunction getTopValue(element, conditions) {\n    let className = \"krValue\";\n    return getTopElement(element, className, conditions);\n}\n\n// -----------------------------------------------------\n//  Children\n// -----------------------------------------------------\n\nfunction getChildrenElements(element, classToGet, classesToStop, conditions) {\n    let results = [];\n    if (!Array.isArray(classesToStop)) {\n        classesToStop = [classesToStop];\n    }\n\n    for (let i of element.children) {\n        let skip = false;\n        for (let classToStop of classesToStop) {\n            if (i.classList.contains(classToStop)) {\n                skip = true;\n            }\n        }\n        if (skip == true) {\n            continue;\n        }\n\n        if (\n            i.classList.contains(classToGet) &&\n            h.element.meetsConditions(i, conditions)\n        ) {\n            results.push(i);\n        }\n\n        let v = getChildrenElements(i, classToGet, classesToStop, conditions);\n        if (v.length > 0) {\n            results = results.concat(v);\n        }\n    }\n\n    return results;\n}\n\nfunction getChildrenThings(element, conditions) {\n    let classToGet = \"krThing\";\n    let classToStop = [\"krProperty\", \"krValue\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenProperties(element, conditions) {\n    let classToGet = \"krProperty\";\n    let classToStop = [\"krThing\", \"krValue\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenValues(element, conditions) {\n    let classToGet = \"krValue\";\n    let classToStop = [\"krThing\", \"krProperty\"];\n    return getChildrenElements(element, classToGet, classToStop, conditions);\n}\n\n// -----------------------------------------------------\n//  Children  - All\n// -----------------------------------------------------\n\nfunction getChildrenElementsAll(\n    element,\n    classToGet,\n    classesToStop,\n    conditions,\n) {\n    let results = getChildrenElements(\n        element,\n        classToGet,\n        classesToStop,\n        conditions,\n    );\n    let childResults = [];\n\n    for (let r of results) {\n        childResults = childResults.concat(\n            getChildrenElementsAll(r, classToGet, classesToStop, conditions),\n        );\n    }\n    results = results.concat(childResults);\n\n    return results;\n}\n\nfunction getChildrenThingsAll(element, conditions) {\n    let classToGet = \"krThing\";\n    let classToStop = [\"krProperty\", \"krValue\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenPropertiesAll(element, conditions) {\n    let classToGet = \"krProperty\";\n    let classToStop = [\"krThing\", \"krValue\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n\nfunction getChildrenValuesAll(element, conditions) {\n    let classToGet = \"krValue\";\n    let classToStop = [\"krThing\", \"krProperty\"];\n    return getChildrenElementsAll(element, classToGet, classToStop, conditions);\n}\n\n// -----------------------------------------------------\n//  Element components\n// -----------------------------------------------------\n\nfunction getHeaderOfElement(element) {\n    let elementType = getElementType(element);\n    let classToGet = elementType + \"Header\";\n    let classesToStop = \"kr\" + elementType;\n    let bodies = getChildrenElements(element, classToGet, classesToStop);\n    if (bodies.length > 0) {\n        return bodies[0];\n    }\n    return null;\n}\n\nfunction getBodyOfElement(element) {\n    /**\n     * Returns child element containing krThingBody, krPropertyBody, etc.\n     */\n    let elementType = getElementType(element);\n    let classToGet\n    if ((elementType = \"property\")) {\n        classToGet = \"krPropertyBody\";\n    } else {\n        classToGet = \"kr\" + elementType + \"Body\";\n    }\n    let classesToStop = \"no stop\";\n    let bodies = getChildrenElements(element, classToGet, classesToStop);\n    if (bodies.length > 0) {\n        return bodies[0];\n    }\n    return null;\n}\n\nfunction addBodyToElement(element) {\n    if (getElementType(element) != \"property\") {\n        return;\n    }\n    let body = getBodyOfElement(element);\n\n    if (h.isNotNull(body)) {\n        return;\n    }\n\n    let classToGet\n    if ((getElementType(element) == \"property\")) {\n        classToGet = \"krPropertyBody\";\n    } else {\n        classToGet = \"kr\" + getElementType(element)  + \"Body\";\n    }\n\n    \n    let newBodyElement = document.createElement(\"span\");\n    newBodyElement.classList.add(\"krPropertyBody\" );\n\n    h.element.insert.below(newBodyElement, element);\n\n    return;\n}\n\nfunction getFooterOfElement(element) {\n    let elementType = getElementType(element);\n    let classToGet = elementType + \"Footer\";\n    let classesToStop = \"kr\" + elementType;\n    let bodies = getChildrenElements(element, classToGet, classesToStop);\n    if (bodies.length > 0) {\n        return bodies[0];\n    }\n    return null;\n}\n","import { krakenHelpersLight as h } from \"../krakenHelpersLight.js\";\nimport { krakenAnalysisHelpers } from \"./krakenAnalysisHelpers.js\";\n\nexport const krakenTemplateLiveHelpers = {\n    get: renderTemplate,\n    replacePlaceholders: renderTemplate,\n    render: renderTemplate,\n};\n\nfunction renderTemplate(template){\n\n\n    template = prepareTemplate(template)\n\n    let renderedTemplate1 = _renderTemplate(template)\n\n    return renderedTemplate1\n}\n\n\n\nfunction _renderTemplate(template){\n\n    /**\n     * beforeContent: the content before the opening tag\n     * afterContent: the content after the closing tag\n     * templateContent: the content in between the tags\n     * valueContent: the content replacing the templateContent with actual values\n     */\n\n\n    let content = template\n\n\n    // Handle iterations\n    let tag = getIterationTag(content)\n\n    while(h.isNotNull(tag)){\n\n        let valueContent = ''\n\n        let items = tag.propertyID.split('.')\n        for(let item of items){\n            valueContent += `<span class=\"krProperty\" data-propertyID=\"${item}\">`\n\n        }\n\n        valueContent += tag.contentWithin\n\n        for(let item of items){\n            valueContent += `</span>`\n        }\n\n        content = String(tag.contentBefore) + String(valueContent) + String(tag.contentAfter)\n\n        tag = getIterationTag(content)\n    }\n\n\n    // Handle placeholders \n    tag = getPlaceholderTag(content)\n    while(h.isNotNull(tag)){\n\n        let valueContent = ''\n\n        let items = tag.propertyID.split('.')\n        for(let item of items){\n            valueContent += `<span class=\"krProperty\" data-propertyID=\"${item}\">`\n        }\n\n\n        for(let item of items){\n            valueContent += `</span>`\n        }\n\n        content = String(tag.contentBefore) + String(valueContent) + String(tag.contentAfter)\n\n        \n        tag = getPlaceholderTag(content)\n    }\n\n    return content\n\n}\n\n\n\n\nfunction prepareTemplate(template){\n\n\n    while(template.includes('{{ ')){\n        template = template.replaceAll('{{ ', '{{')\n    }\n    while(template.includes(' }}')){\n        template = template.replaceAll(' }}', '}}')\n    }\n\n    return template\n\n}\n\n\nfunction getIterationTag(template){\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{#')){ return null }\n    if(!template.includes('{{/')){ return null }\n\n    let result = {\n        \"type\": 'iteration',\n        'propertyID': null,\n        'contentBefore': '',\n        'contentWithin': '',\n        'contentAfter': ''\n    }\n\n    let tagStartPositionStart = template.lastIndexOf('{{#')\n    let tagStartPositionEnd = template.indexOf('}}', tagStartPositionStart)\n    let tagEndPositionStart = template.indexOf('{{/', tagStartPositionEnd)\n    let tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n    if(tagStartPositionStart == -1 || tagStartPositionEnd == -1 || tagEndPositionStart == -1 || tagEndPositionEnd == -1){ return null }\n\n    result.propertyID = template.slice(tagStartPositionStart + 3, tagStartPositionEnd)\n    result.contentBefore = template.slice(0, tagStartPositionStart)\n    result.contentAfter = template.slice(tagEndPositionEnd + 2)\n    result.contentWithin = template.slice(tagStartPositionEnd + 2, tagEndPositionStart -1)\n\n    return result\n}\n\nfunction getPlaceholderTag(template){\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{')){ return null }\n    if(!template.includes('}}')){ return null }\n\n    let result = {\n        \"type\": 'placeholder',\n        'propertyID': null,\n        'contentBefore': '',\n        'contentWithin': '',\n        'contentAfter': '',\n        'commandName': null,    \n        'commandPropertyID': null\n    }\n\n    let tagPositionStart = template.lastIndexOf('{{')\n    let tagPositionEnd = template.indexOf('}}', tagPositionStart)\n\n    if(tagPositionStart == -1 || tagPositionEnd == -1 ){ return null }\n\n    result.propertyID = template.slice(tagPositionStart + 2, tagPositionEnd)\n    result.contentBefore = template.slice(0, tagPositionStart)\n    result.contentAfter = template.slice(tagPositionEnd + 2)\n\n\n    // Separate commands from property ID\n    let propertyString = result.propertyID\n    propertyString.replaceAll('||', '|')\n    let commandNameStartPosition = propertyString.indexOf('|')\n    let commandPropertyIDPosition = result.propertyID.indexOf(':', commandNameStartPosition + 1)\n\n    if(commandNameStartPosition == -1 ){ \n        return result \n    }\n\n    result.propertyID = propertyString.slice(0, commandNameStartPosition)\n    result.commandName = propertyString.slice(commandNameStartPosition + 1, commandPropertyIDPosition)\n    result.commandPropertyID = propertyString.slice(commandPropertyIDPosition + 1)\n\n    result.propertyID = result.propertyID.trim()\n    result.commandName = result.commandName.trim()\n    result.commandPropertyID = result.commandPropertyID.trim()\n\n    return result\n}\n\n\n","\n\nimport { krakenDateHelpers } from \"./krakenDateHelpers.js\";\n\nimport { krakenDotNotationHelpers } from \"./krakenDotNotationHelpers.js\";\n\nexport const krakenExtractHelpers = {\n    extractMentions: extractMentions,\n    extractNames: extractNames,\n    extractValueAndUnit: extractValueAndUnit,\n    extractUrls: extractUrls,\n    extractNumbers: extractNumbers,\n    extractPhoneNumbers: extractPhoneNumbers,\n    extractDates: extractDates,\n    extractEmails: extractEmails,\n    \n};\n\n\nfunction extractMentions(text) {\n    // Error handling for invalid input\n    if (typeof text !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    // Regular expression to match mentions\n    const mentionRegex = /\\B@\\w+/g;\n    const mentions = text.match(mentionRegex);\n\n    // Return an empty array if no mentions found\n    return mentions ? mentions : [];\n}\n\nfunction extractNames(inputString) {\n    if (typeof inputString !== \"string\") {\n        throw new TypeError(\"Input must be a string\");\n    }\n\n    const namePattern = /\\b[A-Z][a-z]*\\b/g;\n    const names = inputString.match(namePattern);\n\n    return names || [];\n}\n\nfunction extractValueAndUnit(input) {\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    const regex = /(-?\\d+\\.?\\d*)\\s*([a-zA-Z]+)/;\n    const match = input.match(regex);\n\n    if (!match) {\n        throw new Error(\"No value and unit found in the input string\");\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n\n    return { value, unit };\n}\n\nfunction extractNumbers(input) {\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    const numbers = input.match(/\\d+/g);\n    if (numbers === null) {\n        return [];\n    }\n\n    return numbers.map(Number);\n}\n\nfunction extractPhoneNumbers(input) {\n    // Error handling: check if input is a string\n    if (typeof input !== \"string\") {\n        throw new Error(\"Input must be a string\");\n    }\n\n    // Regular expression to match different telephone number formats\n    //const phoneRegex = /(\\+?\\d{1,2}[-.\\s]?)?(\\(?\\d{3}\\)?[-.\\s]?)?\\d{3}[-.\\s]?\\d{4}/g;\n    const phoneRegex =\n        /(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})/g;\n\n    // Extract phone numbers\n    const phoneNumbers = input.match(phoneRegex);\n\n    // If no phone numbers are found, return an empty array\n    if (!phoneNumbers) {\n        return [];\n    }\n\n    return phoneNumbers;\n}\n\nfunction extractDates(input) {\n    try {\n        if (typeof input !== \"string\") {\n            return [];\n        }\n\n        // Regular expression to match dates in YYYY-MM-DD, DD/MM/YYYY, or MM-DD-YYYY format\n        const datePattern =\n            /\\b(\\d{4}-\\d{2}-\\d{2}|\\d{2}\\/\\d{2}\\/\\d{4}|\\d{2}-\\d{2}-\\d{4})\\b/g;\n        const dates = input.match(datePattern);\n\n        if (!dates) {\n            return [];\n        }\n\n        let validDates = [];\n        for (let date of dates) {\n            let d = krakenDateHelpers.toDate(date);\n            if (d && d != null) {\n                validDates.push(d);\n            }\n        }\n\n        return validDates;\n    } catch (error) {\n        return [];\n    }\n}\n\nfunction extractEmails(text) {\n    try {\n        // Check if the input is a string\n        if (typeof text !== \"string\") {\n            throw new Error(\"Input must be a string\");\n        }\n\n        // Regular expression for matching email addresses\n        const emailRegex =\n            /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,7}\\b/g;\n        const emails = text.match(emailRegex);\n\n        // Check if any emails were found\n        if (emails === null) {\n            throw new Error(\"No email addresses found\");\n        }\n\n        return emails;\n    } catch (error) {\n        return `Error: ${error.message}`;\n    }\n}\n\nfunction extractUrls(text) {\n    try {\n        if (typeof text !== \"string\") {\n            throw new Error(\"Input must be a string\");\n        }\n\n        const urlRegex = /https?:\\/\\/[^\\s/$.?#].[^\\s]*/g;\n        const urls = text.match(urlRegex);\n\n        if (!urls) {\n            return [];\n        }\n\n        return urls;\n    } catch (error) {\n        console.error(\"An error occurred:\", error.message);\n        return [];\n    }\n}\n","import { krakenHelpersLight as h} from '../krakenHelpersLight.js'\nimport { KrSimpleAction } from \"./krakenSimpleThingsHelpers.js\";\nimport { krakenTextTable } from \"./krakenTextTable.js\";\n\nclass KrakenLog {\n    /**\n     * KrakenLog\n     * Class containing a series of logs (actions)\n     * Attributes:\n     * -\n     * Methods:\n     *  - log(content, error): addns a new action with given content as name, sets tatus to Completed, unless error then Failed\n     *  - get(filter): provided a json acting as filter, returns actions matching criteria\n     *  - getLactAction(filter): provides last action with given filter\n     */\n    constructor(collection) {\n        this.collection = collection;\n        this.agent = null;\n        this.instrument = null;\n        this.object = null;\n\n        this.actions = [];\n    }\n\n    // -----------------------------------------------------\n    //  System methods\n    // -----------------------------------------------------\n\n    toString() {\n        let records = this.actions.map((x) => x.getHumanRecord());\n\n        let keys = [\"startTime\", \"endTime\",  \"duration\", \"name\", \"actionStatus\"];\n\n        \n        return krakenTextTable(records, keys, keys);\n    }\n\n    get length(){\n        return this.actions.length\n    }\n\n\n    // -----------------------------------------------------\n    //  Attributes \n    // -----------------------------------------------------\n\n    get first(){\n        return this._getFirstAction()\n    }\n\n    get last(){\n        return this._getLastAction()\n    }\n\n\n    // -----------------------------------------------------\n    //  Methods \n    // -----------------------------------------------------\n\n\n    get(filter){\n        return this._getActions(filter)\n    }\n\n    getFirst(filter){\n        return this._getFirstAction(filter)\n    }\n    \n    getLast(filter){\n        return this._getLastAction(filter)\n    }\n\n    log(content, error){\n        return this._addNewLog(content, error)\n    }\n\n    \n    \n    // -----------------------------------------------------\n    //  System methods\n    // -----------------------------------------------------\n\n    _getNewAction() {\n        let action = new KrSimpleAction(\"log\");\n        this.actions.push(action);\n\n        if (h.isNotNull(this.agent)) {\n            action.agent = this.agent;\n        }\n        if (h.isNotNull(this.instrument)) {\n            action.instrument = this.instrument;\n        }\n        if (h.isNotNull(this.object)) {\n            action.object = this.object;\n        }\n\n        return action;\n    }\n\n    _addNewLog(content, error) {\n        let action = this._getNewAction();\n\n        if (h.isNotNull(error)) {\n            action.error = error;\n        } else {\n            action.setCompleted();\n        }\n        if (h.isNotNull(content)) {\n            action.name = content;\n        }\n\n        return action;\n    }\n\n    _getActions(filter) {\n        function sortActions(a, b) {\n            if (a.lt(b)) {\n                return 1;\n            } else if (a.gt(b)) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n        let actions = this.actions;\n        actions.sort(sortActions);\n\n        //\n\n        if (filter) {\n            for (let k of Object.keys(filter)) {\n                actions = actions.filter((x) => x?.[k] == filter[k]);\n            }\n        }\n\n        return actions;\n    }\n\n    _getFirstAction(filter) {\n        let actions = this._getActions(filter);\n        if (h.isNotNull(actions)) {\n            return actions[0];\n        }\n        return null;\n    }\n    \n    _getLastAction(filter) {\n        let actions = this._getActions(filter);\n        if (h.isNotNull(actions)) {\n            return actions[actions.length - 1];\n        }\n        return null;\n    }\n}\n\nexport const krakenLogHelpers = KrakenLog;\n","import { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\nimport { krakenValueHelpers } from './krakenValueHelpers.js'\n\n\n\nlet MAX_WIDTH = 30\n\nexport function krakenTextTable(records, keys, headers){\n\n\n    let content = ''\n    \n    // Duplicate records\n    records = JSON.parse(JSON.stringify(records))\n\n    // If record, convert properties to array\n    if(h.array.isArray(records) == false){\n        if(h.object.isObject(records) == true){\n\n            let values = []\n            let keys = Object.keys(records)\n            for(let k of keys){\n                let v = records[k]\n                v.propertyID = k\n                values.push(v)\n            }\n            records = values\n        } \n    }\n    \n\n    \n    // Build keys from records keys if missing\n    if(h.isNull(keys)){\n        keys = h.array.getKeys(records)\n    }\n   \n    // Build headers from keys if missing\n    if(h.isNull(headers)){\n        headers = keys\n    }\n\n    // Convert values\n    records = krakenValueHelpers.innerValuesToText(records)\n    \n\n    // Get max length for each keys\n    let keysLength = {}\n    let totalLength = 0\n    \n    for(let i=0; i < keys.length; i++){\n\n        let key = keys[i]\n        let header = headers[i]\n    \n        let values = h.array.getValuesForKey(records, key)\n        keysLength[key] = header.length\n\n        for(let v of values){\n            let l = v.length\n            \n            if ( l > keysLength[key] ){\n                keysLength[key] = l\n            }\n        }\n        totalLength += keysLength[key] + 2\n    }\n\n    \n\n    // Build table header\n\n    // Top bar line\n    content += `${''.padEnd(totalLength, '-')}`\n    content +='\\n'\n\n    // Headings\n    for(let i=0; i < keys.length; i++){\n        let key = keys[i]\n        let header = headers[i]\n        content += `${header.padEnd(keysLength[key] + 2, ' ')}`\n    }\n    content +='\\n'\n    \n    for(let key of keys){\n        content += `${''.padEnd(keysLength[key] + 2, '-')}`\n    }\n    content += '\\n'\n\n    \n    // Build table rows\n    for(let record of records){\n        for(let key of keys){\n            \n            let c = String(record?.[key] || '' )\n            if(c.length > MAX_WIDTH){ c = c.slice(0, MAX_WIDTH -3) + '... '}\n            c = c.padEnd(keysLength[key] + 2, ' ')\n            content += `${c}`\n        }\n        content += '\\n'\n    }\n    \n\n    \n    \n    content += `${''.padEnd(totalLength, '-')}`\n    content += '\\n'\n\n    return content\n    \n}","\n\nexport const krakenSimpleHtmlHelpers = {\n\n    card: getHtmlCard,\n    line: getHtmlLine\n    \n}\n\n\n\n\nfunction getHtmlCard(){\n\n\n    let content = `\n        <div class=\"card\" style=\"width: 18rem;\">\n         \n            <img src=\"{{image.contentUrl}}\" class=\"card-img-top\" alt=\"...\" onerror=\"this.style.display='none'\">\n           \n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ name }}</h5>\n                <p class=\"card-text\">{{ text }}</p>\n                {{#potentialAction}}\n                    <a href=\"{{ potentialAction.url}}\" class=\"btn btn-primary\">{{ potentialAction.name}}</a>\n                {{/potentialAction}}\n            </div>\n        </div>\n    \n    `\n    return content\n    \n}\n\n\n\n\nfunction getHtmlLine(){\n\n\n    let content = `\n        <div class=\"row align-items-center\" >\n\n            <div class=\"col-sm-1 \">\n               \n                <img src=\"{{_headingImage}}\" class=\"img-fluid\" alt=\"...\" onerror=\"this.style.display='none'\">\n               \n            </div>\n\n            <div class=\"col-sm-10\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 col-md-4\">\n                            {{ _heading1 }}\n                        </div>\n            \n                        <div class=\"col-sm-12 col-md-3 text-truncate\">\n                            {{ _heading2 }}\n                        </div>\n            \n                        <div class=\"col-sm-12 col-md-3\">\n                            {{ _headingStatus }}\n                        </div>\n            \n                        <div class=\"col-sm-12 col-md-2 text-truncate\">\n                            <a href=\"{{ url }}\">Link</a>\n                        </div>\n                    </div>\n    \n            </div> \n            <div class=\"col-sm-1\">\n                <div class=\"dropdown\">\n                    <button class=\"btn dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\n  <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0\"/>\n</svg>\n                    </button>\n                    <ul class=\"dropdown-menu\">\n                        {{#potentialAction}}\n                        <li><a class=\"dropdown-item\" href=\"{{potentialAction.url}}\">{{potentialAction.name}}</a></li>\n                        {{/potentialAction}}\n                    </ul>\n                </div>\n            </div>\n\n            \n        </div>\n\n    `\n    return content\n\n}\n\n\n\n    ","\n\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\nimport { krakenAnalysisHelpers } from './krakenAnalysisHelpers.js'\n\nexport const krakenTemplateHelpers = {\n    get: renderTemplate,\n    replacePlaceholders: renderTemplate,\n    render: renderTemplate,\n};\n\n\nfunction renderTemplate(template, record){\n\n\n    template = prepareTemplate(template)\n\n    let renderedTemplate1 = _renderTemplate(template, record)\n\n    return renderedTemplate1\n}\n\n\n\nfunction _renderTemplate(template, record){\n\n    /**\n     * beforeContent: the content before the opening tag\n     * afterContent: the content after the closing tag\n     * templateContent: the content in between the tags\n     * valueContent: the content replacing the templateContent with actual values\n     */\n\n\n    let content = template\n\n\n    // Handle iterations\n    let tag = getIterationTag(content)\n\n    while(h.isNotNull(tag)){\n\n        let valueContent = ''\n        let values = h.dot.get(tag.propertyID, record)\n\n        for(let value of h.toArray(values)){\n\n            let tempRecord = JSON.parse(JSON.stringify(record))\n            h.dot.set(tempRecord, tag.propertyID, value)\n            valueContent += _renderTemplate(tag.contentWithin, tempRecord)\n        }\n        content = String(tag.contentBefore) + String(valueContent) + String(tag.contentAfter)\n\n        tag = getIterationTag(content)\n    }\n\n\n    // Handle placeholders \n    tag = getPlaceholderTag(content)\n    while(h.isNotNull(tag)){\n\n        let value = h.dot.get(tag.propertyID, record) \n\n\n        if(h.isNotNull(tag.commandName) && h.isNotNull(tag.commandPropertyID)){\n\n            value = krakenAnalysisHelpers?.[tag.commandName](value, tag.commandPropertyID);\n        } \n\n        if(h.isNull(value)){ value = ''}\n        content = String(tag.contentBefore) + String(value) + String(tag.contentAfter)\n        tag = getPlaceholderTag(content)\n    }\n\n    return content\n\n}\n\n\n\n\nfunction prepareTemplate(template){\n\n\n    while(template.includes('{{ ')){\n        template = template.replaceAll('{{ ', '{{')\n    }\n    while(template.includes(' }}')){\n        template = template.replaceAll(' }}', '}}')\n    }\n\n    return template\n\n}\n\n\nfunction getIterationTag(template){\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{#')){ return null }\n    if(!template.includes('{{/')){ return null }\n\n    let result = {\n        \"type\": 'iteration',\n        'propertyID': null,\n        'contentBefore': '',\n        'contentWithin': '',\n        'contentAfter': ''\n    }\n\n    let tagStartPositionStart = template.lastIndexOf('{{#')\n    let tagStartPositionEnd = template.indexOf('}}', tagStartPositionStart)\n    let tagEndPositionStart = template.indexOf('{{/', tagStartPositionEnd)\n    let tagEndPositionEnd = template.indexOf('}}', tagEndPositionStart)\n\n    if(tagStartPositionStart == -1 || tagStartPositionEnd == -1 || tagEndPositionStart == -1 || tagEndPositionEnd == -1){ return null }\n\n    result.propertyID = template.slice(tagStartPositionStart + 3, tagStartPositionEnd)\n    result.contentBefore = template.slice(0, tagStartPositionStart)\n    result.contentAfter = template.slice(tagEndPositionEnd + 2)\n    result.contentWithin = template.slice(tagStartPositionEnd + 2, tagEndPositionStart -1)\n\n    return result\n}\n\nfunction getPlaceholderTag(template){\n\n    if(h.isNull(template)) { return null }\n    if(!template.includes('{{')){ return null }\n    if(!template.includes('}}')){ return null }\n\n    let result = {\n        \"type\": 'placeholder',\n        'propertyID': null,\n        'contentBefore': '',\n        'contentWithin': '',\n        'contentAfter': '',\n        'commandName': null,    \n        'commandPropertyID': null\n    }\n\n    let tagPositionStart = template.lastIndexOf('{{')\n    let tagPositionEnd = template.indexOf('}}', tagPositionStart)\n\n    if(tagPositionStart == -1 || tagPositionEnd == -1 ){ return null }\n\n    result.propertyID = template.slice(tagPositionStart + 2, tagPositionEnd)\n    result.contentBefore = template.slice(0, tagPositionStart)\n    result.contentAfter = template.slice(tagPositionEnd + 2)\n\n\n    // Separate commands from property ID\n    let propertyString = result.propertyID\n    propertyString.replaceAll('||', '|')\n    let commandNameStartPosition = propertyString.indexOf('|')\n    let commandPropertyIDPosition = result.propertyID.indexOf(':', commandNameStartPosition + 1)\n\n    if(commandNameStartPosition == -1 ){ \n        return result \n    }\n\n    result.propertyID = propertyString.slice(0, commandNameStartPosition)\n    result.commandName = propertyString.slice(commandNameStartPosition + 1, commandPropertyIDPosition)\n    result.commandPropertyID = propertyString.slice(commandPropertyIDPosition + 1)\n\n    result.propertyID = result.propertyID.trim()\n    result.commandName = result.commandName.trim()\n    result.commandPropertyID = result.commandPropertyID.trim()\n\n    return result\n}\n\n\n","export class KrCache {\n    constructor() {\n        this._db = {};\n\n        this._maxArgsLength = 0\n\n    }\n\n\n    getAll(argsLength){\n        // Retrieves all values from cache\n        \n        function getValues(db, maxArgsLength, l=0){\n\n            let results = []\n\n            // Stop if reached depth\n            if(l == maxArgsLength){\n                results.push(db)\n                return results\n            }\n\n            // Iterate through paths\n            for(let k of Object.keys(db)){\n                results = results.concat(getValues(db[k], maxArgsLength, l + 1))\n            }\n            return results\n\n        }\n\n        argsLength = argsLength || this._maxArgsLength\n        let results = getValues(this._db, argsLength)\n\n        return results\n        \n    }\n\n    \n\n    set(args){\n        // Set a value in cache. First arguments is the path,  Last argument is the actual value\n        \n\n        let path = this._db\n\n        let i\n\n        let a = arguments.length -1\n\n        \n        for(i=0; i < arguments.length -2; i++){            \n\n            if(!path[arguments[i]]){\n                path[arguments[i]] = {}\n            }\n            path = path[arguments[i]]\n        }\n\n        if(this._maxArgsLength < a){\n            this._maxArgsLength = a\n        }\n        \n        path[arguments[a-1]] = arguments[a]\n\n        return\n    }\n\n    get(args){\n         // Get a value in cache.\n        let a = arguments.length -1\n        let i\n        let path = this._db\n        \n        for(i=0; i < arguments.length -1; i++){\n\n            \n            path = path?.[ arguments[i]]\n            if(!path){ return null }\n        }\n\n        return path[arguments[a]] \n    }\n\n    \n}\n","\nimport { krakenTextTable } from './krakenTextTable.js'\n\n\nexport class KrakenTimer {\n\n    constructor(name) {\n\n        this.name = name\n        this.milestones = []\n\n        this.start()\n       \n    }\n\n    getMilestone(name){\n        for(let m of this.milestones){\n            if (m.name == name) { return m }\n        }\n        return undefined\n    }\n    \n    addMilestone(name){\n        // Adds a milestone\n\n        if (!name || name == null){\n            name = 'break ' + String(this.milestones.length)\n        }\n        \n        let milestone = {\n            \"@type\": \"Event\",\n            \"@id\": String(crypto.randomUUID()),\n            \"name\": name,\n            \"endTime\": new Date()\n        }\n        this.milestones.push(milestone)\n    }\n\n    break(name){\n        this.addMilestone(name)\n    }\n\n    start(){\n        this.milestones = []\n        this.addMilestone('start')\n    }\n\n    end(){\n       \n        this.addMilestone('end')\n    }\n\n    \n    getDuration(startMilestone, endMilestone){\n\n        if(!endMilestone || endMilestone == null){\n            endMilestone = startMilestone\n            startMilestone = 'start'\n        }\n        if(!startMilestone){\n            startMilestone = 'start'\n            endMilestone = 'end'\n        }    \n\n        let startTime = this.getMilestone('start')?.endTime\n        let endTime = this.getMilestone('end')?.endTime ?? new Date()\n\n        let duration = (endTime - startTime) / 1000\n\n        return duration\n    \n        \n    }\n\n    get duration(){\n        return this.getDuration()\n    }\n\n    getResults(){\n\n        let results = []\n\n        // Set first milestone to 0\n        this.milestones[0].duration = {\n            \"@type\": \"QuantitativeValue\",\n            \"@id\": String(crypto.randomUUID()),\n            \"unitCode\": \"SEC\",\n            \"unitText\": \"s\",\n            'value': 0\n        }            \n        \n        for(let i=1; i< this.milestones.length -1; i++){\n            let currentMilestone = this.milestones[i]\n            let previousMilestone = this.milestones[i-1]\n            let duration = (currentMilestone.endTime - previousMilestone.endTime) / 1000\n            currentMilestone.duration = {\n                \"@type\": \"QuantitativeValue\",\n                \"@id\": String(crypto.randomUUID()),\n                \"unitCode\": \"SEC\",\n                \"unitText\": \"s\",\n                'value': duration\n            }            \n            results.push(currentMilestone)\n        }\n\n         // Add milestone for total\n\n        if(this.milestones.length > 2){\n            let endMilestone = {\n                \"@type\": \"Event\",\n                \"@id\": String(crypto.randomUUID()),\n                \"name\": \"Total\",\n                \"duration\": {\n                        \"@type\": \"QuantitativeValue\",\n                        \"@id\": String(crypto.randomUUID()),\n                        \"unitCode\": \"SEC\",\n                        \"unitText\": \"s\",\n                        'value': this.duration\n                    }            \n            }\n            results.push(endMilestone)\n        }\n        \n        return results\n        \n    }\n\n    console(){\n\n        \n        let results = this.getResults()\n\n        let keys = ['name', 'duration']\n        let headers = ['Timer milestone', 'Duration']\n\n        let content = krakenTextTable(results, keys, headers)\n\n        console.log(content)\n    }\n    \n}","\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\nimport { KrCache } from '../helpers/krakenCache.js'\nimport { krakenThingHelpers } from '../helpers/krakenThingHelpers.js'\n\nimport { KrElementDb } from '../helpers/krakenElementDbHelpers.js'\n\nimport { krakenElementThingHelpers } from '../helpers/krakenElementThingHelpers.js'\n\nimport { KrThingDb } from '../helpers/krakenThingDbHelpers.js'\n\nimport { krakenTemplateLiveHelpers} from '../helpers/krakenTemplateLiveHelpers.js'\n\nh.elementThing = krakenElementThingHelpers\nh.thing = krakenThingHelpers\n\n\nexport class KrElementOrchestrator {\n    constructor(element){\n\n        this._baseElement = element\n        this._elementDB = new KrElementDb()\n        this._recordDb = new KrThingDb()\n        this._HTMLtemplates = new KrCache()\n        \n        this._initObject()\n        \n    }\n\n\n    // -----------------------------------------------------\n    //  Initialization \n    // -----------------------------------------------------\n\n    _initObject(){\n\n        if(h.isNull(this._baseElement)){ return }\n\n        // Init element\n\n        this._baseElement.innerHTML = krakenTemplateLiveHelpers.get(this._baseElement.innerHTML)   \n        \n        h.elementThing.init(this._baseElement)\n\n        // Get current thing\n        let currentThing = h.elementThing.current.thing(this._baseElement)\n        if(h.isNotNull(currentThing)){\n            this.setElement(currentThing)\n            this._initTemplates(currentThing)\n        } else { \n            let elements = h.elementThing.children.things(this._baseElement) || []\n            for(let t of elements){\n                this.setElement(t)\n                this._initTemplates(t)\n            }\n        }\n        \n\n       \n        \n        return\n    }\n\n    _initTemplates(element){\n\n        if(h.isNull(element)){ return }\n        \n        // Store property templates\n        let propertyElements =  h.elementThing.children.properties(element)\n        if(h.isNull(propertyElements)){ return }\n        \n        for(let propertyElement of propertyElements){\n            \n            let body = h.elementThing.parts.body.get(propertyElement)\n            if(h.isNull(body)){ return }\n            let content = body.innerHTML\n            this._HTMLtemplates.set(propertyElement.id, content)\n        }\n    }\n\n\n    // -----------------------------------------------------\n    //  Attributes \n    // -----------------------------------------------------\n\n    get baseElement(){\n        return this._baseElement\n    }\n    set baseElement(value){\n        this._baseElement = value\n        this._initObject()\n    }\n\n    get record(){\n        return h.elementThing.record.get(this.element)\n    }\n\n    set record(value){\n        for(let element of this._elementDB.getAll()){\n            if(h.isNull(element.getAttribute('data-record-type'))){\n                h.elementThing.record.set(element, value)\n            }\n        }\n        this.setRecord(value)\n    }\n\n    get records(){\n        return this._recordDb.getAll()\n    }\n\n    set records(value){\n        this.setRecord(value)\n    }\n\n    get element(){\n        return h.elementThing.top.thing(this._baseElement)\n    }\n\n    set element(value){\n        this._baseElement = value\n        this._initObject()\n    }\n\n    get elements(){\n        return this._elementDB.getAll()\n    }\n\n    set elements(value){\n        this.setElement(value)\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Records \n    // -----------------------------------------------------\n\n    setRecord(record){\n\n\n        let thing\n        if(record.record){\n            thing = record\n            record = thing.record\n        }\n        \n        let oldRecord = this._recordDb.get(record)\n\n        // If record is same, don't update\n        if(h.thing.isEqual(oldRecord, record)){\n            return \n        }\n\n        // Update record\n        this._recordDb.set(record)\n\n        // Update elements\n        this.updateAllElementsByRecord(record)\n\n        // Add addEventListener if appropriate\n        if(thing){\n            thing.addEventListener('all', event =>{\n                this.updateAllElementsByRecord(thing.record)\n            })\n        } \n\n        // Add sub records\n        let subRecords = h.thing.extractThings(record)\n        for(let subRecord of subRecords){\n            this.setRecord(subRecord)\n        }\n    }\n\n    \n    // -----------------------------------------------------\n    //  Elements \n    // -----------------------------------------------------\n\n    setElement(element){\n\n        // Set element\n        this._elementDB.set(element)\n        \n        // Store sub elements\n        let thingElements = h.elementThing.children.things(element)\n        for(let thingElement of thingElements){\n            this.setElement(thingElement)\n        }\n        return true\n    }\n    \n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    updateAllElementsByRecord(record){\n\n        let elements = this._elementDB.getElementsByRecord(record)\n\n        if(h.isNull(elements)){ return false }\n        \n        for(let element of elements){\n            this.updateElement(element, record)\n        }\n        return \n    }\n    \n    updateElement(elementID, record){\n\n        let element = this._elementDB.get(elementID)\n        if(h.isNull(element)){ return false }\n\n        // if not record\n        if(h.isNull(record)){\n            record = this._recordDb.get(element)\n            record = record?.record || record\n        }\n\n        // Check if properties\n        let propertyElements = h.elementThing.children.properties(element)\n\n        if(propertyElements.length > 0){\n            for(let propertyElement of propertyElements){\n                this.updatePropertyElement(propertyElement, record)\n            }            \n        } else {\n             h.elementThing.update.thing(element, record)\n        }\n\n        return true\n\n    }\n\n    updatePropertyElement(propertyElement, record){\n        \n        \n        let template = this._HTMLtemplates.get(propertyElement.id)\n        let propertyID = propertyElement.getAttribute('data-propertyID')\n        h.elementThing.update.property(propertyElement, record?.[propertyID], template)\n\n\n        // Get thing under values and update\n        let childValues = h.elementThing.children.values(propertyElement)\n        let childthings = []\n        for(let childValue of childValues){\n            let t = h.elementThing.children.things(childValue)\n            if(h.isNotNull(t)){ childthings = childthings.concat(t)}\n        }\n\n        for(let childthing of childthings){\n            this.setElement(childthing)\n            this.updateElement(childthing)\n        }\n\n        return\n        \n    }\n    \n}","\nimport { krakenHelpersLight as h} from '../krakenHelpersLight.js'\n\n\nimport { KrCache } from './krakenCache.js';\n\n\n// -----------------------------------------------------\n//  Elements DB \n// -----------------------------------------------------\n\nexport class KrElementDb {\n    constructor(){\n        this._db_by_id = new KrCache()\n        this._db_by_record = new KrCache()\n    }\n\n    get(elementID){\n        return this.getElement(elementID)\n    }\n\n    getElement(elementID){\n        elementID = elementID?.id || elementID\n        return this._db_by_id.get(elementID)\n    }\n\n    getElementsByRecord(record_type, record_id){\n\n        record_id = record_type?.record_id || record_type?.[\"@id\"] || record_id\n        record_type = record_type?.record_type || record_type?.[\"@type\"] || record_type\n        if(h.isNull(record_type) || h.isNull(record_id)){ return null }\n        \n        let elements = this._searchElements({'data-record-type': record_type, 'data-record-id': record_id})\n        return elements\n    }\n\n    getAll(){\n        return this._db_by_id.getAll()\n    }\n    \n    set(element){\n        this._setElementToDbId(element)\n        this._setElementToDbRecord(element)\n    }\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    _getElementsById(elementIDs){\n\n        let elements = []\n        for(let elementID of elementIDs){\n            let value = this._getElemetById(elementID)\n            if(h.isNotNull(value)){ elements.push(value)}\n        }\n        return elements\n        \n    }\n\n    _getElemetById(elementID){\n        return this._db_by_id.get(elementID)\n    }\n\n    _searchElements(conditions){\n\n        let elements = this._db_by_id.getAll()\n        let results = []\n        for(let e of elements){\n            if(h.isNull(e)){ continue }\n            if(h.element.meetsConditions(e, conditions)){\n                results.push(e)\n            }\n        }\n        return results\n    }\n\n\n    _setElementToDbId(element){\n        if(h.isNull(element)){ return false }\n        h.element.setId(element)\n        this._db_by_id.set(element.id, element)\n        return true\n    }\n\n    _setElementToDbRecord(element){\n        if(h.isNull(element)){ return false }\n        h.element.setId(element)\n        let record_type = element.getAttribute('data-record-type')\n        let record_id = element.getAttribute('data-record-id')\n        if(h.isNull(record_type)){ return false }\n        if(h.isNull(record_id)){ return false }    \n        let currentIds = this._db_by_record.get(record_type, record_id)\n        let newIds = h.array.mergeUnique(currentIds, element.id)\n        this._db_by_record.set(record_type, record_id, newIds)\n        return true\n    }\n}\n\n\n\n","import { KrCache } from \"./krakenCache.js\";\nimport { krakenHelpersLight as h } from \"../krakenHelpersLight.js\";\n\nexport class KrThingDb{\n\n    constructor(){\n\n        this._db = new KrCache()\n    }\n\n    get(record_type, record_id){\n\n        record_id = record_type?.record_id || record_type?.['@id'] || record_type?.getAttribute('data-record-id') || record_id\n        record_type = record_type?.record_type || record_type?.['@type'] || record_type?.getAttribute('data-record-type') || record_type\n        \n        if(h.isNull(record_type) || h.isNull(record_id)){ return null }\n\n        return this._db.get(record_type, record_id)\n    }\n\n    set(record){\n\n        let record_id = record.record_id || record?.['@id'] \n        let record_type = record?.record_type || record?.['@type'] \n\n        if(h.isNull(record_type) || h.isNull(record_id)){ return null }\n\n        return this._db.set(record_type, record_id, record)\n        \n    }\n\n    getAll(){\n        return this._db.getAll()\n    }\n}"],"names":[],"version":3,"file":"main.js.map"}