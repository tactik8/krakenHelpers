{"mappings":"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","sources":["src/index.js","src/krakenHelpers/krakenHelpers.js","src/krakenHelpers/helpers/krakenTimer.js","src/krakenHelpers/helpers/krakenTextTable.js","src/krakenHelpers/helpers/krakenArrayHelpers.js","src/krakenHelpers/helpers/krakenNumberHelpers.js","src/krakenHelpers/helpers/krakenObjectHelpers.js","src/krakenHelpers/helpers/krakenDateHelpers.js","src/krakenHelpers/helpers/krakenThingHelpers.js","src/krakenHelpers/helpers/krakenValueHelpers.js","src/krakenHelpers/helpers/krakenUrlHelpers.js","src/krakenHelpers/helpers/krakenJsonHelpers.js"],"sourcesContent":["\n\nimport {krakenHelpers as krakenHelpersObject} from './krakenHelpers/krakenHelpers.js'\n\nexport const krakenHelpers = krakenHelpersObject","\nimport { KrakenTimer } from './helpers/krakenTimer.js'\n\nimport { krakenDateHelpers } from './helpers/krakenDateHelpers.js'\nimport { krakenArrayHelpers } from './helpers/krakenArrayHelpers.js'\nimport { krakenThingHelpers } from './helpers/krakenThingHelpers.js'\nimport { krakenObjectHelpers } from './helpers/krakenObjectHelpers.js'\nimport { krakenTextTable } from './helpers/krakenTextTable.js'\n\nimport { krakenUrlHelpers } from './helpers/krakenUrlHelpers.js'\n\nimport { krakenJsonHelpers } from './helpers/krakenJsonHelpers.js'\n\nkrakenJsonHelpers\n\nexport const krakenHelpers = {\n    array: krakenArrayHelpers,\n    date: krakenDateHelpers,\n    json: krakenJsonHelpers,\n    object: krakenObjectHelpers,\n    textTable: krakenTextTable,\n    thing: krakenThingHelpers,\n    Timer: KrakenTimer,\n    url: krakenUrlHelpers\n}","\nimport { krakenTextTable } from './krakenTextTable.js'\n\n\nexport class KrakenTimer {\n\n    constructor(name) {\n\n        this.name = name\n        this.milestones = []\n\n        this.start()\n       \n    }\n\n    getMilestone(name){\n        for(let m of this.milestones){\n            if (m.name == name) { return m }\n        }\n        return undefined\n    }\n    \n    addMilestone(name){\n        // Adds a milestone\n\n        if (!name || name == null){\n            name = 'break ' + String(this.milestones.length)\n        }\n        \n        let milestone = {\n            \"@type\": \"Event\",\n            \"@id\": String(crypto.randomUUID()),\n            \"name\": name,\n            \"endTime\": new Date()\n        }\n        this.milestones.push(milestone)\n    }\n\n    break(name){\n        this.addMilestone(name)\n    }\n\n    start(){\n        this.milestones = []\n        this.addMilestone('start')\n    }\n\n    end(){\n       \n        this.addMilestone('end')\n    }\n\n    \n    getDuration(startMilestone, endMilestone){\n\n        if(!endMilestone || endMilestone == null){\n            endMilestone = startMilestone\n            startMilestone = 'start'\n        }\n        if(!startMilestone){\n            startMilestone = 'start'\n            endMilestone = 'end'\n        }    \n\n        let startTime = this.getMilestone('start')?.endTime\n        let endTime = this.getMilestone('end')?.endTime ?? new Date()\n\n        let duration = (endTime - startTime) / 1000\n\n        return duration\n    \n        \n    }\n\n    get duration(){\n        return this.getDuration()\n    }\n\n    getResults(){\n\n        let results = []\n\n        // Set first milestone to 0\n        this.milestones[0].duration = {\n            \"@type\": \"QuantitativeValue\",\n            \"@id\": String(crypto.randomUUID()),\n            \"unitCode\": \"SEC\",\n            \"unitText\": \"s\",\n            'value': 0\n        }            \n        \n        for(let i=1; i< this.milestones.length -1; i++){\n            let currentMilestone = this.milestones[i]\n            let previousMilestone = this.milestones[i-1]\n            let duration = (currentMilestone.endTime - previousMilestone.endTime) / 1000\n            currentMilestone.duration = {\n                \"@type\": \"QuantitativeValue\",\n                \"@id\": String(crypto.randomUUID()),\n                \"unitCode\": \"SEC\",\n                \"unitText\": \"s\",\n                'value': duration\n            }            \n            results.push(currentMilestone)\n        }\n\n         // Add milestone for total\n\n        if(this.milestones.length > 2){\n            let endMilestone = {\n                \"@type\": \"Event\",\n                \"@id\": String(crypto.randomUUID()),\n                \"name\": \"Total\",\n                \"duration\": {\n                        \"@type\": \"QuantitativeValue\",\n                        \"@id\": String(crypto.randomUUID()),\n                        \"unitCode\": \"SEC\",\n                        \"unitText\": \"s\",\n                        'value': this.duration\n                    }            \n            }\n            results.push(endMilestone)\n        }\n        \n        return results\n        \n    }\n\n    console(){\n\n        \n        let results = this.getResults()\n\n        let keys = ['name', 'duration']\n        let headers = ['Timer milestone', 'Duration']\n\n        let content = krakenTextTable(results, keys, headers)\n\n        console.log(content)\n    }\n    \n}","\nimport { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenValueHelpers } from './krakenValueHelpers.js'\n\n\n\nlet MAX_WIDTH = 30\n\nexport function krakenTextTable(records, keys, headers){\n\n\n    let content = ''\n    \n    // Duplicate records\n    records = JSON.parse(JSON.stringify(records))\n\n    // Ensure array\n    records = krakenArrayHelpers.toArray(records)\n    \n    // Build keys from records keys if missing\n    if(!keys || keys == null){\n        keys = krakenArrayHelpers.getKeys(records)\n    }\n   \n    // Build headers from keys if missing\n    if(!headers || headers == null){\n        headers = keys\n    }\n\n    // Convert values\n    records = krakenValueHelpers.valuesToText(records)\n\n    // Get max length for each keys\n    let keysLength = {}\n    let totalLength = 0\n    \n    for(let i=0; i < keys.length; i++){\n\n        let key = keys[i]\n        let header = headers[i]\n    \n        let values = krakenArrayHelpers.getValuesForKey(records, key)\n        keysLength[key] = header.length\n\n        for(let v of values){\n            let l = v.length\n            \n            if ( l > keysLength[key] ){\n                keysLength[key] = l\n            }\n        }\n        totalLength += keysLength[key] + 2\n    }\n\n    \n\n    // Build table header\n\n    // Top bar line\n    content += `${''.padEnd(totalLength, '-')}`\n    content +='\\n'\n\n    // Headings\n    for(let i=0; i < keys.length; i++){\n        let key = keys[i]\n        let header = headers[i]\n        content += `${header.padEnd(keysLength[key] + 2, ' ')}`\n    }\n    content +='\\n'\n    \n    for(let key of keys){\n        content += `${''.padEnd(keysLength[key] + 2, '-')}`\n    }\n    content += '\\n'\n\n    \n    // Build table rows\n    for(let record of records){\n        for(let key of keys){\n            let c = record?.[key] || ''\n            if(c.length > MAX_WIDTH){ c = c.slice(0, MAX_WIDTH -3) + '... '}\n            c = c.padEnd(keysLength[key] + 2, ' ')\n            content += `${c}`\n        }\n        content += '\\n'\n    }\n    \n\n    \n    \n    content += `${''.padEnd(totalLength, '-')}`\n    content += '\\n'\n\n    return content\n    \n}","import { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\n\nexport const krakenArrayHelpers = {\n\n    isArray: validateArray,\n    validateArray: validateArray,\n    toArray: ensureArray,\n    ensureArray: ensureArray,\n    getKeys: getKeys,\n    keys: getKeys,\n    getValuesForKey: getValuesForKey,\n    getNumbersForKey: getNumbersForKey,\n    getMax: getMax,\n    getMin: getMin,\n    getN: getN,\n    getSum: getSum,\n    getAverage: getAverage,\n    getStandardDeviation: getStandardDeviation,\n    stddev: getStandardDeviation,\n    getMaxRecord: getMax,\n    getMinRecord: getMin,\n    getNRecord: getN,\n    getSumRecord: getSum,\n    getAverageRecord: getAverage,\n    getStandardDeviationRecord: getStandardDeviation,\n    getStatsRecord: getStatsRecord\n    \n}\n\n\nfunction validateArray(value){\n\n    if(Array.isArray(value)){ return true }\n    return false\n    \n}\n\n\n\nfunction ensureArray(value) {\n\n    if(!value || value == null || value == {}){ return [] }\n\n    if (validateArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n\nfunction toText(value) {\n\n    if(validateArray(value) == false){ return undefined }\n\n    let result = `[${value.length}]`\n    return result\n    \n}\n\nfunction getKeys(value){\n    if(validateArray(value) == false){ return undefined }\n    let keys = []\n    for(let v of value){\n        for(let k of Object.keys(v)){\n            if(!keys.includes(k)){\n                keys.push(k)\n            }\n        }\n    }\n    keys.sort()\n    return keys\n}\n\n\n// -----------------------------------------------------\n//  Columns focused methods \n// -----------------------------------------------------\n\n\nfunction getValuesForKey(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let results = []\n    for(let v of value){\n        let v1 = v?.[key] \n        if(v1){\n            results.push(v1)\n        }\n    }\n    return results\n    \n}\n\nfunction getNumbersForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    value = ensureArray(value)\n    \n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        let newItem = krakenNumberHelpers.toNumber(item)\n        if(krakenNumberHelpers.isNumber(newItem) == true){\n            results.push(newItem)\n        }\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            let quantItem = krakenNumberHelpers.toNumber(item?.value)\n            if(krakenNumberHelpers.isNumber(quantItem) == true){\n                results.push(quantItem)\n            }\n        }\n    }\n    return results    \n}\n\nfunction getUnitCodesForKey(value, key){\n    // Returns array of numbers only for a given k\n\n    let items = getValuesForKey(value, key)\n    let results = []\n    for(let item of items){\n        if(item?.['@type'] && item?.['@type'] == 'QuantitativeValue'){\n            results.push(item.unitCode)\n        }\n    }\n    return results    \n}\n\nfunction getMax(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n    \n    let result = Math.max(...items)\n\n    return result\n    \n}\n\nfunction getMaxRecord(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getMax(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('maxValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\n\nfunction getMin(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = Math.min(...items)\n\n    return result\n\n}\n\nfunction getMinRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getMin(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('minValue', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getN(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = items.length\n\n    return result\n    \n}\n\nfunction getNRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getN(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('count', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getSum(value, key){\n    \n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    let result = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    return result\n\n}\n\nfunction getSumRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getSum(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('sum', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\nfunction getAverage(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let sumAll = items.reduce((partialSum, a) => partialSum + a, 0);\n\n    let result = sumAll / items.length\n\n    return result\n}\n\nfunction getAverageRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getAverage(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n    \n    return getStatsRecord('average', key, result, unitCode)\n\n     //count, median, marginOfError, maxValue, minValue\n}\n\n\nfunction getStandardDeviation(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let items = getNumbersForKey(value, key)\n\n    if(items.length == 0){ return 0 }\n\n    let n = items.length\n    let mean = items.reduce((a, b) => a + b) / n\n    let result =  Math.sqrt(items.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n\n    return result\n}\n\nfunction getStandardDeviationRecord(value, key){\n\n    value = ensureArray(value)\n    if(validateArray(value) == false){ return undefined }\n\n    let result = getStandardDeviation(value, key)\n    let unitCode = getUnitCodesForKey(value, key)\n\n    return getStatsRecord('marginOfError', key, result, unitCode)\n\n}\n\n// -----------------------------------------------------\n//  Statistical record \n// -----------------------------------------------------\n\nfunction getStatsRecord(statType, property, value, unitCode){\n\n\n    let record = {\n        \"@context\": \"https://schema.org/\",\n        \"@id\": \"Observation_Median_Age_Person_Female_SanAntonio_TX_2014\",\n        \"@type\": \"Observation\",\n        \"name\": name,\n        \"variableMeasured\": {\n            \"@context\": \"https://schema.org/\",\n            \"@type\": \"StatisticalVariable\",\n            \"@id\": \"Median_Height_Person_Female\",\n            \"name\": statType,\n            \"measuredProperty\": {\"@id\": property },\n            \"statType\": {\"@id\": statType},\n            \"constrainingProperty\": []\n        },\n        \"observationAbout\": {},\n        \"value\": value,\n        \"unitCode\": unit\n    }\n\n    return record\n\n}","\n\nexport const krakenNumberHelpers = {\n\n    isNumber: isNumber,\n    toNumber: toNumber,\n    toText: toText\n}\n\n\nfunction isNumber(value){\n    \n    return typeof value === 'number';\n    \n}\n\nfunction toNumber(value){\n\n    if(typeof value === 'number') { return value }\n    \n    try { \n        value = Number(value)\n        return value\n    } catch {\n\n    }\n\n    return undefined\n}\n\n\nfunction toText(value, rounding){\n\n    value = toNumber(value)\n\n    if(!value || value == null) { return undefined }\n\n    if(rounding | rounding != null){\n        value = Math.round(value)\n    }\n\n    return String(value)\n    \n}\n\n","\n\nexport const krakenObjectHelpers = {\n\n    isObject: isObject,\n    getKeys: getKeys,\n    keys: getKeys\n    \n}\n\n\nfunction isObject(value){\n\n    return typeof value === 'object' && !Array.isArray(value) && value !== null\n}\n\nfunction getKeys(value){\n\n    if(isObject(value) == false) { return undefined }\n\n    let keys = Object.keys(value)\n    keys.sort()\n    return keys\n}\n\n\n","\n\n\nexport const krakenDateHelpers = {\n\n    isDate: validateDate,\n    validateDate: validateDate,\n    toText: toText,\n    toDate: toDate,\n    duration: getDuration,\n    getDuration: getDuration,\n    durationRecord: getDurationRecord,\n    getDurationRecord: getDurationRecord\n    \n}\n\n\nfunction validateDate(value){\n    if(value instanceof Date) { return true }\n    return false\n}\n\n\nfunction toText(value){\n\n    if(validateDate(value) == false){ return undefined }\n\n    let formattedDate = value.toISOString().split('.')[0]\n    formattedDate.replace('T', ', ')\n\n    return formattedDate\n}\n\n\nfunction toDate(value){\n\n    if(validateDate(value) == true){ return value }\n    \n    try{\n        var d = new Date(value);\n        \n        if(d.month && d.month != null){ return d } else { return undefined }\n    } catch (error){\n        return undefined\n    }\n}\n\n\nfunction getDuration(date1, date2){\n\n    if(validateDate(date1) == false){ return undefined }\n    if(validateDate(date2) == false){ return undefined }\n\n    let startDate \n    let endDate\n    \n    if(date1 < date2){\n        startDate = date1\n        endDate = date2\n    } else {\n        startDate = date2\n        endDate = date1\n    }\n\n    let duration = (endDate - startDate) / 1000\n    return duration\n    \n}\n\nfunction getDurationRecord(date1, date2){\n\n    let duration = getDuration(date1, date2)\n\n    let result = {\n        \"@type\": \"QuantitativeValue\",\n        \"@id\": String(crypto.randomUUID()),\n        \"unitCode\": \"SEC\",\n        \"unitText\": \"s\",\n        'value': duration\n    }            \n\n    \n    return result\n\n}\n\n","\n\nexport const krakenThingHelpers = {\n\n    isValid: validateThing,\n    isThing: validateThing,\n    validateThing: validateThing,\n    getRefRecord: getRefRecord,\n    ref: getRefRecord,\n    toText: toText\n    \n}\n\n\nfunction validateThing(value){\n\n    if(!value['@type']){ return false }\n    return true\n}\n\nfunction getRefRecord(value){\n\n    if(validateThing(value) == false ) { return undefined }\n    \n    let result = {\n        \"@type\": value['@type'],\n        \"@id\": value['@id']\n    }\n    return result\n    \n}\n\nfunction toText(value){\n\n    if(validateThing(value) == false ) { return undefined }\n\n    let record_type = value['@type']\n    let record_id = value['@id']\n\n    \n    if(record_type == 'QuantitativeValue'){\n        \n        let result = `${value['value']} ${value['unitText'] || value['unitCode'] || ''}`\n        return result\n    }\n\n    if(record_type == 'Person'){\n\n        if(value['givenName'] && value['familyName']){\n            return `${value['givenName']} ${value['familyName']}`\n        }\n    }\n\n    if(record_type == 'PostalAddress'){\n\n        \n    }\n    \n    \n    let result = `${value['@type']}/${value['@id']}`\n      \n    return result\n\n}","import { krakenArrayHelpers } from './krakenArrayHelpers.js'\n\nimport { krakenDateHelpers } from './krakenDateHelpers.js'\nimport { krakenThingHelpers } from './krakenThingHelpers.js'\nimport { krakenNumberHelpers } from './krakenNumberHelpers.js'\nimport { krakenObjectHelpers } from './krakenObjectHelpers.js'\n\n\nexport const krakenValueHelpers = {\n\n    toText: toText,\n    getType: getType,\n    innerValuesToText: innerValuesToText,\n    valuesToText: innerValuesToText\n}\n\nfunction toText(value) {\n    \n    if (!value || value == null || value == [] || value == {}) { return '' }\n\n    if (krakenThingHelpers.isThing(value)) {\n        return krakenThingHelpers.toText(value)\n    } else if (krakenDateHelpers.isDate(value)) {\n        return krakenDateHelpers.toText(value)\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return krakenArrayHelpers.toText(value)\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return krakenNumberHelpers.toText(value)\n    } else {\n        return String(value)\n    }\n}\n\n\nfunction innerValuesToText(value){\n    \n    if (krakenArrayHelpers.isArray(value)) {\n        let result = []\n        for(let v of value){\n            result.push(innerValuesToText(v))\n        }\n        return result\n    } \n\n    if(krakenObjectHelpers.isObject(value)){\n\n        let result = {}\n        for(let k of krakenObjectHelpers.keys(value)){\n            result[k] = toText(value[k])\n        }\n        return result \n    }\n    return toText(value)\n}\n\n\nfunction getType(value) {\n\n    if (krakenThingHelpers.isThing(value)) {\n        return 'thing'\n    } else if (krakenDateHelpers.isDate(value)) {\n        return 'datetime'\n    } else if (krakenArrayHelpers.isArray(value)) {\n        return 'array'\n    } else if (krakenNumberHelpers.isNumber(value)) {\n        return 'number'\n    } else {\n        return 'string'\n    }\n\n}","\n\nexport const krakenUrlHelpers = {\n\n    getDomain: getDomain,\n    domain: getDomain,\n    \n}\n\nfunction isUrl(value){\n\n    if(!value || value == null){ return false }\n\n    \n    \n}\n\nfunction getDomain(value){\n\n    \n    \n}","\n\n\nexport const krakenJsonHelpers = {\n\n    get: getPropertyValueFromDot,\n    getPropertyValueFromDot: getPropertyValueFromDot,\n    set: setPropertyValueFromDot,\n    setPropertyValueFromDot:setPropertyValueFromDot,\n    flatten: objectToDotNotation,\n    objectToDotNotation: objectToDotNotation\n\n}\n\n\n\nfunction getPropertyValueFromDot(key, value){\n    // Retrieves value by following dot notation\n\n    var items =key.split('.');\n    for (let t=0; t<items.length; t++){\n        value = value[items[t]];\n    };\n    return value;\n}\n\n\n\n\nfunction setPropertyValueFromDot(key, record, value){\n    // Retrieves value by following dot notation\n\n    var items = key.split('.');\n\n    let item = items[0]\n\n    \n    if(items.length > 1){\n        if(!record[item]){\n            record[item] = {}\n        }\n        \n        setPropertyValueFromDot(items.slice(1).join('.'), record[item], value)\n    } else {\n\n        record[item] = value\n    }\n\n    return record;\n}\n\n\n\n\nfunction objectToDotNotation(obj, parentPrefix = '') {\n    let result = {};\n\n    // Helper function to handle recursion and path building\n    function recurse(o, path) {\n        for (let key in o) {\n            if (o.hasOwnProperty(key)) {\n                const newPath = path ? `${path}.${key}` : key;\n\n                // If the property is an object or array, recurse further\n                if (typeof o[key] === 'object' && o[key] !== null) {\n                    recurse(o[key], newPath);\n                } else {\n                    // Otherwise, add the property to the result\n                    result[newPath] = o[key];\n                }\n            }\n        }\n    }\n\n    recurse(obj, parentPrefix);\n    return result;\n}"],"names":[],"version":3,"file":"main.js.map"}